/* SPDX-License-Identifier: (GPL-2.0 OR MIT) */
/*
 * Microchip LAN966x Switch driver
 *
 * License: Dual MIT/GPL
 * Copyright (c) 2020 Microchip Technology Inc.
 */

/* This file is autogenerated by cml-utils 2021-05-04 16:49:28 +0200.
 * Commit ID: a178280fee6425f8d1018a605a7aee4e1c15ec4f
 */

#ifndef _LAN966X_BAREMETAL_CPU_REGS_SR_H_
#define _LAN966X_BAREMETAL_CPU_REGS_SR_H_

#define LAN966X_BUILD_ID_REG GCB_BUILDID
#define LAN966X_BUILD_ID 1610532836

enum lan966x_target {
	TARGET_CPU = 6,
	TARGET_DDR_PHY = 9,
	TARGET_DDR_UMCTL2 = 10,
	TARGET_FLEXCOM = 20,
	TARGET_GCB = 25,
	TARGET_GIC400 = 26,
	TARGET_HMATRIX2 = 29,
	TARGET_TIMERS = 53,
	NUM_TARGETS = 65
};

#define __REG(...)    __VA_ARGS__

/*      CPU:CPU_REGS:GPR */
#define CPU_GPR(r)                __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 0, r, 32, 4)

/*      CPU:CPU_REGS:BUILDID */
#define CPU_BUILDID               __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 128, 0, 1, 4)

/*      CPU:CPU_REGS:RESET */
#define CPU_RESET                 __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 132, 0, 1, 4)

#define CPU_RESET_VCORE_RST(x)                   (((x) << 7) & GENMASK(7, 7))
#define CPU_RESET_VCORE_RST_M                    GENMASK(7, 7)
#define CPU_RESET_VCORE_RST_X(x)                 (((x) & GENMASK(7, 7)) >> 7)

#define CPU_RESET_CPU_CORE_0_WARM_RST(x)         (((x) << 6) & GENMASK(6, 6))
#define CPU_RESET_CPU_CORE_0_WARM_RST_M          GENMASK(6, 6)
#define CPU_RESET_CPU_CORE_0_WARM_RST_X(x)       (((x) & GENMASK(6, 6)) >> 6)

#define CPU_RESET_PROC_DBG_RST(x)                (((x) << 5) & GENMASK(5, 5))
#define CPU_RESET_PROC_DBG_RST_M                 GENMASK(5, 5)
#define CPU_RESET_PROC_DBG_RST_X(x)              (((x) & GENMASK(5, 5)) >> 5)

#define CPU_RESET_JTAG_RST(x)                    (((x) << 4) & GENMASK(4, 4))
#define CPU_RESET_JTAG_RST_M                     GENMASK(4, 4)
#define CPU_RESET_JTAG_RST_X(x)                  (((x) & GENMASK(4, 4)) >> 4)

#define CPU_RESET_CPU_L2_RST(x)                  (((x) << 3) & GENMASK(3, 3))
#define CPU_RESET_CPU_L2_RST_M                   GENMASK(3, 3)
#define CPU_RESET_CPU_L2_RST_X(x)                (((x) & GENMASK(3, 3)) >> 3)

#define CPU_RESET_MEM_RST(x)                     (((x) << 2) & GENMASK(2, 2))
#define CPU_RESET_MEM_RST_M                      GENMASK(2, 2)
#define CPU_RESET_MEM_RST_X(x)                   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_RESET_WDT_FORCE_RST(x)               (((x) << 1) & GENMASK(1, 1))
#define CPU_RESET_WDT_FORCE_RST_M                GENMASK(1, 1)
#define CPU_RESET_WDT_FORCE_RST_X(x)             (((x) & GENMASK(1, 1)) >> 1)

#define CPU_RESET_CPU_CORE_0_COLD_RST(x)         ((x) & GENMASK(0, 0))
#define CPU_RESET_CPU_CORE_0_COLD_RST_M          GENMASK(0, 0)
#define CPU_RESET_CPU_CORE_0_COLD_RST_X(x)       ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:RESET_PROT_STAT */
#define CPU_RESET_PROT_STAT       __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 136, 0, 1, 4)

#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE(x) (((x) << 5) & GENMASK(5, 5))
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_M GENMASK(5, 5)
#define CPU_RESET_PROT_STAT_SYS_RST_PROT_VCORE_X(x) (((x) & GENMASK(5, 5)) >> 5)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA(x) (((x) << 4) & GENMASK(4, 4))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA_M GENMASK(4, 4)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_AMBA_X(x)\
	(((x) & GENMASK(4, 4)) >> 4)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT(x) (((x) << 3) & GENMASK(3, 3))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT_M GENMASK(3, 3)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_WDT_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT_M GENMASK(2, 2)
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_PROT_WDT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT(x) (((x) << 1) & GENMASK(1, 1))
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT_M GENMASK(1, 1)
#define CPU_RESET_PROT_STAT_VCORE_WDT_RST_STAT_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE(x) ((x) & GENMASK(0, 0))
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE_M GENMASK(0, 0)
#define CPU_RESET_PROT_STAT_VCORE_RST_PROT_PCIE_X(x) ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:GENERAL_CTRL */
#define CPU_GENERAL_CTRL          __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 140, 0, 1, 4)

#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA(x)      (((x) << 2) & GENMASK(2, 2))
#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA_M       GENMASK(2, 2)
#define CPU_GENERAL_CTRL_IF_MIIM_SLV_ENA_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define CPU_GENERAL_CTRL_VCORE_CPU_DIS(x)        (((x) << 1) & GENMASK(1, 1))
#define CPU_GENERAL_CTRL_VCORE_CPU_DIS_M         GENMASK(1, 1)
#define CPU_GENERAL_CTRL_VCORE_CPU_DIS_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define CPU_GENERAL_CTRL_IF_SI_OWNER(x)          ((x) & GENMASK(0, 0))
#define CPU_GENERAL_CTRL_IF_SI_OWNER_M           GENMASK(0, 0)
#define CPU_GENERAL_CTRL_IF_SI_OWNER_X(x)        ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:GENERAL_STAT */
#define CPU_GENERAL_STAT          __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 144, 0, 1, 4)

#define CPU_GENERAL_STAT_REG_IF_ERR(x)           (((x) << 7) & GENMASK(9, 7))
#define CPU_GENERAL_STAT_REG_IF_ERR_M            GENMASK(9, 7)
#define CPU_GENERAL_STAT_REG_IF_ERR_X(x)         (((x) & GENMASK(9, 7)) >> 7)

#define CPU_GENERAL_STAT_CSR_REG_IF_ERR(x)       (((x) << 4) & GENMASK(6, 4))
#define CPU_GENERAL_STAT_CSR_REG_IF_ERR_M        GENMASK(6, 4)
#define CPU_GENERAL_STAT_CSR_REG_IF_ERR_X(x)     (((x) & GENMASK(6, 4)) >> 4)

#define CPU_GENERAL_STAT_VCORE_CFG(x)            ((x) & GENMASK(3, 0))
#define CPU_GENERAL_STAT_VCORE_CFG_M             GENMASK(3, 0)
#define CPU_GENERAL_STAT_VCORE_CFG_X(x)          ((x) & GENMASK(3, 0))

/*      CPU:CPU_REGS:OTP_STAT */
#define CPU_OTP_STAT              __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 148, 0, 1, 4)

#define CPU_OTP_STAT_OTP_PROGRAMMED(x)           (((x) << 4) & GENMASK(4, 4))
#define CPU_OTP_STAT_OTP_PROGRAMMED_M            GENMASK(4, 4)
#define CPU_OTP_STAT_OTP_PROGRAMMED_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define CPU_OTP_STAT_OTP_CPU_DISABLED(x)         (((x) << 3) & GENMASK(3, 3))
#define CPU_OTP_STAT_OTP_CPU_DISABLED_M          GENMASK(3, 3)
#define CPU_OTP_STAT_OTP_CPU_DISABLED_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define CPU_OTP_STAT_OTP_CPU_DBG_DISABLED(x)     (((x) << 2) & GENMASK(2, 2))
#define CPU_OTP_STAT_OTP_CPU_DBG_DISABLED_M      GENMASK(2, 2)
#define CPU_OTP_STAT_OTP_CPU_DBG_DISABLED_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_OTP_STAT_OTP_CPU_SEC_DBG_DISABLED(x) (((x) << 1) & GENMASK(1, 1))
#define CPU_OTP_STAT_OTP_CPU_SEC_DBG_DISABLED_M  GENMASK(1, 1)
#define CPU_OTP_STAT_OTP_CPU_SEC_DBG_DISABLED_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define CPU_OTP_STAT_OTP_CAN_DISABLED(x)         ((x) & GENMASK(0, 0))
#define CPU_OTP_STAT_OTP_CAN_DISABLED_M          GENMASK(0, 0)
#define CPU_OTP_STAT_OTP_CAN_DISABLED_X(x)       ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:CPU_DBG */
#define CPU_CPU_DBG               __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 152, 0, 1, 4)

#define CPU_CPU_DBG_ENABLE_PROT_DEBUG_BIT(x)     (((x) << 5) & GENMASK(5, 5))
#define CPU_CPU_DBG_ENABLE_PROT_DEBUG_BIT_M      GENMASK(5, 5)
#define CPU_CPU_DBG_ENABLE_PROT_DEBUG_BIT_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define CPU_CPU_DBG_DBGEN(x)                     (((x) << 4) & GENMASK(4, 4))
#define CPU_CPU_DBG_DBGEN_M                      GENMASK(4, 4)
#define CPU_CPU_DBG_DBGEN_X(x)                   (((x) & GENMASK(4, 4)) >> 4)

#define CPU_CPU_DBG_SPIDEN(x)                    (((x) << 3) & GENMASK(3, 3))
#define CPU_CPU_DBG_SPIDEN_M                     GENMASK(3, 3)
#define CPU_CPU_DBG_SPIDEN_X(x)                  (((x) & GENMASK(3, 3)) >> 3)

#define CPU_CPU_DBG_NIDEN(x)                     (((x) << 2) & GENMASK(2, 2))
#define CPU_CPU_DBG_NIDEN_M                      GENMASK(2, 2)
#define CPU_CPU_DBG_NIDEN_X(x)                   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_CPU_DBG_SPNIDEN(x)                   (((x) << 1) & GENMASK(1, 1))
#define CPU_CPU_DBG_SPNIDEN_M                    GENMASK(1, 1)
#define CPU_CPU_DBG_SPNIDEN_X(x)                 (((x) & GENMASK(1, 1)) >> 1)

#define CPU_CPU_DBG_CORE_IN_DBG(x)               ((x) & GENMASK(0, 0))
#define CPU_CPU_DBG_CORE_IN_DBG_M                GENMASK(0, 0)
#define CPU_CPU_DBG_CORE_IN_DBG_X(x)             ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:ENDIANNESS */
#define CPU_ENDIANNESS            __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 156, 0, 1, 4)

#define CPU_ENDIANNESS_REG_IF_BIGENDIAN(x)       ((x) & GENMASK(0, 0))
#define CPU_ENDIANNESS_REG_IF_BIGENDIAN_M        GENMASK(0, 0)
#define CPU_ENDIANNESS_REG_IF_BIGENDIAN_X(x)     ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:PROC_CTRL */
#define CPU_PROC_CTRL             __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 160, 0, 1, 4)

#define CPU_PROC_CTRL_BE_EXCEP_MODE(x)           (((x) << 4) & GENMASK(4, 4))
#define CPU_PROC_CTRL_BE_EXCEP_MODE_M            GENMASK(4, 4)
#define CPU_PROC_CTRL_BE_EXCEP_MODE_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define CPU_PROC_CTRL_VINITHI(x)                 (((x) << 3) & GENMASK(3, 3))
#define CPU_PROC_CTRL_VINITHI_M                  GENMASK(3, 3)
#define CPU_PROC_CTRL_VINITHI_X(x)               (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PROC_CTRL_CFGTE(x)                   (((x) << 2) & GENMASK(2, 2))
#define CPU_PROC_CTRL_CFGTE_M                    GENMASK(2, 2)
#define CPU_PROC_CTRL_CFGTE_X(x)                 (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PROC_CTRL_CP15S_DISABLE(x)           (((x) << 1) & GENMASK(1, 1))
#define CPU_PROC_CTRL_CP15S_DISABLE_M            GENMASK(1, 1)
#define CPU_PROC_CTRL_CP15S_DISABLE_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE(x)     ((x) & GENMASK(0, 0))
#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE_M      GENMASK(0, 0)
#define CPU_PROC_CTRL_PROC_CRYPTO_DISABLE_X(x)   ((x) & GENMASK(0, 0))

/*      CPU:CPU_REGS:PROC_STAT */
#define CPU_PROC_STAT             __REG(TARGET_CPU,\
					0, 1, 0, 0, 1, 168, 164, 0, 1, 4)

#define CPU_PROC_STAT_DAP_JTAG_SW_MODE(x)        (((x) << 3) & GENMASK(3, 3))
#define CPU_PROC_STAT_DAP_JTAG_SW_MODE_M         GENMASK(3, 3)
#define CPU_PROC_STAT_DAP_JTAG_SW_MODE_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PROC_STAT_WFI(x)                     (((x) << 2) & GENMASK(2, 2))
#define CPU_PROC_STAT_WFI_M                      GENMASK(2, 2)
#define CPU_PROC_STAT_WFI_X(x)                   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PROC_STAT_WFIL2(x)                   (((x) << 1) & GENMASK(1, 1))
#define CPU_PROC_STAT_WFIL2_M                    GENMASK(1, 1)
#define CPU_PROC_STAT_WFIL2_X(x)                 (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PROC_STAT_WFE(x)                     ((x) & GENMASK(0, 0))
#define CPU_PROC_STAT_WFE_M                      GENMASK(0, 0)
#define CPU_PROC_STAT_WFE_X(x)                   ((x) & GENMASK(0, 0))

/*      CPU:GCK_REGS:GCK_CFG */
#define CPU_GCK_CFG(r)            __REG(TARGET_CPU,\
					0, 1, 168, 0, 1, 56, 0, r, 14, 4)

#define CPU_GCK_CFG_GCK_PRESCALER(x)             (((x) << 16) & GENMASK(23, 16))
#define CPU_GCK_CFG_GCK_PRESCALER_M              GENMASK(23, 16)
#define CPU_GCK_CFG_GCK_PRESCALER_X(x)           (((x) & GENMASK(23, 16)) >> 16)

#define CPU_GCK_CFG_GCK_SRC_SEL(x)               (((x) << 8) & GENMASK(9, 8))
#define CPU_GCK_CFG_GCK_SRC_SEL_M                GENMASK(9, 8)
#define CPU_GCK_CFG_GCK_SRC_SEL_X(x)             (((x) & GENMASK(9, 8)) >> 8)

#define CPU_GCK_CFG_GCK_ENA(x)                   ((x) & GENMASK(0, 0))
#define CPU_GCK_CFG_GCK_ENA_M                    GENMASK(0, 0)
#define CPU_GCK_CFG_GCK_ENA_X(x)                 ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_CFG */
#define CPU_USB_CFG               __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 0, 0, 1, 4)

#define CPU_USB_CFG_DEB_CYCLES_CNT(x)            (((x) << 2) & GENMASK(25, 2))
#define CPU_USB_CFG_DEB_CYCLES_CNT_M             GENMASK(25, 2)
#define CPU_USB_CFG_DEB_CYCLES_CNT_X(x)          (((x) & GENMASK(25, 2)) >> 2)

#define CPU_USB_CFG_VBUS_DET_POL(x)              (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_CFG_VBUS_DET_POL_M               GENMASK(1, 1)
#define CPU_USB_CFG_VBUS_DET_POL_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_CFG_OCS_N_POL(x)                 ((x) & GENMASK(0, 0))
#define CPU_USB_CFG_OCS_N_POL_M                  GENMASK(0, 0)
#define CPU_USB_CFG_OCS_N_POL_X(x)               ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_CTRL */
#define CPU_USB_CTRL              __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 4, 0, 1, 4)

#define CPU_USB_CTRL_FLADJ_30MHZ_REG(x)          (((x) << 5) & GENMASK(10, 5))
#define CPU_USB_CTRL_FLADJ_30MHZ_REG_M           GENMASK(10, 5)
#define CPU_USB_CTRL_FLADJ_30MHZ_REG_X(x)        (((x) & GENMASK(10, 5)) >> 5)

#define CPU_USB_CTRL_POWER_EN(x)                 ((x) & GENMASK(0, 0))
#define CPU_USB_CTRL_POWER_EN_M                  GENMASK(0, 0)
#define CPU_USB_CTRL_POWER_EN_X(x)               ((x) & GENMASK(0, 0))

#define CPU_USB_CTRL_OCS_TO_DWC_USB3(x)          (((x) << 2) & GENMASK(2, 2))
#define CPU_USB_CTRL_OCS_TO_DWC_USB3_M           GENMASK(2, 2)
#define CPU_USB_CTRL_OCS_TO_DWC_USB3_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define CPU_USB_CTRL_POWER_EN_CONTROL(x)         (((x) << 3) & GENMASK(3, 3))
#define CPU_USB_CTRL_POWER_EN_CONTROL_M          GENMASK(3, 3)
#define CPU_USB_CTRL_POWER_EN_CONTROL_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define CPU_USB_CTRL_PORT_POWER_CONTROL_PRESENT(x) (((x) << 4) & GENMASK(4, 4))
#define CPU_USB_CTRL_PORT_POWER_CONTROL_PRESENT_M GENMASK(4, 4)
#define CPU_USB_CTRL_PORT_POWER_CONTROL_PRESENT_X(x)\
	(((x) & GENMASK(4, 4)) >> 4)

/*      CPU:USB_REGS:USB_STAT */
#define CPU_USB_STAT              __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 8, 0, 1, 4)

#define CPU_USB_STAT_CLK_GATE_CTRL(x)            (((x) << 3) & GENMASK(5, 3))
#define CPU_USB_STAT_CLK_GATE_CTRL_M             GENMASK(5, 3)
#define CPU_USB_STAT_CLK_GATE_CTRL_X(x)          (((x) & GENMASK(5, 3)) >> 3)

#define CPU_USB_STAT_HOST_SYS_ERR(x)             (((x) << 2) & GENMASK(2, 2))
#define CPU_USB_STAT_HOST_SYS_ERR_M              GENMASK(2, 2)
#define CPU_USB_STAT_HOST_SYS_ERR_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define CPU_USB_STAT_OCS_N(x)                    (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_STAT_OCS_N_M                     GENMASK(1, 1)
#define CPU_USB_STAT_OCS_N_X(x)                  (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_STAT_VBUS_DET(x)                 ((x) & GENMASK(0, 0))
#define CPU_USB_STAT_VBUS_DET_M                  GENMASK(0, 0)
#define CPU_USB_STAT_VBUS_DET_X(x)               ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_INTR */
#define CPU_USB_INTR              __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 12, 0, 1, 4)

#define CPU_USB_INTR_INTR_OCS_N_STICKY(x)        (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_INTR_INTR_OCS_N_STICKY_M         GENMASK(1, 1)
#define CPU_USB_INTR_INTR_OCS_N_STICKY_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_INTR_INTR_VBUS_DET_STICKY(x)     ((x) & GENMASK(0, 0))
#define CPU_USB_INTR_INTR_VBUS_DET_STICKY_M      GENMASK(0, 0)
#define CPU_USB_INTR_INTR_VBUS_DET_STICKY_X(x)   ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_INTR_ENA */
#define CPU_USB_INTR_ENA          __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 16, 0, 1, 4)

#define CPU_USB_INTR_ENA_INTR_ENA_OCS_N(x)       (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_INTR_ENA_INTR_ENA_OCS_N_M        GENMASK(1, 1)
#define CPU_USB_INTR_ENA_INTR_ENA_OCS_N_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_INTR_ENA_INTR_ENA_VBUS_DET(x)    ((x) & GENMASK(0, 0))
#define CPU_USB_INTR_ENA_INTR_ENA_VBUS_DET_M     GENMASK(0, 0)
#define CPU_USB_INTR_ENA_INTR_ENA_VBUS_DET_X(x)  ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_INTR_IDENT */
#define CPU_USB_INTR_IDENT        __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 20, 0, 1, 4)

#define CPU_USB_INTR_IDENT_INTR_IDENT_OCS_N(x)   (((x) << 1) & GENMASK(1, 1))
#define CPU_USB_INTR_IDENT_INTR_IDENT_OCS_N_M    GENMASK(1, 1)
#define CPU_USB_INTR_IDENT_INTR_IDENT_OCS_N_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define CPU_USB_INTR_IDENT_INTR_IDENT_VBUS_DET(x) ((x) & GENMASK(0, 0))
#define CPU_USB_INTR_IDENT_INTR_IDENT_VBUS_DET_M GENMASK(0, 0)
#define CPU_USB_INTR_IDENT_INTR_IDENT_VBUS_DET_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB_REGS:USB_DEBUG1 */
#define CPU_USB_DEBUG1            __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 24, 0, 1, 4)

/*      CPU:USB_REGS:USB_DEBUG2 */
#define CPU_USB_DEBUG2            __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 28, 0, 1, 4)

/*      CPU:USB_REGS:USB_DEBUG3 */
#define CPU_USB_DEBUG3            __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 32, 0, 1, 4)

#define CPU_USB_DEBUG3_DEBUG3(x)                 ((x) & GENMASK(2, 0))
#define CPU_USB_DEBUG3_DEBUG3_M                  GENMASK(2, 0)
#define CPU_USB_DEBUG3_DEBUG3_X(x)               ((x) & GENMASK(2, 0))

/*      CPU:USB_REGS:USB_LA_TRACE1 */
#define CPU_USB_LA_TRACE1         __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 36, 0, 1, 4)

/*      CPU:USB_REGS:USB_LA_TRACE2 */
#define CPU_USB_LA_TRACE2         __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 40, 0, 1, 4)

/*      CPU:USB_REGS:USB_GGPIO */
#define CPU_USB_GGPIO             __REG(TARGET_CPU,\
					0, 1, 224, 0, 1, 48, 44, 0, 1, 4)

#define CPU_USB_GGPIO_GPO(x)                     (((x) << 16) & GENMASK(31, 16))
#define CPU_USB_GGPIO_GPO_M                      GENMASK(31, 16)
#define CPU_USB_GGPIO_GPO_X(x)                   (((x) & GENMASK(31, 16)) >> 16)

#define CPU_USB_GGPIO_GPI(x)                     ((x) & GENMASK(15, 0))
#define CPU_USB_GGPIO_GPI_M                      GENMASK(15, 0)
#define CPU_USB_GGPIO_GPI_X(x)                   ((x) & GENMASK(15, 0))

/*      CPU:MIIM_TARGET:MIIM_TARGET_CFG */
#define CPU_MIIM_TARGET_CFG       __REG(TARGET_CPU,\
					0, 1, 272, 0, 1, 4, 0, 0, 1, 4)

#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_CFG(x)  (((x) << 1) & GENMASK(5, 1))
#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_CFG_M   GENMASK(5, 1)
#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_CFG_X(x) (((x) & GENMASK(5, 1)) >> 1)

#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_ENA(x)  ((x) & GENMASK(0, 0))
#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_ENA_M   GENMASK(0, 0)
#define CPU_MIIM_TARGET_CFG_SPIKE_FILTER_ENA_X(x) ((x) & GENMASK(0, 0))

/*      CPU:VCORE_ACC:VCORE_ACC_CFG */
#define CPU_VCORE_ACC_CFG         __REG(TARGET_CPU,\
					0, 1, 276, 0, 1, 4, 0, 0, 1, 4)

#define CPU_VCORE_ACC_CFG_DIS_VA_RD_ERR(x)       ((x) & GENMASK(0, 0))
#define CPU_VCORE_ACC_CFG_DIS_VA_RD_ERR_M        GENMASK(0, 0)
#define CPU_VCORE_ACC_CFG_DIS_VA_RD_ERR_X(x)     ((x) & GENMASK(0, 0))

/*      CPU:MSIX_ACC:MSIX_ACC_CFG */
#define CPU_MSIX_ACC_CFG          __REG(TARGET_CPU,\
					0, 1, 280, 0, 1, 4, 0, 0, 1, 4)

#define CPU_MSIX_ACC_CFG_DIS_MSIX_RD_ERR(x)      ((x) & GENMASK(0, 0))
#define CPU_MSIX_ACC_CFG_DIS_MSIX_RD_ERR_M       GENMASK(0, 0)
#define CPU_MSIX_ACC_CFG_DIS_MSIX_RD_ERR_X(x)    ((x) & GENMASK(0, 0))

/*      CPU:EXT_IF_ACC_STAT:EXT_IF_ACC_STAT */
#define CPU_EXT_IF_ACC_STAT       __REG(TARGET_CPU,\
					0, 1, 284, 0, 1, 4, 0, 0, 1, 4)

#define CPU_EXT_IF_ACC_STAT_VRAP_ACC_STAT(x)     ((x) & GENMASK(2, 0))
#define CPU_EXT_IF_ACC_STAT_VRAP_ACC_STAT_M      GENMASK(2, 0)
#define CPU_EXT_IF_ACC_STAT_VRAP_ACC_STAT_X(x)   ((x) & GENMASK(2, 0))

#define CPU_EXT_IF_ACC_STAT_SI_ACC_STAT(x)       (((x) << 4) & GENMASK(6, 4))
#define CPU_EXT_IF_ACC_STAT_SI_ACC_STAT_M        GENMASK(6, 4)
#define CPU_EXT_IF_ACC_STAT_SI_ACC_STAT_X(x)     (((x) & GENMASK(6, 4)) >> 4)

#define CPU_EXT_IF_ACC_STAT_MIIM_ACC_STAT(x)     (((x) << 12) & GENMASK(14, 12))
#define CPU_EXT_IF_ACC_STAT_MIIM_ACC_STAT_M      GENMASK(14, 12)
#define CPU_EXT_IF_ACC_STAT_MIIM_ACC_STAT_X(x)   (((x) & GENMASK(14, 12)) >> 12)

#define CPU_EXT_IF_ACC_STAT_VA_ACC_STAT(x)       (((x) << 16) & GENMASK(18, 16))
#define CPU_EXT_IF_ACC_STAT_VA_ACC_STAT_M        GENMASK(18, 16)
#define CPU_EXT_IF_ACC_STAT_VA_ACC_STAT_X(x)     (((x) & GENMASK(18, 16)) >> 16)

#define CPU_EXT_IF_ACC_STAT_MSIX_ACC_STAT(x)     (((x) << 20) & GENMASK(22, 20))
#define CPU_EXT_IF_ACC_STAT_MSIX_ACC_STAT_M      GENMASK(22, 20)
#define CPU_EXT_IF_ACC_STAT_MSIX_ACC_STAT_X(x)   (((x) & GENMASK(22, 20)) >> 20)

/*      CPU:INTR:INTR_RAW */
#define CPU_INTR_RAW              __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 0, 0, 1, 4)

/*      CPU:INTR:INTR_RAW1 */
#define CPU_INTR_RAW1             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 4, 0, 1, 4)

/*      CPU:INTR:INTR_RAW2 */
#define CPU_INTR_RAW2             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 8, 0, 1, 4)

/*      CPU:INTR:INTR_TRIGGER */
#define CPU_INTR_TRIGGER(r)       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 12, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER1 */
#define CPU_INTR_TRIGGER1(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 20, r, 2, 4)

/*      CPU:INTR:INTR_TRIGGER2 */
#define CPU_INTR_TRIGGER2(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 28, r, 2, 4)

/*      CPU:INTR:INTR_FORCE */
#define CPU_INTR_FORCE            __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 36, 0, 1, 4)

/*      CPU:INTR:INTR_FORCE1 */
#define CPU_INTR_FORCE1           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 40, 0, 1, 4)

/*      CPU:INTR:INTR_FORCE2 */
#define CPU_INTR_FORCE2           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 44, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY */
#define CPU_INTR_STICKY           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 48, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY1 */
#define CPU_INTR_STICKY1          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 52, 0, 1, 4)

/*      CPU:INTR:INTR_STICKY2 */
#define CPU_INTR_STICKY2          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 56, 0, 1, 4)

/*      CPU:INTR:INTR_BYPASS */
#define CPU_INTR_BYPASS           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 60, 0, 1, 4)

/*      CPU:INTR:INTR_BYPASS1 */
#define CPU_INTR_BYPASS1          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 64, 0, 1, 4)

/*      CPU:INTR:INTR_BYPASS2 */
#define CPU_INTR_BYPASS2          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 68, 0, 1, 4)

/*      CPU:INTR:INTR_ENA */
#define CPU_INTR_ENA              __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 72, 0, 1, 4)

/*      CPU:INTR:INTR_ENA1 */
#define CPU_INTR_ENA1             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 76, 0, 1, 4)

/*      CPU:INTR:INTR_ENA2 */
#define CPU_INTR_ENA2             __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 80, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR */
#define CPU_INTR_ENA_CLR          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 84, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR1 */
#define CPU_INTR_ENA_CLR1         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 88, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_CLR2 */
#define CPU_INTR_ENA_CLR2         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 92, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET */
#define CPU_INTR_ENA_SET          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 96, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET1 */
#define CPU_INTR_ENA_SET1         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 100, 0, 1, 4)

/*      CPU:INTR:INTR_ENA_SET2 */
#define CPU_INTR_ENA_SET2         __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 104, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT */
#define CPU_INTR_IDENT            __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 108, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT1 */
#define CPU_INTR_IDENT1           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 112, 0, 1, 4)

/*      CPU:INTR:INTR_IDENT2 */
#define CPU_INTR_IDENT2           __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 116, 0, 1, 4)

/*      CPU:INTR:DST_INTR_MAP */
#define CPU_DST_INTR_MAP(r)       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 120, r, 9, 4)

/*      CPU:INTR:DST_INTR_MAP1 */
#define CPU_DST_INTR_MAP1(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 156, r, 9, 4)

/*      CPU:INTR:DST_INTR_MAP2 */
#define CPU_DST_INTR_MAP2(r)      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 192, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT */
#define CPU_DST_INTR_IDENT(r)     __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 228, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT1 */
#define CPU_DST_INTR_IDENT1(r)    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 264, r, 9, 4)

/*      CPU:INTR:DST_INTR_IDENT2 */
#define CPU_DST_INTR_IDENT2(r)    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 300, r, 9, 4)

/*      CPU:INTR:EXT_SRC_INTR_POL */
#define CPU_EXT_SRC_INTR_POL      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 336, 0, 1, 4)

#define CPU_EXT_SRC_INTR_POL_EXT_SRC_INTR_POL(x) ((x) & GENMASK(7, 0))
#define CPU_EXT_SRC_INTR_POL_EXT_SRC_INTR_POL_M  GENMASK(7, 0)
#define CPU_EXT_SRC_INTR_POL_EXT_SRC_INTR_POL_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:EXT_DST_INTR_POL */
#define CPU_EXT_DST_INTR_POL      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 340, 0, 1, 4)

#define CPU_EXT_DST_INTR_POL_EXT_DST_INTR_POL(x) ((x) & GENMASK(7, 0))
#define CPU_EXT_DST_INTR_POL_EXT_DST_INTR_POL_M  GENMASK(7, 0)
#define CPU_EXT_DST_INTR_POL_EXT_DST_INTR_POL_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:EXT_DST_INTR_DRV */
#define CPU_EXT_DST_INTR_DRV      __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 344, 0, 1, 4)

#define CPU_EXT_DST_INTR_DRV_EXT_DST_INTR_DRV(x) ((x) & GENMASK(7, 0))
#define CPU_EXT_DST_INTR_DRV_EXT_DST_INTR_DRV_M  GENMASK(7, 0)
#define CPU_EXT_DST_INTR_DRV_EXT_DST_INTR_DRV_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_POL */
#define CPU_DEV_INTR_POL          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 348, 0, 1, 4)

#define CPU_DEV_INTR_POL_DEV_INTR_POL(x)         ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_POL_DEV_INTR_POL_M          GENMASK(7, 0)
#define CPU_DEV_INTR_POL_DEV_INTR_POL_X(x)       ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_RAW */
#define CPU_DEV_INTR_RAW          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 352, 0, 1, 4)

#define CPU_DEV_INTR_RAW_DEV_INTR_RAW(x)         ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_RAW_DEV_INTR_RAW_M          GENMASK(7, 0)
#define CPU_DEV_INTR_RAW_DEV_INTR_RAW_X(x)       ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_TRIGGER */
#define CPU_DEV_INTR_TRIGGER(r)   __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 356, r, 2, 4)

#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER(x) ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER_M  GENMASK(7, 0)
#define CPU_DEV_INTR_TRIGGER_DEV_INTR_TRIGGER_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_STICKY */
#define CPU_DEV_INTR_STICKY       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 364, 0, 1, 4)

#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY(x)   ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY_M    GENMASK(7, 0)
#define CPU_DEV_INTR_STICKY_DEV_INTR_STICKY_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_BYPASS */
#define CPU_DEV_INTR_BYPASS       __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 368, 0, 1, 4)

#define CPU_DEV_INTR_BYPASS_DEV_INTR_BYPASS(x)   ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_BYPASS_DEV_INTR_BYPASS_M    GENMASK(7, 0)
#define CPU_DEV_INTR_BYPASS_DEV_INTR_BYPASS_X(x) ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_ENA */
#define CPU_DEV_INTR_ENA          __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 372, 0, 1, 4)

#define CPU_DEV_INTR_ENA_DEV_INTR_ENA(x)         ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_ENA_DEV_INTR_ENA_M          GENMASK(7, 0)
#define CPU_DEV_INTR_ENA_DEV_INTR_ENA_X(x)       ((x) & GENMASK(7, 0))

/*      CPU:INTR:DEV_INTR_IDENT */
#define CPU_DEV_INTR_IDENT        __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 376, 0, 1, 4)

#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT(x)     ((x) & GENMASK(7, 0))
#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT_M      GENMASK(7, 0)
#define CPU_DEV_INTR_IDENT_DEV_INTR_IDENT_X(x)   ((x) & GENMASK(7, 0))

/*      CPU:INTR:MSIX_CFG */
#define CPU_MSIX_CFG              __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 380, 0, 1, 4)

#define CPU_MSIX_CFG_MSIX_ENA(x)                 (((x) << 17) & GENMASK(17, 17))
#define CPU_MSIX_CFG_MSIX_ENA_M                  GENMASK(17, 17)
#define CPU_MSIX_CFG_MSIX_ENA_X(x)               (((x) & GENMASK(17, 17)) >> 17)

#define CPU_MSIX_CFG_MSIX_DOORBELL_TC(x)         (((x) << 14) & GENMASK(16, 14))
#define CPU_MSIX_CFG_MSIX_DOORBELL_TC_M          GENMASK(16, 14)
#define CPU_MSIX_CFG_MSIX_DOORBELL_TC_X(x)       (((x) & GENMASK(16, 14)) >> 14)

#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_ACTIVE(x)  (((x) << 13) & GENMASK(13, 13))
#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_ACTIVE_M   GENMASK(13, 13)
#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_ACTIVE_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

#define CPU_MSIX_CFG_MSIX_DOORBELL_VF(x)         (((x) << 5) & GENMASK(12, 5))
#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_M          GENMASK(12, 5)
#define CPU_MSIX_CFG_MSIX_DOORBELL_VF_X(x)       (((x) & GENMASK(12, 5)) >> 5)

#define CPU_MSIX_CFG_MSIX_DOORBELL_PF(x)         ((x) & GENMASK(4, 0))
#define CPU_MSIX_CFG_MSIX_DOORBELL_PF_M          GENMASK(4, 0)
#define CPU_MSIX_CFG_MSIX_DOORBELL_PF_X(x)       ((x) & GENMASK(4, 0))

/*      CPU:INTR:MSIX_DOORBELL_ADDR */
#define CPU_MSIX_DOORBELL_ADDR    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 384, 0, 1, 4)

/*      CPU:INTR:MSIX_INTR_PENDING */
#define CPU_MSIX_INTR_PENDING     __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 388, 0, 1, 4)

/*      CPU:INTR:MSIX_INTR_PENDING1 */
#define CPU_MSIX_INTR_PENDING1    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 392, 0, 1, 4)

/*      CPU:INTR:MSIX_INTR_PENDING2 */
#define CPU_MSIX_INTR_PENDING2    __REG(TARGET_CPU,\
					0, 1, 288, 0, 1, 400, 396, 0, 1, 4)

/*      CPU:DDRCTRL:DDRCTRL_CLK */
#define CPU_DDRCTRL_CLK           __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 0, 0, 1, 4)

#define CPU_DDRCTRL_CLK_DDR_CLK_ENA(x)           ((x) & GENMASK(0, 0))
#define CPU_DDRCTRL_CLK_DDR_CLK_ENA_M            GENMASK(0, 0)
#define CPU_DDRCTRL_CLK_DDR_CLK_ENA_X(x)         ((x) & GENMASK(0, 0))

#define CPU_DDRCTRL_CLK_DDR_AXI0_CLK_ENA(x)      (((x) << 1) & GENMASK(1, 1))
#define CPU_DDRCTRL_CLK_DDR_AXI0_CLK_ENA_M       GENMASK(1, 1)
#define CPU_DDRCTRL_CLK_DDR_AXI0_CLK_ENA_X(x)    (((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRCTRL_CLK_DDR_AXI1_CLK_ENA(x)      (((x) << 2) & GENMASK(2, 2))
#define CPU_DDRCTRL_CLK_DDR_AXI1_CLK_ENA_M       GENMASK(2, 2)
#define CPU_DDRCTRL_CLK_DDR_AXI1_CLK_ENA_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRCTRL_CLK_DDR_AXI2_CLK_ENA(x)      (((x) << 3) & GENMASK(3, 3))
#define CPU_DDRCTRL_CLK_DDR_AXI2_CLK_ENA_M       GENMASK(3, 3)
#define CPU_DDRCTRL_CLK_DDR_AXI2_CLK_ENA_X(x)    (((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA(x)       (((x) << 4) & GENMASK(4, 4))
#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA_M        GENMASK(4, 4)
#define CPU_DDRCTRL_CLK_DDR_APB_CLK_ENA_X(x)     (((x) & GENMASK(4, 4)) >> 4)

#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA(x)    (((x) << 5) & GENMASK(5, 5))
#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA_M     GENMASK(5, 5)
#define CPU_DDRCTRL_CLK_DDRPHY_CTL_CLK_ENA_X(x)  (((x) & GENMASK(5, 5)) >> 5)

#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA(x)    (((x) << 6) & GENMASK(6, 6))
#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA_M     GENMASK(6, 6)
#define CPU_DDRCTRL_CLK_DDRPHY_APB_CLK_ENA_X(x)  (((x) & GENMASK(6, 6)) >> 6)

#define CPU_DDRCTRL_CLK_RAM_RING_ENA(x)          (((x) << 7) & GENMASK(7, 7))
#define CPU_DDRCTRL_CLK_RAM_RING_ENA_M           GENMASK(7, 7)
#define CPU_DDRCTRL_CLK_RAM_RING_ENA_X(x)        (((x) & GENMASK(7, 7)) >> 7)

/*      CPU:DDRCTRL:DDRCTRL_RST */
#define CPU_DDRCTRL_RST           __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 4, 0, 1, 4)

#define CPU_DDRCTRL_RST_DDRC_RST(x)              ((x) & GENMASK(0, 0))
#define CPU_DDRCTRL_RST_DDRC_RST_M               GENMASK(0, 0)
#define CPU_DDRCTRL_RST_DDRC_RST_X(x)            ((x) & GENMASK(0, 0))

#define CPU_DDRCTRL_RST_DDR_AXI0_RST(x)          (((x) << 1) & GENMASK(1, 1))
#define CPU_DDRCTRL_RST_DDR_AXI0_RST_M           GENMASK(1, 1)
#define CPU_DDRCTRL_RST_DDR_AXI0_RST_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRCTRL_RST_DDR_AXI1_RST(x)          (((x) << 2) & GENMASK(2, 2))
#define CPU_DDRCTRL_RST_DDR_AXI1_RST_M           GENMASK(2, 2)
#define CPU_DDRCTRL_RST_DDR_AXI1_RST_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRCTRL_RST_DDR_AXI2_RST(x)          (((x) << 3) & GENMASK(3, 3))
#define CPU_DDRCTRL_RST_DDR_AXI2_RST_M           GENMASK(3, 3)
#define CPU_DDRCTRL_RST_DDR_AXI2_RST_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define CPU_DDRCTRL_RST_DDR_APB_RST(x)           (((x) << 4) & GENMASK(4, 4))
#define CPU_DDRCTRL_RST_DDR_APB_RST_M            GENMASK(4, 4)
#define CPU_DDRCTRL_RST_DDR_APB_RST_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST(x)        (((x) << 5) & GENMASK(5, 5))
#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST_M         GENMASK(5, 5)
#define CPU_DDRCTRL_RST_DDRPHY_CTL_RST_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define CPU_DDRCTRL_RST_FPGA_DDRPHY_SOFT_RST(x)  (((x) << 6) & GENMASK(6, 6))
#define CPU_DDRCTRL_RST_FPGA_DDRPHY_SOFT_RST_M   GENMASK(6, 6)
#define CPU_DDRCTRL_RST_FPGA_DDRPHY_SOFT_RST_X(x) (((x) & GENMASK(6, 6)) >> 6)

#define CPU_DDRCTRL_RST_DDRPHY_APB_RST(x)        (((x) << 7) & GENMASK(7, 7))
#define CPU_DDRCTRL_RST_DDRPHY_APB_RST_M         GENMASK(7, 7)
#define CPU_DDRCTRL_RST_DDRPHY_APB_RST_X(x)      (((x) & GENMASK(7, 7)) >> 7)

/*      CPU:DDRCTRL:DDRC_INTR_RAW_STAT */
#define CPU_DDRC_INTR_RAW_STAT    __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 8, 0, 1, 4)

#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT_M GENMASK(0, 0)
#define CPU_DDRC_INTR_RAW_STAT_SBR_DONE_INTR_RAW_STAT_X(x) ((x) & GENMASK(0, 0))

#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT_M GENMASK(1, 1)
#define CPU_DDRC_INTR_RAW_STAT_ECC_CORRECTED_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT_M GENMASK(2, 2)
#define CPU_DDRC_INTR_RAW_STAT_ECC_UNCORRECTED_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_RAW_STAT_ECC_AP_ERR_INTR_RAW_STAT(x)\
	(((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_RAW_STAT_ECC_AP_ERR_INTR_RAW_STAT_M GENMASK(3, 3)
#define CPU_DDRC_INTR_RAW_STAT_ECC_AP_ERR_INTR_RAW_STAT_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

/*      CPU:DDRCTRL:DDRC_INTR_MASK */
#define CPU_DDRC_INTR_MASK        __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 12, 0, 1, 4)

#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK_M  GENMASK(0, 0)
#define CPU_DDRC_INTR_MASK_SBR_DONE_INTR_MASK_X(x) ((x) & GENMASK(0, 0))

#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK_M GENMASK(1, 1)
#define CPU_DDRC_INTR_MASK_ECC_CORRECTED_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK_M GENMASK(2, 2)
#define CPU_DDRC_INTR_MASK_ECC_UNCORRECTED_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_MASK_ECC_AP_ERR_INTR_MASK(x) (((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_MASK_ECC_AP_ERR_INTR_MASK_M GENMASK(3, 3)
#define CPU_DDRC_INTR_MASK_ECC_AP_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

/*      CPU:DDRCTRL:DDRC_INTR_MASKED_STAT */
#define CPU_DDRC_INTR_MASKED_STAT __REG(TARGET_CPU,\
					0, 1, 688, 0, 1, 20, 16, 0, 1, 4)

#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT(x) ((x) & GENMASK(0, 0))
#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT_M GENMASK(0, 0)
#define CPU_DDRC_INTR_MASKED_STAT_SBR_DONE_INTR_STAT_X(x) ((x) & GENMASK(0, 0))

#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT(x)\
	(((x) << 1) & GENMASK(1, 1))
#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT_M GENMASK(1, 1)
#define CPU_DDRC_INTR_MASKED_STAT_ECC_CORRECTED_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT(x)\
	(((x) << 2) & GENMASK(2, 2))
#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT_M GENMASK(2, 2)
#define CPU_DDRC_INTR_MASKED_STAT_ECC_UNCORRECTED_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define CPU_DDRC_INTR_MASKED_STAT_ECC_AP_ERR_INTR_STAT(x)\
	(((x) << 3) & GENMASK(3, 3))
#define CPU_DDRC_INTR_MASKED_STAT_ECC_AP_ERR_INTR_STAT_M GENMASK(3, 3)
#define CPU_DDRC_INTR_MASKED_STAT_ECC_AP_ERR_INTR_STAT_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

/*      CPU:PI_REG:PI_CON */
#define CPU_PI_CON                __REG(TARGET_CPU,\
					0, 1, 708, 0, 1, 8, 0, 0, 1, 4)

#define CPU_PI_CON_PMP_ON(x)                     (((x) << 15) & GENMASK(15, 15))
#define CPU_PI_CON_PMP_ON_M                      GENMASK(15, 15)
#define CPU_PI_CON_PMP_ON_X(x)                   (((x) & GENMASK(15, 15)) >> 15)

#define CPU_PI_CON_ADRMUX(x)                     (((x) << 11) & GENMASK(12, 11))
#define CPU_PI_CON_ADRMUX_M                      GENMASK(12, 11)
#define CPU_PI_CON_ADRMUX_X(x)                   (((x) & GENMASK(12, 11)) >> 11)

#define CPU_PI_CON_CSF(x)                        (((x) << 6) & GENMASK(7, 6))
#define CPU_PI_CON_CSF_M                         GENMASK(7, 6)
#define CPU_PI_CON_CSF_X(x)                      (((x) & GENMASK(7, 6)) >> 6)

#define CPU_PI_CON_ALP(x)                        (((x) << 5) & GENMASK(5, 5))
#define CPU_PI_CON_ALP_M                         GENMASK(5, 5)
#define CPU_PI_CON_ALP_X(x)                      (((x) & GENMASK(5, 5)) >> 5)

#define CPU_PI_CON_CS2P(x)                       (((x) << 4) & GENMASK(4, 4))
#define CPU_PI_CON_CS2P_M                        GENMASK(4, 4)
#define CPU_PI_CON_CS2P_X(x)                     (((x) & GENMASK(4, 4)) >> 4)

#define CPU_PI_CON_CS1P(x)                       (((x) << 3) & GENMASK(3, 3))
#define CPU_PI_CON_CS1P_M                        GENMASK(3, 3)
#define CPU_PI_CON_CS1P_X(x)                     (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PI_CON_WRSP(x)                       (((x) << 1) & GENMASK(1, 1))
#define CPU_PI_CON_WRSP_M                        GENMASK(1, 1)
#define CPU_PI_CON_WRSP_X(x)                     (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PI_CON_RDSP(x)                       ((x) & GENMASK(0, 0))
#define CPU_PI_CON_RDSP_M                        GENMASK(0, 0)
#define CPU_PI_CON_RDSP_X(x)                     ((x) & GENMASK(0, 0))

/*      CPU:PI_REG:PI_MODE */
#define CPU_PI_MODE               __REG(TARGET_CPU,\
					0, 1, 708, 0, 1, 8, 4, 0, 1, 4)

#define CPU_PI_MODE_MODE16(x)                    (((x) << 10) & GENMASK(10, 10))
#define CPU_PI_MODE_MODE16_M                     GENMASK(10, 10)
#define CPU_PI_MODE_MODE16_X(x)                  (((x) & GENMASK(10, 10)) >> 10)

#define CPU_PI_MODE_MODE(x)                      (((x) << 8) & GENMASK(9, 8))
#define CPU_PI_MODE_MODE_M                       GENMASK(9, 8)
#define CPU_PI_MODE_MODE_X(x)                    (((x) & GENMASK(9, 8)) >> 8)

#define CPU_PI_MODE_WAITB(x)                     (((x) << 6) & GENMASK(7, 6))
#define CPU_PI_MODE_WAITB_M                      GENMASK(7, 6)
#define CPU_PI_MODE_WAITB_X(x)                   (((x) & GENMASK(7, 6)) >> 6)

#define CPU_PI_MODE_WAITM(x)                     (((x) << 2) & GENMASK(5, 2))
#define CPU_PI_MODE_WAITM_M                      GENMASK(5, 2)
#define CPU_PI_MODE_WAITM_X(x)                   (((x) & GENMASK(5, 2)) >> 2)

#define CPU_PI_MODE_WAITE(x)                     ((x) & GENMASK(1, 0))
#define CPU_PI_MODE_WAITE_M                      GENMASK(1, 0)
#define CPU_PI_MODE_WAITE_X(x)                   ((x) & GENMASK(1, 0))

/*      CPU:SFR_REGS:CLK_GATING */
#define CPU_CLK_GATING            __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 0, 0, 1, 4)

#define CPU_CLK_GATING_UHPHS_CLK_GATING(x)       (((x) << 11) & GENMASK(11, 11))
#define CPU_CLK_GATING_UHPHS_CLK_GATING_M        GENMASK(11, 11)
#define CPU_CLK_GATING_UHPHS_CLK_GATING_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define CPU_CLK_GATING_UDPHS_CLK_GATING(x)       (((x) << 10) & GENMASK(10, 10))
#define CPU_CLK_GATING_UDPHS_CLK_GATING_M        GENMASK(10, 10)
#define CPU_CLK_GATING_UDPHS_CLK_GATING_X(x)     (((x) & GENMASK(10, 10)) >> 10)

#define CPU_CLK_GATING_MCRAMC_CLK_GATING(x)      (((x) << 9) & GENMASK(9, 9))
#define CPU_CLK_GATING_MCRAMC_CLK_GATING_M       GENMASK(9, 9)
#define CPU_CLK_GATING_MCRAMC_CLK_GATING_X(x)    (((x) & GENMASK(9, 9)) >> 9)

#define CPU_CLK_GATING_HMATRIX_CLK_GATING(x)     (((x) << 8) & GENMASK(8, 8))
#define CPU_CLK_GATING_HMATRIX_CLK_GATING_M      GENMASK(8, 8)
#define CPU_CLK_GATING_HMATRIX_CLK_GATING_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define CPU_CLK_GATING_HBRIDGE_CLK_GATING(x)     ((x) & GENMASK(3, 0))
#define CPU_CLK_GATING_HBRIDGE_CLK_GATING_M      GENMASK(3, 0)
#define CPU_CLK_GATING_HBRIDGE_CLK_GATING_X(x)   ((x) & GENMASK(3, 0))

/*      CPU:SFR_REGS:AHBLITE2AXI */
#define CPU_AHBLITE2AXI           __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 4, 0, 1, 4)

#define CPU_AHBLITE2AXI_AHBLITE2AXI_PFETCH8(x)   ((x) & GENMASK(0, 0))
#define CPU_AHBLITE2AXI_AHBLITE2AXI_PFETCH8_M    GENMASK(0, 0)
#define CPU_AHBLITE2AXI_AHBLITE2AXI_PFETCH8_X(x) ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:TZAESB */
#define CPU_TZAESB                __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 8, 0, 1, 4)

#define CPU_TZAESB_TZAESB_LITE_EN(x)             ((x) & GENMASK(0, 0))
#define CPU_TZAESB_TZAESB_LITE_EN_M              GENMASK(0, 0)
#define CPU_TZAESB_TZAESB_LITE_EN_X(x)           ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:MCAN */
#define CPU_MCAN                  __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 12, 0, 1, 4)

#define CPU_MCAN_MCAN_AHB_CACHABLE(x)            (((x) << 8) & GENMASK(11, 8))
#define CPU_MCAN_MCAN_AHB_CACHABLE_M             GENMASK(11, 8)
#define CPU_MCAN_MCAN_AHB_CACHABLE_X(x)          (((x) & GENMASK(11, 8)) >> 8)

#define CPU_MCAN_MCAN_AHB_BUFFERABLE(x)          ((x) & GENMASK(3, 0))
#define CPU_MCAN_MCAN_AHB_BUFFERABLE_M           GENMASK(3, 0)
#define CPU_MCAN_MCAN_AHB_BUFFERABLE_X(x)        ((x) & GENMASK(3, 0))

/*      CPU:SFR_REGS:HICM */
#define CPU_HICM                  __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 16, 0, 1, 4)

#define CPU_HICM_HICM_AHB_CACHABLE(x)            (((x) << 8) & GENMASK(8, 8))
#define CPU_HICM_HICM_AHB_CACHABLE_M             GENMASK(8, 8)
#define CPU_HICM_HICM_AHB_CACHABLE_X(x)          (((x) & GENMASK(8, 8)) >> 8)

#define CPU_HICM_HICM_AHB_BUFFERABLE(x)          ((x) & GENMASK(0, 0))
#define CPU_HICM_HICM_AHB_BUFFERABLE_M           GENMASK(0, 0)
#define CPU_HICM_HICM_AHB_BUFFERABLE_X(x)        ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:UDPHS */
#define CPU_UDPHS                 __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 20, 0, 1, 4)

#define CPU_UDPHS_UDPHS_AHB_CACHABLE(x)          (((x) << 8) & GENMASK(8, 8))
#define CPU_UDPHS_UDPHS_AHB_CACHABLE_M           GENMASK(8, 8)
#define CPU_UDPHS_UDPHS_AHB_CACHABLE_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define CPU_UDPHS_UDPHS_AHB_BUFFERABLE(x)        ((x) & GENMASK(0, 0))
#define CPU_UDPHS_UDPHS_AHB_BUFFERABLE_M         GENMASK(0, 0)
#define CPU_UDPHS_UDPHS_AHB_BUFFERABLE_X(x)      ((x) & GENMASK(0, 0))

/*      CPU:SFR_REGS:UDDR */
#define CPU_UDDR                  __REG(TARGET_CPU,\
					0, 1, 716, 0, 1, 28, 24, 0, 1, 4)

#define CPU_UDDR_AXI_READ_QOS(x)                 (((x) << 8) & GENMASK(11, 8))
#define CPU_UDDR_AXI_READ_QOS_M                  GENMASK(11, 8)
#define CPU_UDDR_AXI_READ_QOS_X(x)               (((x) & GENMASK(11, 8)) >> 8)

#define CPU_UDDR_AXI_WRITE_QOS(x)                ((x) & GENMASK(3, 0))
#define CPU_UDDR_AXI_WRITE_QOS_M                 GENMASK(3, 0)
#define CPU_UDDR_AXI_WRITE_QOS_X(x)              ((x) & GENMASK(3, 0))

/*      CPU:USB2COMMON_REGS:com_bias_bg_TC_trim */
#define CPU_com_bias_bg_TC_trim   __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 0, 0, 1, 4)

#define CPU_com_bias_bg_TC_trim_com_bias_bg_TC_trim(x) ((x) & GENMASK(4, 0))
#define CPU_com_bias_bg_TC_trim_com_bias_bg_TC_trim_M GENMASK(4, 0)
#define CPU_com_bias_bg_TC_trim_com_bias_bg_TC_trim_X(x) ((x) & GENMASK(4, 0))

/*      CPU:USB2COMMON_REGS:com_bias_bg_MAG_trim */
#define CPU_com_bias_bg_MAG_trim  __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 4, 0, 1, 4)

#define CPU_com_bias_bg_MAG_trim_com_bias_bg_MAG_trim(x) ((x) & GENMASK(5, 0))
#define CPU_com_bias_bg_MAG_trim_com_bias_bg_MAG_trim_M GENMASK(5, 0)
#define CPU_com_bias_bg_MAG_trim_com_bias_bg_MAG_trim_X(x) ((x) & GENMASK(5, 0))

/*      CPU:USB2COMMON_REGS:com_rbias_MAG_trim */
#define CPU_com_rbias_MAG_trim    __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 8, 0, 1, 4)

#define CPU_com_rbias_MAG_trim_com_rbias_MAG_trim(x) ((x) & GENMASK(5, 0))
#define CPU_com_rbias_MAG_trim_com_rbias_MAG_trim_M GENMASK(5, 0)
#define CPU_com_rbias_MAG_trim_com_rbias_MAG_trim_X(x) ((x) & GENMASK(5, 0))

/*      CPU:USB2COMMON_REGS:com_bias_az_clk_sel */
#define CPU_com_bias_az_clk_sel   __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 12, 0, 1, 4)

#define CPU_com_bias_az_clk_sel_com_bias_az_clk_sel(x) ((x) & GENMASK(0, 0))
#define CPU_com_bias_az_clk_sel_com_bias_az_clk_sel_M GENMASK(0, 0)
#define CPU_com_bias_az_clk_sel_com_bias_az_clk_sel_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:com_atest_sel */
#define CPU_com_atest_sel         __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 16, 0, 1, 4)

#define CPU_com_atest_sel_com_atest_sel(x)       ((x) & GENMASK(0, 0))
#define CPU_com_atest_sel_com_atest_sel_M        GENMASK(0, 0)
#define CPU_com_atest_sel_com_atest_sel_X(x)     ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:com_suspendb */
#define CPU_com_suspendb          __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 20, 0, 1, 4)

#define CPU_com_suspendb_com_suspendb(x)         ((x) & GENMASK(0, 0))
#define CPU_com_suspendb_com_suspendb_M          GENMASK(0, 0)
#define CPU_com_suspendb_com_suspendb_X(x)       ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:com_xtal_suspendb */
#define CPU_com_xtal_suspendb     __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 24, 0, 1, 4)

#define CPU_com_xtal_suspendb_com_xtal_suspendb(x) ((x) & GENMASK(0, 0))
#define CPU_com_xtal_suspendb_com_xtal_suspendb_M GENMASK(0, 0)
#define CPU_com_xtal_suspendb_com_xtal_suspendb_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:com_pll_lpm_mode */
#define CPU_com_pll_lpm_mode      __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 28, 0, 1, 4)

#define CPU_com_pll_lpm_mode_com_pll_lpm_mode(x) ((x) & GENMASK(0, 0))
#define CPU_com_pll_lpm_mode_com_pll_lpm_mode_M  GENMASK(0, 0)
#define CPU_com_pll_lpm_mode_com_pll_lpm_mode_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:com_pll_en */
#define CPU_com_pll_en            __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 32, 0, 1, 4)

#define CPU_com_pll_en_com_pll_en(x)             ((x) & GENMASK(0, 0))
#define CPU_com_pll_en_com_pll_en_M              GENMASK(0, 0)
#define CPU_com_pll_en_com_pll_en_X(x)           ((x) & GENMASK(0, 0))

/*      CPU:USB2COMMON_REGS:com_testbus_in_LSB */
#define CPU_com_testbus_in_LSB    __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 36, 0, 1, 4)

/*      CPU:USB2COMMON_REGS:com_testbus_in_MSB */
#define CPU_com_testbus_in_MSB    __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 40, 0, 1, 4)

#define CPU_com_testbus_in_MSB_com_testbus_in_MSB(x) ((x) & GENMASK(7, 0))
#define CPU_com_testbus_in_MSB_com_testbus_in_MSB_M GENMASK(7, 0)
#define CPU_com_testbus_in_MSB_com_testbus_in_MSB_X(x) ((x) & GENMASK(7, 0))

/*      CPU:USB2COMMON_REGS:com_testbus_out */
#define CPU_com_testbus_out       __REG(TARGET_CPU,\
					0, 1, 744, 0, 1, 48, 44, 0, 1, 4)

#define CPU_com_testbus_out_com_testbus_out(x)   ((x) & GENMASK(15, 0))
#define CPU_com_testbus_out_com_testbus_out_M    GENMASK(15, 0)
#define CPU_com_testbus_out_com_testbus_out_X(x) ((x) & GENMASK(15, 0))

/*      CPU:USB2AFE0_REGS:usb2_hs_disc_p0 */
#define CPU_usb2_hs_disc_p0       __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 0, 0, 1, 4)

#define CPU_usb2_hs_disc_p0_usb2_hs_disc_p0(x)   ((x) & GENMASK(1, 0))
#define CPU_usb2_hs_disc_p0_usb2_hs_disc_p0_M    GENMASK(1, 0)
#define CPU_usb2_hs_disc_p0_usb2_hs_disc_p0_X(x) ((x) & GENMASK(1, 0))

/*      CPU:USB2AFE0_REGS:usb2_sq_tune_p0 */
#define CPU_usb2_sq_tune_p0       __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 4, 0, 1, 4)

#define CPU_usb2_sq_tune_p0_usb2_sq_tune_p0(x)   ((x) & GENMASK(2, 0))
#define CPU_usb2_sq_tune_p0_usb2_sq_tune_p0_M    GENMASK(2, 0)
#define CPU_usb2_sq_tune_p0_usb2_sq_tune_p0_X(x) ((x) & GENMASK(2, 0))

/*      CPU:USB2AFE0_REGS:usb2_hs_drive_p0 */
#define CPU_usb2_hs_drive_p0      __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 8, 0, 1, 4)

#define CPU_usb2_hs_drive_p0_usb2_hs_drive_p0(x) ((x) & GENMASK(2, 0))
#define CPU_usb2_hs_drive_p0_usb2_hs_drive_p0_M  GENMASK(2, 0)
#define CPU_usb2_hs_drive_p0_usb2_hs_drive_p0_X(x) ((x) & GENMASK(2, 0))

/*      CPU:USB2AFE0_REGS:usb2_HSOS_scan_en_p0 */
#define CPU_usb2_HSOS_scan_en_p0  __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 12, 0, 1, 4)

#define CPU_usb2_HSOS_scan_en_p0_usb2_HSOS_scan_en_p0(x) ((x) & GENMASK(0, 0))
#define CPU_usb2_HSOS_scan_en_p0_usb2_HSOS_scan_en_p0_M GENMASK(0, 0)
#define CPU_usb2_HSOS_scan_en_p0_usb2_HSOS_scan_en_p0_X(x) ((x) & GENMASK(0, 0))

/*      CPU:USB2AFE0_REGS:usb2_HSOS_scan_data_p0 */
#define CPU_usb2_HSOS_scan_data_p0 __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 16, 0, 1, 4)

#define CPU_usb2_HSOS_scan_data_p0_usb2_HSOS_scan_data_p0(x)\
	((x) & GENMASK(0, 0))
#define CPU_usb2_HSOS_scan_data_p0_usb2_HSOS_scan_data_p0_M GENMASK(0, 0)
#define CPU_usb2_HSOS_scan_data_p0_usb2_HSOS_scan_data_p0_X(x)\
	((x) & GENMASK(0, 0))

/*      CPU:USB2AFE0_REGS:usb2_hs_ovsmp_p0 */
#define CPU_usb2_hs_ovsmp_p0      __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 20, 0, 1, 4)

#define CPU_usb2_hs_ovsmp_p0_usb2_hs_ovsmp_p0(x) ((x) & GENMASK(15, 0))
#define CPU_usb2_hs_ovsmp_p0_usb2_hs_ovsmp_p0_M  GENMASK(15, 0)
#define CPU_usb2_hs_ovsmp_p0_usb2_hs_ovsmp_p0_X(x) ((x) & GENMASK(15, 0))

/*      CPU:USB2AFE0_REGS:usb2_afe_testbus_in_p0 */
#define CPU_usb2_afe_testbus_in_p0 __REG(TARGET_CPU,\
					0, 1, 792, 0, 1, 28, 24, 0, 1, 4)

#define CPU_usb2_afe_testbus_in_p0_usb2_afe_testbus_in_p0(x)\
	((x) & GENMASK(7, 0))
#define CPU_usb2_afe_testbus_in_p0_usb2_afe_testbus_in_p0_M GENMASK(7, 0)
#define CPU_usb2_afe_testbus_in_p0_usb2_afe_testbus_in_p0_X(x)\
	((x) & GENMASK(7, 0))

/*      CPU:UTMIUP_REGS:PROG_BITS */
#define CPU_PROG_BITS             __REG(TARGET_CPU,\
					0, 1, 820, 0, 1, 4, 0, 0, 1, 4)

#define CPU_PROG_BITS_usb_rst_rpu_dis(x)         (((x) << 3) & GENMASK(3, 3))
#define CPU_PROG_BITS_usb_rst_rpu_dis_M          GENMASK(3, 3)
#define CPU_PROG_BITS_usb_rst_rpu_dis_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PROG_BITS_bugid_24910_fix_dis(x)     (((x) << 2) & GENMASK(2, 2))
#define CPU_PROG_BITS_bugid_24910_fix_dis_M      GENMASK(2, 2)
#define CPU_PROG_BITS_bugid_24910_fix_dis_X(x)   (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PROG_BITS_switch_disable_sorp(x)     (((x) << 1) & GENMASK(1, 1))
#define CPU_PROG_BITS_switch_disable_sorp_M      GENMASK(1, 1)
#define CPU_PROG_BITS_switch_disable_sorp_X(x)   (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PROG_BITS_utmieb_noise_flush_en(x)   ((x) & GENMASK(0, 0))
#define CPU_PROG_BITS_utmieb_noise_flush_en_M    GENMASK(0, 0)
#define CPU_PROG_BITS_utmieb_noise_flush_en_X(x) ((x) & GENMASK(0, 0))

/*      CPU:ULPI_BRIDGE_REGS:ULPI_RST */
#define CPU_ULPI_RST              __REG(TARGET_CPU,\
					0, 1, 824, 0, 1, 4, 0, 0, 1, 4)

#define CPU_ULPI_RST_ULPI_RST(x)                 ((x) & GENMASK(0, 0))
#define CPU_ULPI_RST_ULPI_RST_M                  GENMASK(0, 0)
#define CPU_ULPI_RST_ULPI_RST_X(x)               ((x) & GENMASK(0, 0))

/*      CPU:PCIE_PHY:PHY_CFG */
#define CPU_PHY_CFG               __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 0, 0, 1, 4)

#define CPU_PHY_CFG_LOS_BIAS(x)                  (((x) << 17) & GENMASK(19, 17))
#define CPU_PHY_CFG_LOS_BIAS_M                   GENMASK(19, 17)
#define CPU_PHY_CFG_LOS_BIAS_X(x)                (((x) & GENMASK(19, 17)) >> 17)

#define CPU_PHY_CFG_LOS_LEVEL(x)                 (((x) << 12) & GENMASK(16, 12))
#define CPU_PHY_CFG_LOS_LEVEL_M                  GENMASK(16, 12)
#define CPU_PHY_CFG_LOS_LEVEL_X(x)               (((x) & GENMASK(16, 12)) >> 12)

#define CPU_PHY_CFG_RX_EQ(x)                     (((x) << 9) & GENMASK(11, 9))
#define CPU_PHY_CFG_RX_EQ_M                      GENMASK(11, 9)
#define CPU_PHY_CFG_RX_EQ_X(x)                   (((x) & GENMASK(11, 9)) >> 9)

#define CPU_PHY_CFG_TX_TERM_OFFSET(x)            (((x) << 4) & GENMASK(8, 4))
#define CPU_PHY_CFG_TX_TERM_OFFSET_M             GENMASK(8, 4)
#define CPU_PHY_CFG_TX_TERM_OFFSET_X(x)          (((x) & GENMASK(8, 4)) >> 4)

#define CPU_PHY_CFG_TX_VBOOST_LVL(x)             (((x) << 1) & GENMASK(3, 1))
#define CPU_PHY_CFG_TX_VBOOST_LVL_M              GENMASK(3, 1)
#define CPU_PHY_CFG_TX_VBOOST_LVL_X(x)           (((x) & GENMASK(3, 1)) >> 1)

#define CPU_PHY_CFG_VREG_BYPASS(x)               ((x) & GENMASK(0, 0))
#define CPU_PHY_CFG_VREG_BYPASS_M                GENMASK(0, 0)
#define CPU_PHY_CFG_VREG_BYPASS_X(x)             ((x) & GENMASK(0, 0))

/*      CPU:PCIE_PHY:PHY_TUNE */
#define CPU_PHY_TUNE              __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 4, 0, 1, 4)

#define CPU_PHY_TUNE_RTUNE_REQ(x)                (((x) << 1) & GENMASK(1, 1))
#define CPU_PHY_TUNE_RTUNE_REQ_M                 GENMASK(1, 1)
#define CPU_PHY_TUNE_RTUNE_REQ_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PHY_TUNE_RTUNE_ACK(x)                ((x) & GENMASK(0, 0))
#define CPU_PHY_TUNE_RTUNE_ACK_M                 GENMASK(0, 0)
#define CPU_PHY_TUNE_RTUNE_ACK_X(x)              ((x) & GENMASK(0, 0))

/*      CPU:PCIE_PHY:PCS_CFG */
#define CPU_PCS_CFG               __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 8, 0, 1, 4)

#define CPU_PCS_CFG_DEEMPH_GEN2_3P5DB(x)         (((x) << 26) & GENMASK(31, 26))
#define CPU_PCS_CFG_DEEMPH_GEN2_3P5DB_M          GENMASK(31, 26)
#define CPU_PCS_CFG_DEEMPH_GEN2_3P5DB_X(x)       (((x) & GENMASK(31, 26)) >> 26)

#define CPU_PCS_CFG_DEEMPH_GEN2_6DB(x)           (((x) << 20) & GENMASK(25, 20))
#define CPU_PCS_CFG_DEEMPH_GEN2_6DB_M            GENMASK(25, 20)
#define CPU_PCS_CFG_DEEMPH_GEN2_6DB_X(x)         (((x) & GENMASK(25, 20)) >> 20)

#define CPU_PCS_CFG_DEEMPH_GEN1(x)               (((x) << 14) & GENMASK(19, 14))
#define CPU_PCS_CFG_DEEMPH_GEN1_M                GENMASK(19, 14)
#define CPU_PCS_CFG_DEEMPH_GEN1_X(x)             (((x) & GENMASK(19, 14)) >> 14)

#define CPU_PCS_CFG_SWING_FULL(x)                (((x) << 7) & GENMASK(13, 7))
#define CPU_PCS_CFG_SWING_FULL_M                 GENMASK(13, 7)
#define CPU_PCS_CFG_SWING_FULL_X(x)              (((x) & GENMASK(13, 7)) >> 7)

#define CPU_PCS_CFG_SWING_LOW(x)                 ((x) & GENMASK(6, 0))
#define CPU_PCS_CFG_SWING_LOW_M                  GENMASK(6, 0)
#define CPU_PCS_CFG_SWING_LOW_X(x)               ((x) & GENMASK(6, 0))

/*      CPU:PCIE_PHY:PHY_CR_CTRL */
#define CPU_PHY_CR_CTRL           __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 12, 0, 1, 4)

#define CPU_PHY_CR_CTRL_CAP_ADDR(x)              (((x) << 4) & GENMASK(4, 4))
#define CPU_PHY_CR_CTRL_CAP_ADDR_M               GENMASK(4, 4)
#define CPU_PHY_CR_CTRL_CAP_ADDR_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define CPU_PHY_CR_CTRL_CAP_DATA(x)              (((x) << 3) & GENMASK(3, 3))
#define CPU_PHY_CR_CTRL_CAP_DATA_M               GENMASK(3, 3)
#define CPU_PHY_CR_CTRL_CAP_DATA_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define CPU_PHY_CR_CTRL_READ(x)                  (((x) << 2) & GENMASK(2, 2))
#define CPU_PHY_CR_CTRL_READ_M                   GENMASK(2, 2)
#define CPU_PHY_CR_CTRL_READ_X(x)                (((x) & GENMASK(2, 2)) >> 2)

#define CPU_PHY_CR_CTRL_WRITE(x)                 (((x) << 1) & GENMASK(1, 1))
#define CPU_PHY_CR_CTRL_WRITE_M                  GENMASK(1, 1)
#define CPU_PHY_CR_CTRL_WRITE_X(x)               (((x) & GENMASK(1, 1)) >> 1)

#define CPU_PHY_CR_CTRL_ACK(x)                   ((x) & GENMASK(0, 0))
#define CPU_PHY_CR_CTRL_ACK_M                    GENMASK(0, 0)
#define CPU_PHY_CR_CTRL_ACK_X(x)                 ((x) & GENMASK(0, 0))

/*      CPU:PCIE_PHY:PHY_CR_DATA */
#define CPU_PHY_CR_DATA           __REG(TARGET_CPU,\
					0, 1, 828, 0, 1, 20, 16, 0, 1, 4)

#define CPU_PHY_CR_DATA_DATA_IN(x)               (((x) << 16) & GENMASK(31, 16))
#define CPU_PHY_CR_DATA_DATA_IN_M                GENMASK(31, 16)
#define CPU_PHY_CR_DATA_DATA_IN_X(x)             (((x) & GENMASK(31, 16)) >> 16)

#define CPU_PHY_CR_DATA_DATA_OUT(x)              ((x) & GENMASK(15, 0))
#define CPU_PHY_CR_DATA_DATA_OUT_M               GENMASK(15, 0)
#define CPU_PHY_CR_DATA_DATA_OUT_X(x)            ((x) & GENMASK(15, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:GENERAL_SETUP */
#define DDR_PHY_GENERAL_SETUP     __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 0, 0, 1, 4)

#define DDR_PHY_GENERAL_SETUP_FORMAT(x)          ((x) & GENMASK(1, 0))
#define DDR_PHY_GENERAL_SETUP_FORMAT_M           GENMASK(1, 0)
#define DDR_PHY_GENERAL_SETUP_FORMAT_X(x)        ((x) & GENMASK(1, 0))

#define DDR_PHY_GENERAL_SETUP_PHY_CHANNEL_EN(x)  (((x) << 2) & GENMASK(3, 2))
#define DDR_PHY_GENERAL_SETUP_PHY_CHANNEL_EN_M   GENMASK(3, 2)
#define DDR_PHY_GENERAL_SETUP_PHY_CHANNEL_EN_X(x) (((x) & GENMASK(3, 2)) >> 2)

#define DDR_PHY_GENERAL_SETUP_WRITE_DQS_ADJUST(x) (((x) << 4) & GENMASK(4, 4))
#define DDR_PHY_GENERAL_SETUP_WRITE_DQS_ADJUST_M GENMASK(4, 4)
#define DDR_PHY_GENERAL_SETUP_WRITE_DQS_ADJUST_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define DDR_PHY_GENERAL_SETUP_AUTOTRAIN_EN(x)    (((x) << 5) & GENMASK(5, 5))
#define DDR_PHY_GENERAL_SETUP_AUTOTRAIN_EN_M     GENMASK(5, 5)
#define DDR_PHY_GENERAL_SETUP_AUTOTRAIN_EN_X(x)  (((x) & GENMASK(5, 5)) >> 5)

#define DDR_PHY_GENERAL_SETUP_PB_MUX_SEL(x)      (((x) << 6) & GENMASK(7, 6))
#define DDR_PHY_GENERAL_SETUP_PB_MUX_SEL_M       GENMASK(7, 6)
#define DDR_PHY_GENERAL_SETUP_PB_MUX_SEL_X(x)    (((x) & GENMASK(7, 6)) >> 6)

#define DDR_PHY_GENERAL_SETUP_TRAINING_BASE(x)   (((x) << 8) & GENMASK(12, 8))
#define DDR_PHY_GENERAL_SETUP_TRAINING_BASE_M    GENMASK(12, 8)
#define DDR_PHY_GENERAL_SETUP_TRAINING_BASE_X(x) (((x) & GENMASK(12, 8)) >> 8)

#define DDR_PHY_GENERAL_SETUP_CA_BUS_VAL_EDGE(x) (((x) << 13) & GENMASK(13, 13))
#define DDR_PHY_GENERAL_SETUP_CA_BUS_VAL_EDGE_M  GENMASK(13, 13)
#define DDR_PHY_GENERAL_SETUP_CA_BUS_VAL_EDGE_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

/*      DDR_PHY:DDR_MULTIPHY_REGS:PLAYBACK_ENABLE */
#define DDR_PHY_PLAYBACK_ENABLE   __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 4, 0, 1, 4)

#define DDR_PHY_PLAYBACK_ENABLE_PB_START(x)      ((x) & GENMASK(0, 0))
#define DDR_PHY_PLAYBACK_ENABLE_PB_START_M       GENMASK(0, 0)
#define DDR_PHY_PLAYBACK_ENABLE_PB_START_X(x)    ((x) & GENMASK(0, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:PLAYBACK_STATUS */
#define DDR_PHY_PLAYBACK_STATUS   __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 8, 0, 1, 4)

#define DDR_PHY_PLAYBACK_STATUS_PLAYBACK_RUNNING(x) ((x) & GENMASK(0, 0))
#define DDR_PHY_PLAYBACK_STATUS_PLAYBACK_RUNNING_M GENMASK(0, 0)
#define DDR_PHY_PLAYBACK_STATUS_PLAYBACK_RUNNING_X(x) ((x) & GENMASK(0, 0))

#define DDR_PHY_PLAYBACK_STATUS_UNUSED_STS(x)    (((x) << 1) & GENMASK(3, 1))
#define DDR_PHY_PLAYBACK_STATUS_UNUSED_STS_M     GENMASK(3, 1)
#define DDR_PHY_PLAYBACK_STATUS_UNUSED_STS_X(x)  (((x) & GENMASK(3, 1)) >> 1)

#define DDR_PHY_PLAYBACK_STATUS_LAST_ADDR(x)     (((x) << 4) & GENMASK(9, 4))
#define DDR_PHY_PLAYBACK_STATUS_LAST_ADDR_M      GENMASK(9, 4)
#define DDR_PHY_PLAYBACK_STATUS_LAST_ADDR_X(x)   (((x) & GENMASK(9, 4)) >> 4)

/*      DDR_PHY:DDR_MULTIPHY_REGS:WRITE_PIPE_DELAY */
#define DDR_PHY_WRITE_PIPE_DELAY  __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 12, 0, 1, 4)

#define DDR_PHY_WRITE_PIPE_DELAY_WR_PIPE_DELAY(x) ((x) & GENMASK(3, 0))
#define DDR_PHY_WRITE_PIPE_DELAY_WR_PIPE_DELAY_M GENMASK(3, 0)
#define DDR_PHY_WRITE_PIPE_DELAY_WR_PIPE_DELAY_X(x) ((x) & GENMASK(3, 0))

#define DDR_PHY_WRITE_PIPE_DELAY_MEMCLK_DLY_OFFSET(x)\
	(((x) << 4) & GENMASK(5, 4))
#define DDR_PHY_WRITE_PIPE_DELAY_MEMCLK_DLY_OFFSET_M GENMASK(5, 4)
#define DDR_PHY_WRITE_PIPE_DELAY_MEMCLK_DLY_OFFSET_X(x)\
	(((x) & GENMASK(5, 4)) >> 4)

/*      DDR_PHY:DDR_MULTIPHY_REGS:CA_PIPE_DELAY */
#define DDR_PHY_CA_PIPE_DELAY     __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 16, 0, 1, 4)

#define DDR_PHY_CA_PIPE_DELAY_CA_PIPE_DELAY(x)   ((x) & GENMASK(4, 0))
#define DDR_PHY_CA_PIPE_DELAY_CA_PIPE_DELAY_M    GENMASK(4, 0)
#define DDR_PHY_CA_PIPE_DELAY_CA_PIPE_DELAY_X(x) ((x) & GENMASK(4, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:DATA_BYTE_SEL */
#define DDR_PHY_DATA_BYTE_SEL     __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 20, 0, 1, 4)

#define DDR_PHY_DATA_BYTE_SEL_BYTE_SEL(x)        ((x) & GENMASK(3, 0))
#define DDR_PHY_DATA_BYTE_SEL_BYTE_SEL_M         GENMASK(3, 0)
#define DDR_PHY_DATA_BYTE_SEL_BYTE_SEL_X(x)      ((x) & GENMASK(3, 0))

#define DDR_PHY_DATA_BYTE_SEL_RANK_SEL(x)        (((x) << 4) & GENMASK(4, 4))
#define DDR_PHY_DATA_BYTE_SEL_RANK_SEL_M         GENMASK(4, 4)
#define DDR_PHY_DATA_BYTE_SEL_RANK_SEL_X(x)      (((x) & GENMASK(4, 4)) >> 4)

/*      DDR_PHY:DDR_MULTIPHY_REGS:CTRLUPD_CONFIG */
#define DDR_PHY_CTRLUPD_CONFIG    __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 24, 0, 1, 4)

#define DDR_PHY_CTRLUPD_CONFIG_REQ_TO_ACK_DLY(x) ((x) & GENMASK(5, 0))
#define DDR_PHY_CTRLUPD_CONFIG_REQ_TO_ACK_DLY_M  GENMASK(5, 0)
#define DDR_PHY_CTRLUPD_CONFIG_REQ_TO_ACK_DLY_X(x) ((x) & GENMASK(5, 0))

#define DDR_PHY_CTRLUPD_CONFIG_UNUSED(x)         (((x) << 6) & GENMASK(7, 6))
#define DDR_PHY_CTRLUPD_CONFIG_UNUSED_M          GENMASK(7, 6)
#define DDR_PHY_CTRLUPD_CONFIG_UNUSED_X(x)       (((x) & GENMASK(7, 6)) >> 6)

#define DDR_PHY_CTRLUPD_CONFIG_ACK_VLD_CLKS(x)   (((x) << 8) & GENMASK(13, 8))
#define DDR_PHY_CTRLUPD_CONFIG_ACK_VLD_CLKS_M    GENMASK(13, 8)
#define DDR_PHY_CTRLUPD_CONFIG_ACK_VLD_CLKS_X(x) (((x) & GENMASK(13, 8)) >> 8)

/*      DDR_PHY:DDR_MULTIPHY_REGS:DEBUG */
#define DDR_PHY_DEBUG             __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 28, 0, 1, 4)

#define DDR_PHY_DEBUG_IPR_RD_MUX(x)              ((x) & GENMASK(0, 0))
#define DDR_PHY_DEBUG_IPR_RD_MUX_M               GENMASK(0, 0)
#define DDR_PHY_DEBUG_IPR_RD_MUX_X(x)            ((x) & GENMASK(0, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:INTERRUPT_MASK */
#define DDR_PHY_INTERRUPT_MASK    __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 32, 0, 1, 4)

#define DDR_PHY_INTERRUPT_MASK_PB_INTR_MASK(x)   ((x) & GENMASK(0, 0))
#define DDR_PHY_INTERRUPT_MASK_PB_INTR_MASK_M    GENMASK(0, 0)
#define DDR_PHY_INTERRUPT_MASK_PB_INTR_MASK_X(x) ((x) & GENMASK(0, 0))

#define DDR_PHY_INTERRUPT_MASK_DRQ_ERR_INTR_MASK(x) (((x) << 1) & GENMASK(9, 1))
#define DDR_PHY_INTERRUPT_MASK_DRQ_ERR_INTR_MASK_M GENMASK(9, 1)
#define DDR_PHY_INTERRUPT_MASK_DRQ_ERR_INTR_MASK_X(x)\
	(((x) & GENMASK(9, 1)) >> 1)

/*      DDR_PHY:DDR_MULTIPHY_REGS:INTERRUPT_ENABLE */
#define DDR_PHY_INTERRUPT_ENABLE  __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 36, 0, 1, 4)

#define DDR_PHY_INTERRUPT_ENABLE_PB_INTR_EN(x)   ((x) & GENMASK(0, 0))
#define DDR_PHY_INTERRUPT_ENABLE_PB_INTR_EN_M    GENMASK(0, 0)
#define DDR_PHY_INTERRUPT_ENABLE_PB_INTR_EN_X(x) ((x) & GENMASK(0, 0))

#define DDR_PHY_INTERRUPT_ENABLE_DQS_ERR_INTR_EN(x) (((x) << 1) & GENMASK(9, 1))
#define DDR_PHY_INTERRUPT_ENABLE_DQS_ERR_INTR_EN_M GENMASK(9, 1)
#define DDR_PHY_INTERRUPT_ENABLE_DQS_ERR_INTR_EN_X(x)\
	(((x) & GENMASK(9, 1)) >> 1)

/*      DDR_PHY:DDR_MULTIPHY_REGS:INTERRUPT_STATUS */
#define DDR_PHY_INTERRUPT_STATUS  __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 40, 0, 1, 4)

#define DDR_PHY_INTERRUPT_STATUS_PB_INTR_STS(x)  ((x) & GENMASK(0, 0))
#define DDR_PHY_INTERRUPT_STATUS_PB_INTR_STS_M   GENMASK(0, 0)
#define DDR_PHY_INTERRUPT_STATUS_PB_INTR_STS_X(x) ((x) & GENMASK(0, 0))

#define DDR_PHY_INTERRUPT_STATUS_DQS_ERR_INTR_STS(x)\
	(((x) << 1) & GENMASK(9, 1))
#define DDR_PHY_INTERRUPT_STATUS_DQS_ERR_INTR_STS_M GENMASK(9, 1)
#define DDR_PHY_INTERRUPT_STATUS_DQS_ERR_INTR_STS_X(x)\
	(((x) & GENMASK(9, 1)) >> 1)

/*      DDR_PHY:DDR_MULTIPHY_REGS:INTERRUPT_CLEAR */
#define DDR_PHY_INTERRUPT_CLEAR   __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 44, 0, 1, 4)

#define DDR_PHY_INTERRUPT_CLEAR_INTR_CLR(x)      ((x) & GENMASK(0, 0))
#define DDR_PHY_INTERRUPT_CLEAR_INTR_CLR_M       GENMASK(0, 0)
#define DDR_PHY_INTERRUPT_CLEAR_INTR_CLR_X(x)    ((x) & GENMASK(0, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:DFICLK_READ_DELAY_RANK_0 */
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 48, 0, 1, 4)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_0_R0(x)\
	((x) & GENMASK(1, 0))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_0_R0_M GENMASK(1, 0)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_0_R0_X(x)\
	((x) & GENMASK(1, 0))

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_1_R0(x)\
	(((x) << 2) & GENMASK(3, 2))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_1_R0_M GENMASK(3, 2)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_1_R0_X(x)\
	(((x) & GENMASK(3, 2)) >> 2)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_2_R0(x)\
	(((x) << 4) & GENMASK(5, 4))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_2_R0_M GENMASK(5, 4)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_2_R0_X(x)\
	(((x) & GENMASK(5, 4)) >> 4)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_3_R0(x)\
	(((x) << 6) & GENMASK(7, 6))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_3_R0_M GENMASK(7, 6)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_3_R0_X(x)\
	(((x) & GENMASK(7, 6)) >> 6)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_4_R0(x)\
	(((x) << 8) & GENMASK(9, 8))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_4_R0_M GENMASK(9, 8)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_4_R0_X(x)\
	(((x) & GENMASK(9, 8)) >> 8)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_5_R0(x)\
	(((x) << 10) & GENMASK(11, 10))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_5_R0_M GENMASK(11, 10)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_5_R0_X(x)\
	(((x) & GENMASK(11, 10)) >> 10)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_6_R0(x)\
	(((x) << 12) & GENMASK(13, 12))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_6_R0_M GENMASK(13, 12)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_6_R0_X(x)\
	(((x) & GENMASK(13, 12)) >> 12)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_7_R0(x)\
	(((x) << 14) & GENMASK(15, 14))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_7_R0_M GENMASK(15, 14)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_7_R0_X(x)\
	(((x) & GENMASK(15, 14)) >> 14)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_8_R0(x)\
	(((x) << 16) & GENMASK(17, 16))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_8_R0_M GENMASK(17, 16)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_0_RD_EN_VLD_DLY_8_R0_X(x)\
	(((x) & GENMASK(17, 16)) >> 16)

/*      DDR_PHY:DDR_MULTIPHY_REGS:FCLK_READ_DELAY_RANK_0_BYTES_7_0 */
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 52, 0, 1, 4)

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_0_R0(x)\
	((x) & GENMASK(3, 0))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_0_R0_M\
	GENMASK(3, 0)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_0_R0_X(x)\
	((x) & GENMASK(3, 0))

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_1_R0(x)\
	(((x) << 4) & GENMASK(7, 4))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_1_R0_M\
	GENMASK(7, 4)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_1_R0_X(x)\
	(((x) & GENMASK(7, 4)) >> 4)

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_2_R0(x)\
	(((x) << 8) & GENMASK(11, 8))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_2_R0_M\
	GENMASK(11, 8)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_2_R0_X(x)\
	(((x) & GENMASK(11, 8)) >> 8)

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_3_R0(x)\
	(((x) << 12) & GENMASK(15, 12))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_3_R0_M\
	GENMASK(15, 12)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_3_R0_X(x)\
	(((x) & GENMASK(15, 12)) >> 12)

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_4_R0(x)\
	(((x) << 16) & GENMASK(19, 16))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_4_R0_M\
	GENMASK(19, 16)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_4_R0_X(x)\
	(((x) & GENMASK(19, 16)) >> 16)

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_5_R0(x)\
	(((x) << 20) & GENMASK(23, 20))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_5_R0_M\
	GENMASK(23, 20)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_5_R0_X(x)\
	(((x) & GENMASK(23, 20)) >> 20)

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_6_R0(x)\
	(((x) << 24) & GENMASK(27, 24))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_6_R0_M\
	GENMASK(27, 24)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_6_R0_X(x)\
	(((x) & GENMASK(27, 24)) >> 24)

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_7_R0(x)\
	(((x) << 28) & GENMASK(31, 28))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_7_R0_M\
	GENMASK(31, 28)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTES_7_0_RD_DATA_PIPE_7_R0_X(x)\
	(((x) & GENMASK(31, 28)) >> 28)

/*      DDR_PHY:DDR_MULTIPHY_REGS:FCLK_READ_DELAY_RANK_0_BYTE_8 */
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTE_8 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 56, 0, 1, 4)

#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTE_8_RD_DATA_PIPE_8_R0(x)\
	((x) & GENMASK(3, 0))
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTE_8_RD_DATA_PIPE_8_R0_M GENMASK(3, 0)
#define DDR_PHY_FCLK_READ_DELAY_RANK_0_BYTE_8_RD_DATA_PIPE_8_R0_X(x)\
	((x) & GENMASK(3, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:RESERVED_1 */
#define DDR_PHY_RESERVED_1        __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 60, 0, 1, 4)

/*      DDR_PHY:DDR_MULTIPHY_REGS:DFICLK_READ_DELAY_RANK_1 */
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 64, 0, 1, 4)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_0_R1(x)\
	((x) & GENMASK(1, 0))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_0_R1_M GENMASK(1, 0)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_0_R1_X(x)\
	((x) & GENMASK(1, 0))

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_1_R1(x)\
	(((x) << 2) & GENMASK(3, 2))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_1_R1_M GENMASK(3, 2)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_1_R1_X(x)\
	(((x) & GENMASK(3, 2)) >> 2)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_2_R1(x)\
	(((x) << 4) & GENMASK(5, 4))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_2_R1_M GENMASK(5, 4)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_2_R1_X(x)\
	(((x) & GENMASK(5, 4)) >> 4)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_3_R1(x)\
	(((x) << 6) & GENMASK(7, 6))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_3_R1_M GENMASK(7, 6)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_3_R1_X(x)\
	(((x) & GENMASK(7, 6)) >> 6)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_4_R1(x)\
	(((x) << 8) & GENMASK(9, 8))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_4_R1_M GENMASK(9, 8)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_4_R1_X(x)\
	(((x) & GENMASK(9, 8)) >> 8)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_5_R1(x)\
	(((x) << 10) & GENMASK(11, 10))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_5_R1_M GENMASK(11, 10)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_5_R1_X(x)\
	(((x) & GENMASK(11, 10)) >> 10)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_6_R1(x)\
	(((x) << 12) & GENMASK(13, 12))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_6_R1_M GENMASK(13, 12)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_6_R1_X(x)\
	(((x) & GENMASK(13, 12)) >> 12)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_7_R1(x)\
	(((x) << 14) & GENMASK(15, 14))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_7_R1_M GENMASK(15, 14)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_7_R1_X(x)\
	(((x) & GENMASK(15, 14)) >> 14)

#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_8_R1(x)\
	(((x) << 16) & GENMASK(17, 16))
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_8_R1_M GENMASK(17, 16)
#define DDR_PHY_DFICLK_READ_DELAY_RANK_1_RD_EN_VLD_DLY_8_R1_X(x)\
	(((x) & GENMASK(17, 16)) >> 16)

/*      DDR_PHY:DDR_MULTIPHY_REGS:FCLK_READ_DELAY_RANK_1_BYTES_7_0 */
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 68, 0, 1, 4)

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_0_R1(x)\
	((x) & GENMASK(3, 0))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_0_R1_M\
	GENMASK(3, 0)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_0_R1_X(x)\
	((x) & GENMASK(3, 0))

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_1_R1(x)\
	(((x) << 4) & GENMASK(7, 4))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_1_R1_M\
	GENMASK(7, 4)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_1_R1_X(x)\
	(((x) & GENMASK(7, 4)) >> 4)

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_2_R1(x)\
	(((x) << 8) & GENMASK(11, 8))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_2_R1_M\
	GENMASK(11, 8)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_2_R1_X(x)\
	(((x) & GENMASK(11, 8)) >> 8)

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_3_R1(x)\
	(((x) << 12) & GENMASK(15, 12))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_3_R1_M\
	GENMASK(15, 12)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_3_R1_X(x)\
	(((x) & GENMASK(15, 12)) >> 12)

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_4_R1(x)\
	(((x) << 16) & GENMASK(19, 16))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_4_R1_M\
	GENMASK(19, 16)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_4_R1_X(x)\
	(((x) & GENMASK(19, 16)) >> 16)

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_5_R1(x)\
	(((x) << 20) & GENMASK(23, 20))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_5_R1_M\
	GENMASK(23, 20)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_5_R1_X(x)\
	(((x) & GENMASK(23, 20)) >> 20)

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_6_R1(x)\
	(((x) << 24) & GENMASK(27, 24))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_6_R1_M\
	GENMASK(27, 24)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_6_R1_X(x)\
	(((x) & GENMASK(27, 24)) >> 24)

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_7_R1(x)\
	(((x) << 28) & GENMASK(31, 28))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_7_R1_M\
	GENMASK(31, 28)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTES_7_0_RD_DATA_PIPE_7_R1_X(x)\
	(((x) & GENMASK(31, 28)) >> 28)

/*      DDR_PHY:DDR_MULTIPHY_REGS:FCLK_READ_DELAY_RANK_1_BYTE_8 */
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTE_8 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 72, 0, 1, 4)

#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTE_8_RD_DATA_PIPE_8_R1(x)\
	((x) & GENMASK(3, 0))
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTE_8_RD_DATA_PIPE_8_R1_M GENMASK(3, 0)
#define DDR_PHY_FCLK_READ_DELAY_RANK_1_BYTE_8_RD_DATA_PIPE_8_R1_X(x)\
	((x) & GENMASK(3, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:RESERVED_2 */
#define DDR_PHY_RESERVED_2        __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 76, 0, 1, 4)

/*      DDR_PHY:DDR_MULTIPHY_REGS:FCLK_READ_OFFSET_RANK_0_BYTES_7_0 */
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 80, 0, 1, 4)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_0_R0(x)\
	((x) & GENMASK(3, 0))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_0_R0_M\
	GENMASK(3, 0)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_0_R0_X(x)\
	((x) & GENMASK(3, 0))

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_1_R0(x)\
	(((x) << 4) & GENMASK(7, 4))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_1_R0_M\
	GENMASK(7, 4)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_1_R0_X(x)\
	(((x) & GENMASK(7, 4)) >> 4)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_2_R0(x)\
	(((x) << 8) & GENMASK(11, 8))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_2_R0_M\
	GENMASK(11, 8)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_2_R0_X(x)\
	(((x) & GENMASK(11, 8)) >> 8)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_3_R0(x)\
	(((x) << 12) & GENMASK(15, 12))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_3_R0_M\
	GENMASK(15, 12)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_3_R0_X(x)\
	(((x) & GENMASK(15, 12)) >> 12)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_4_R0(x)\
	(((x) << 16) & GENMASK(19, 16))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_4_R0_M\
	GENMASK(19, 16)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_4_R0_X(x)\
	(((x) & GENMASK(19, 16)) >> 16)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_5_R0(x)\
	(((x) << 20) & GENMASK(23, 20))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_5_R0_M\
	GENMASK(23, 20)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_5_R0_X(x)\
	(((x) & GENMASK(23, 20)) >> 20)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_6_R0(x)\
	(((x) << 24) & GENMASK(27, 24))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_6_R0_M\
	GENMASK(27, 24)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_6_R0_X(x)\
	(((x) & GENMASK(27, 24)) >> 24)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_7_R0(x)\
	(((x) << 28) & GENMASK(31, 28))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_7_R0_M\
	GENMASK(31, 28)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTES_7_0_READ_OFFSET_7_R0_X(x)\
	(((x) & GENMASK(31, 28)) >> 28)

/*      DDR_PHY:DDR_MULTIPHY_REGS:FCLK_READ_OFFSET_RANK_0_BYTE_8 */
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTE_8 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 84, 0, 1, 4)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTE_8_READ_OFFSET_8_R0(x)\
	((x) & GENMASK(3, 0))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTE_8_READ_OFFSET_8_R0_M GENMASK(3, 0)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_0_BYTE_8_READ_OFFSET_8_R0_X(x)\
	((x) & GENMASK(3, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:FCLK_READ_OFFSET_RANK_1_BYTES_7_0 */
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 88, 0, 1, 4)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_0_R1(x)\
	((x) & GENMASK(3, 0))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_0_R1_M\
	GENMASK(3, 0)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_0_R1_X(x)\
	((x) & GENMASK(3, 0))

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_1_R1(x)\
	(((x) << 4) & GENMASK(7, 4))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_1_R1_M\
	GENMASK(7, 4)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_1_R1_X(x)\
	(((x) & GENMASK(7, 4)) >> 4)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_2_R1(x)\
	(((x) << 8) & GENMASK(11, 8))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_2_R1_M\
	GENMASK(11, 8)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_2_R1_X(x)\
	(((x) & GENMASK(11, 8)) >> 8)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_3_R1(x)\
	(((x) << 12) & GENMASK(15, 12))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_3_R1_M\
	GENMASK(15, 12)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_3_R1_X(x)\
	(((x) & GENMASK(15, 12)) >> 12)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_4_R1(x)\
	(((x) << 16) & GENMASK(19, 16))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_4_R1_M\
	GENMASK(19, 16)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_4_R1_X(x)\
	(((x) & GENMASK(19, 16)) >> 16)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_5_R1(x)\
	(((x) << 20) & GENMASK(23, 20))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_5_R1_M\
	GENMASK(23, 20)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_5_R1_X(x)\
	(((x) & GENMASK(23, 20)) >> 20)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_6_R1(x)\
	(((x) << 24) & GENMASK(27, 24))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_6_R1_M\
	GENMASK(27, 24)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_6_R1_X(x)\
	(((x) & GENMASK(27, 24)) >> 24)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_7_R1(x)\
	(((x) << 28) & GENMASK(31, 28))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_7_R1_M\
	GENMASK(31, 28)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTES_7_0_READ_OFFSET_7_R1_X(x)\
	(((x) & GENMASK(31, 28)) >> 28)

/*      DDR_PHY:DDR_MULTIPHY_REGS:FCLK_READ_OFFSET_RANK_1_BYTE_8 */
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTE_8 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 92, 0, 1, 4)

#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTE_8_READ_OFFSET_8_R1(x)\
	((x) & GENMASK(3, 0))
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTE_8_READ_OFFSET_8_R1_M GENMASK(3, 0)
#define DDR_PHY_FCLK_READ_OFFSET_RANK_1_BYTE_8_READ_OFFSET_8_R1_X(x)\
	((x) & GENMASK(3, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:AUTOTRAIN_LOOP_ADDR */
#define DDR_PHY_AUTOTRAIN_LOOP_ADDR __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 96, 0, 1, 4)

#define DDR_PHY_AUTOTRAIN_LOOP_ADDR_START_ADDR(x) ((x) & GENMASK(4, 0))
#define DDR_PHY_AUTOTRAIN_LOOP_ADDR_START_ADDR_M GENMASK(4, 0)
#define DDR_PHY_AUTOTRAIN_LOOP_ADDR_START_ADDR_X(x) ((x) & GENMASK(4, 0))

/*      DDR_PHY:DDR_MULTIPHY_REGS:TRAIN_STATUS */
#define DDR_PHY_TRAIN_STATUS      __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 100, 0, 1, 4)

#define DDR_PHY_TRAIN_STATUS_SUCCESS_STS(x)      ((x) & GENMASK(0, 0))
#define DDR_PHY_TRAIN_STATUS_SUCCESS_STS_M       GENMASK(0, 0)
#define DDR_PHY_TRAIN_STATUS_SUCCESS_STS_X(x)    ((x) & GENMASK(0, 0))

#define DDR_PHY_TRAIN_STATUS_OFFSET_STS(x)       (((x) << 1) & GENMASK(1, 1))
#define DDR_PHY_TRAIN_STATUS_OFFSET_STS_M        GENMASK(1, 1)
#define DDR_PHY_TRAIN_STATUS_OFFSET_STS_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define DDR_PHY_TRAIN_STATUS_FAIL_STS(x)         (((x) << 2) & GENMASK(2, 2))
#define DDR_PHY_TRAIN_STATUS_FAIL_STS_M          GENMASK(2, 2)
#define DDR_PHY_TRAIN_STATUS_FAIL_STS_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define DDR_PHY_TRAIN_STATUS_AUTOTRAIN_STS(x)    (((x) << 3) & GENMASK(3, 3))
#define DDR_PHY_TRAIN_STATUS_AUTOTRAIN_STS_M     GENMASK(3, 3)
#define DDR_PHY_TRAIN_STATUS_AUTOTRAIN_STS_X(x)  (((x) & GENMASK(3, 3)) >> 3)

#define DDR_PHY_TRAIN_STATUS_AUTOLAST_BYTE(x)    (((x) << 4) & GENMASK(7, 4))
#define DDR_PHY_TRAIN_STATUS_AUTOLAST_BYTE_M     GENMASK(7, 4)
#define DDR_PHY_TRAIN_STATUS_AUTOLAST_BYTE_X(x)  (((x) & GENMASK(7, 4)) >> 4)

#define DDR_PHY_TRAIN_STATUS_AUTOLAST_RANK(x)    (((x) << 8) & GENMASK(8, 8))
#define DDR_PHY_TRAIN_STATUS_AUTOLAST_RANK_M     GENMASK(8, 8)
#define DDR_PHY_TRAIN_STATUS_AUTOLAST_RANK_X(x)  (((x) & GENMASK(8, 8)) >> 8)

/*      DDR_PHY:DDR_MULTIPHY_REGS:READ_TRAINING_CAPTURE0 */
#define DDR_PHY_READ_TRAINING_CAPTURE0 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 104, 0, 1, 4)

/*      DDR_PHY:DDR_MULTIPHY_REGS:READ_TRAINING_CAPTURE1 */
#define DDR_PHY_READ_TRAINING_CAPTURE1 __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 108, 0, 1, 4)

/*      DDR_PHY:DDR_MULTIPHY_REGS:REVISION_REGISTER */
#define DDR_PHY_REVISION_REGISTER __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 112, 0, 1, 4)

#define DDR_PHY_REVISION_REGISTER_MINOR_REV(x)   ((x) & GENMASK(7, 0))
#define DDR_PHY_REVISION_REGISTER_MINOR_REV_M    GENMASK(7, 0)
#define DDR_PHY_REVISION_REGISTER_MINOR_REV_X(x) ((x) & GENMASK(7, 0))

#define DDR_PHY_REVISION_REGISTER_MAJOR_REV(x)   (((x) << 8) & GENMASK(15, 8))
#define DDR_PHY_REVISION_REGISTER_MAJOR_REV_M    GENMASK(15, 8)
#define DDR_PHY_REVISION_REGISTER_MAJOR_REV_X(x) (((x) & GENMASK(15, 8)) >> 8)

/*      DDR_PHY:DDR_MULTIPHY_REGS:RESERVED_3 */
#define DDR_PHY_RESERVED_3(r)     __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 116, r, 483, 4)

/*      DDR_PHY:DDR_MULTIPHY_REGS:PLAYBACK_ENGINE_CODE */
#define DDR_PHY_PLAYBACK_ENGINE_CODE(r) __REG(TARGET_DDR_PHY,\
					0, 1, 0, 0, 1, 4096, 2048, r, 512, 4)

/*      DDR_UMCTL2:UMCTL2_REGS:MSTR */
#define DDR_UMCTL2_MSTR           __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 0, 0, 1, 4)

#define DDR_UMCTL2_MSTR_DDR3ENA(x)               ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_MSTR_DDR3ENA_M                GENMASK(0, 0)
#define DDR_UMCTL2_MSTR_DDR3ENA_X(x)             ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_MSTR_BURSTCHOP(x)             (((x) << 9) & GENMASK(9, 9))
#define DDR_UMCTL2_MSTR_BURSTCHOP_M              GENMASK(9, 9)
#define DDR_UMCTL2_MSTR_BURSTCHOP_X(x)           (((x) & GENMASK(9, 9)) >> 9)

#define DDR_UMCTL2_MSTR_EN_2T_TIMING_MODE(x)     (((x) << 10) & GENMASK(10, 10))
#define DDR_UMCTL2_MSTR_EN_2T_TIMING_MODE_M      GENMASK(10, 10)
#define DDR_UMCTL2_MSTR_EN_2T_TIMING_MODE_X(x)   (((x) & GENMASK(10, 10)) >> 10)

#define DDR_UMCTL2_MSTR_DATA_BUS_WIDTH(x)        (((x) << 12) & GENMASK(13, 12))
#define DDR_UMCTL2_MSTR_DATA_BUS_WIDTH_M         GENMASK(13, 12)
#define DDR_UMCTL2_MSTR_DATA_BUS_WIDTH_X(x)      (((x) & GENMASK(13, 12)) >> 12)

#define DDR_UMCTL2_MSTR_DLL_OFF_MODE(x)          (((x) << 15) & GENMASK(15, 15))
#define DDR_UMCTL2_MSTR_DLL_OFF_MODE_M           GENMASK(15, 15)
#define DDR_UMCTL2_MSTR_DLL_OFF_MODE_X(x)        (((x) & GENMASK(15, 15)) >> 15)

#define DDR_UMCTL2_MSTR_BURST_RDWR(x)            (((x) << 16) & GENMASK(19, 16))
#define DDR_UMCTL2_MSTR_BURST_RDWR_M             GENMASK(19, 16)
#define DDR_UMCTL2_MSTR_BURST_RDWR_X(x)          (((x) & GENMASK(19, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:STAT */
#define DDR_UMCTL2_STAT           __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 4, 0, 1, 4)

#define DDR_UMCTL2_STAT_OPERATING_MODE(x)        ((x) & GENMASK(1, 0))
#define DDR_UMCTL2_STAT_OPERATING_MODE_M         GENMASK(1, 0)
#define DDR_UMCTL2_STAT_OPERATING_MODE_X(x)      ((x) & GENMASK(1, 0))

#define DDR_UMCTL2_STAT_SELFREF_TYPE(x)          (((x) << 4) & GENMASK(5, 4))
#define DDR_UMCTL2_STAT_SELFREF_TYPE_M           GENMASK(5, 4)
#define DDR_UMCTL2_STAT_SELFREF_TYPE_X(x)        (((x) & GENMASK(5, 4)) >> 4)

#define DDR_UMCTL2_STAT_SELFREF_CAM_NOT_EMPTY(x) (((x) << 12) & GENMASK(12, 12))
#define DDR_UMCTL2_STAT_SELFREF_CAM_NOT_EMPTY_M  GENMASK(12, 12)
#define DDR_UMCTL2_STAT_SELFREF_CAM_NOT_EMPTY_X(x)\
	(((x) & GENMASK(12, 12)) >> 12)

/*      DDR_UMCTL2:UMCTL2_REGS:MRCTRL0 */
#define DDR_UMCTL2_MRCTRL0        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 16, 0, 1, 4)

#define DDR_UMCTL2_MRCTRL0_MR_RANK(x)            (((x) << 4) & GENMASK(4, 4))
#define DDR_UMCTL2_MRCTRL0_MR_RANK_M             GENMASK(4, 4)
#define DDR_UMCTL2_MRCTRL0_MR_RANK_X(x)          (((x) & GENMASK(4, 4)) >> 4)

#define DDR_UMCTL2_MRCTRL0_MR_ADDR(x)            (((x) << 12) & GENMASK(15, 12))
#define DDR_UMCTL2_MRCTRL0_MR_ADDR_M             GENMASK(15, 12)
#define DDR_UMCTL2_MRCTRL0_MR_ADDR_X(x)          (((x) & GENMASK(15, 12)) >> 12)

#define DDR_UMCTL2_MRCTRL0_MR_WR(x)              (((x) << 31) & GENMASK(31, 31))
#define DDR_UMCTL2_MRCTRL0_MR_WR_M               GENMASK(31, 31)
#define DDR_UMCTL2_MRCTRL0_MR_WR_X(x)            (((x) & GENMASK(31, 31)) >> 31)

/*      DDR_UMCTL2:UMCTL2_REGS:MRCTRL1 */
#define DDR_UMCTL2_MRCTRL1        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 20, 0, 1, 4)

#define DDR_UMCTL2_MRCTRL1_MR_DATA(x)            ((x) & GENMASK(15, 0))
#define DDR_UMCTL2_MRCTRL1_MR_DATA_M             GENMASK(15, 0)
#define DDR_UMCTL2_MRCTRL1_MR_DATA_X(x)          ((x) & GENMASK(15, 0))

/*      DDR_UMCTL2:UMCTL2_REGS:MRSTAT */
#define DDR_UMCTL2_MRSTAT         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 24, 0, 1, 4)

#define DDR_UMCTL2_MRSTAT_MR_WR_BUSY(x)          ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_MRSTAT_MR_WR_BUSY_M           GENMASK(0, 0)
#define DDR_UMCTL2_MRSTAT_MR_WR_BUSY_X(x)        ((x) & GENMASK(0, 0))

/*      DDR_UMCTL2:UMCTL2_REGS:PWRCTL */
#define DDR_UMCTL2_PWRCTL         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 48, 0, 1, 4)

#define DDR_UMCTL2_PWRCTL_SELFREF_EN(x)          ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_PWRCTL_SELFREF_EN_M           GENMASK(0, 0)
#define DDR_UMCTL2_PWRCTL_SELFREF_EN_X(x)        ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_PWRCTL_POWERDOWN_EN(x)        (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_PWRCTL_POWERDOWN_EN_M         GENMASK(1, 1)
#define DDR_UMCTL2_PWRCTL_POWERDOWN_EN_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define DDR_UMCTL2_PWRCTL_EN_DFI_DRAM_CLK_DISABLE(x)\
	(((x) << 3) & GENMASK(3, 3))
#define DDR_UMCTL2_PWRCTL_EN_DFI_DRAM_CLK_DISABLE_M GENMASK(3, 3)
#define DDR_UMCTL2_PWRCTL_EN_DFI_DRAM_CLK_DISABLE_X(x)\
	(((x) & GENMASK(3, 3)) >> 3)

#define DDR_UMCTL2_PWRCTL_SELFREF_SW(x)          (((x) << 5) & GENMASK(5, 5))
#define DDR_UMCTL2_PWRCTL_SELFREF_SW_M           GENMASK(5, 5)
#define DDR_UMCTL2_PWRCTL_SELFREF_SW_X(x)        (((x) & GENMASK(5, 5)) >> 5)

#define DDR_UMCTL2_PWRCTL_DIS_CAM_DRAIN_SELFREF(x) (((x) << 7) & GENMASK(7, 7))
#define DDR_UMCTL2_PWRCTL_DIS_CAM_DRAIN_SELFREF_M GENMASK(7, 7)
#define DDR_UMCTL2_PWRCTL_DIS_CAM_DRAIN_SELFREF_X(x)\
	(((x) & GENMASK(7, 7)) >> 7)

/*      DDR_UMCTL2:UMCTL2_REGS:PWRTMG */
#define DDR_UMCTL2_PWRTMG         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 52, 0, 1, 4)

#define DDR_UMCTL2_PWRTMG_POWERDOWN_TO_X32(x)    ((x) & GENMASK(4, 0))
#define DDR_UMCTL2_PWRTMG_POWERDOWN_TO_X32_M     GENMASK(4, 0)
#define DDR_UMCTL2_PWRTMG_POWERDOWN_TO_X32_X(x)  ((x) & GENMASK(4, 0))

#define DDR_UMCTL2_PWRTMG_SELFREF_TO_X32(x)      (((x) << 16) & GENMASK(23, 16))
#define DDR_UMCTL2_PWRTMG_SELFREF_TO_X32_M       GENMASK(23, 16)
#define DDR_UMCTL2_PWRTMG_SELFREF_TO_X32_X(x)    (((x) & GENMASK(23, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:HWLPCTL */
#define DDR_UMCTL2_HWLPCTL        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 56, 0, 1, 4)

#define DDR_UMCTL2_HWLPCTL_HW_LP_EN(x)           ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_HWLPCTL_HW_LP_EN_M            GENMASK(0, 0)
#define DDR_UMCTL2_HWLPCTL_HW_LP_EN_X(x)         ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_HWLPCTL_HW_LP_EXIT_IDLE_EN(x) (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_HWLPCTL_HW_LP_EXIT_IDLE_EN_M  GENMASK(1, 1)
#define DDR_UMCTL2_HWLPCTL_HW_LP_EXIT_IDLE_EN_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define DDR_UMCTL2_HWLPCTL_HW_LP_IDLE_X32(x)     (((x) << 16) & GENMASK(27, 16))
#define DDR_UMCTL2_HWLPCTL_HW_LP_IDLE_X32_M      GENMASK(27, 16)
#define DDR_UMCTL2_HWLPCTL_HW_LP_IDLE_X32_X(x)   (((x) & GENMASK(27, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:RFSHCTL0 */
#define DDR_UMCTL2_RFSHCTL0       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 80, 0, 1, 4)

#define DDR_UMCTL2_RFSHCTL0_REFRESH_BURST(x)     (((x) << 4) & GENMASK(8, 4))
#define DDR_UMCTL2_RFSHCTL0_REFRESH_BURST_M      GENMASK(8, 4)
#define DDR_UMCTL2_RFSHCTL0_REFRESH_BURST_X(x)   (((x) & GENMASK(8, 4)) >> 4)

#define DDR_UMCTL2_RFSHCTL0_REFRESH_TO_X32(x)    (((x) << 12) & GENMASK(16, 12))
#define DDR_UMCTL2_RFSHCTL0_REFRESH_TO_X32_M     GENMASK(16, 12)
#define DDR_UMCTL2_RFSHCTL0_REFRESH_TO_X32_X(x)  (((x) & GENMASK(16, 12)) >> 12)

#define DDR_UMCTL2_RFSHCTL0_REFRESH_MARGIN(x)    (((x) << 20) & GENMASK(23, 20))
#define DDR_UMCTL2_RFSHCTL0_REFRESH_MARGIN_M     GENMASK(23, 20)
#define DDR_UMCTL2_RFSHCTL0_REFRESH_MARGIN_X(x)  (((x) & GENMASK(23, 20)) >> 20)

/*      DDR_UMCTL2:UMCTL2_REGS:RFSHCTL3 */
#define DDR_UMCTL2_RFSHCTL3       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 96, 0, 1, 4)

#define DDR_UMCTL2_RFSHCTL3_DIS_AUTO_REFRESH(x)  ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_RFSHCTL3_DIS_AUTO_REFRESH_M   GENMASK(0, 0)
#define DDR_UMCTL2_RFSHCTL3_DIS_AUTO_REFRESH_X(x) ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_RFSHCTL3_REFRESH_UPDATE_LEVEL(x) (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_RFSHCTL3_REFRESH_UPDATE_LEVEL_M GENMASK(1, 1)
#define DDR_UMCTL2_RFSHCTL3_REFRESH_UPDATE_LEVEL_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

/*      DDR_UMCTL2:UMCTL2_REGS:RFSHTMG */
#define DDR_UMCTL2_RFSHTMG        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 100, 0, 1, 4)

#define DDR_UMCTL2_RFSHTMG_T_RFC_MIN(x)          ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_RFSHTMG_T_RFC_MIN_M           GENMASK(9, 0)
#define DDR_UMCTL2_RFSHTMG_T_RFC_MIN_X(x)        ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_RFSHTMG_T_RFC_NOM_X1_X32(x)   (((x) << 16) & GENMASK(27, 16))
#define DDR_UMCTL2_RFSHTMG_T_RFC_NOM_X1_X32_M    GENMASK(27, 16)
#define DDR_UMCTL2_RFSHTMG_T_RFC_NOM_X1_X32_X(x) (((x) & GENMASK(27, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:CRCPARCTL0 */
#define DDR_UMCTL2_CRCPARCTL0     __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 192, 0, 1, 4)

#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_INT_EN(x) ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_INT_EN_M GENMASK(0, 0)
#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_INT_EN_X(x) ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_INT_CLR(x)\
	(((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_INT_CLR_M GENMASK(1, 1)
#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_INT_CLR_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_CNT_CLR(x)\
	(((x) << 2) & GENMASK(2, 2))
#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_CNT_CLR_M GENMASK(2, 2)
#define DDR_UMCTL2_CRCPARCTL0_DFI_ALERT_ERR_CNT_CLR_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

/*      DDR_UMCTL2:UMCTL2_REGS:CRCPARSTAT */
#define DDR_UMCTL2_CRCPARSTAT     __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 204, 0, 1, 4)

#define DDR_UMCTL2_CRCPARSTAT_DFI_ALERT_ERR_CNT(x) ((x) & GENMASK(15, 0))
#define DDR_UMCTL2_CRCPARSTAT_DFI_ALERT_ERR_CNT_M GENMASK(15, 0)
#define DDR_UMCTL2_CRCPARSTAT_DFI_ALERT_ERR_CNT_X(x) ((x) & GENMASK(15, 0))

#define DDR_UMCTL2_CRCPARSTAT_DFI_ALERT_ERR_INT(x)\
	(((x) << 16) & GENMASK(16, 16))
#define DDR_UMCTL2_CRCPARSTAT_DFI_ALERT_ERR_INT_M GENMASK(16, 16)
#define DDR_UMCTL2_CRCPARSTAT_DFI_ALERT_ERR_INT_X(x)\
	(((x) & GENMASK(16, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:INIT0 */
#define DDR_UMCTL2_INIT0          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 208, 0, 1, 4)

#define DDR_UMCTL2_INIT0_PRE_CKE_X1024(x)        ((x) & GENMASK(11, 0))
#define DDR_UMCTL2_INIT0_PRE_CKE_X1024_M         GENMASK(11, 0)
#define DDR_UMCTL2_INIT0_PRE_CKE_X1024_X(x)      ((x) & GENMASK(11, 0))

#define DDR_UMCTL2_INIT0_POST_CKE_X1024(x)       (((x) << 16) & GENMASK(25, 16))
#define DDR_UMCTL2_INIT0_POST_CKE_X1024_M        GENMASK(25, 16)
#define DDR_UMCTL2_INIT0_POST_CKE_X1024_X(x)     (((x) & GENMASK(25, 16)) >> 16)

#define DDR_UMCTL2_INIT0_SKIP_DRAM_INIT(x)       (((x) << 30) & GENMASK(31, 30))
#define DDR_UMCTL2_INIT0_SKIP_DRAM_INIT_M        GENMASK(31, 30)
#define DDR_UMCTL2_INIT0_SKIP_DRAM_INIT_X(x)     (((x) & GENMASK(31, 30)) >> 30)

/*      DDR_UMCTL2:UMCTL2_REGS:INIT1 */
#define DDR_UMCTL2_INIT1          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 212, 0, 1, 4)

#define DDR_UMCTL2_INIT1_PRE_OCD_X32(x)          ((x) & GENMASK(3, 0))
#define DDR_UMCTL2_INIT1_PRE_OCD_X32_M           GENMASK(3, 0)
#define DDR_UMCTL2_INIT1_PRE_OCD_X32_X(x)        ((x) & GENMASK(3, 0))

#define DDR_UMCTL2_INIT1_DRAM_RSTN_X1024(x)      (((x) << 16) & GENMASK(24, 16))
#define DDR_UMCTL2_INIT1_DRAM_RSTN_X1024_M       GENMASK(24, 16)
#define DDR_UMCTL2_INIT1_DRAM_RSTN_X1024_X(x)    (((x) & GENMASK(24, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:INIT3 */
#define DDR_UMCTL2_INIT3          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 220, 0, 1, 4)

#define DDR_UMCTL2_INIT3_EMR(x)                  ((x) & GENMASK(15, 0))
#define DDR_UMCTL2_INIT3_EMR_M                   GENMASK(15, 0)
#define DDR_UMCTL2_INIT3_EMR_X(x)                ((x) & GENMASK(15, 0))

#define DDR_UMCTL2_INIT3_MR(x)                   (((x) << 16) & GENMASK(31, 16))
#define DDR_UMCTL2_INIT3_MR_M                    GENMASK(31, 16)
#define DDR_UMCTL2_INIT3_MR_X(x)                 (((x) & GENMASK(31, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:INIT4 */
#define DDR_UMCTL2_INIT4          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 224, 0, 1, 4)

#define DDR_UMCTL2_INIT4_EMR3(x)                 ((x) & GENMASK(15, 0))
#define DDR_UMCTL2_INIT4_EMR3_M                  GENMASK(15, 0)
#define DDR_UMCTL2_INIT4_EMR3_X(x)               ((x) & GENMASK(15, 0))

#define DDR_UMCTL2_INIT4_EMR2(x)                 (((x) << 16) & GENMASK(31, 16))
#define DDR_UMCTL2_INIT4_EMR2_M                  GENMASK(31, 16)
#define DDR_UMCTL2_INIT4_EMR2_X(x)               (((x) & GENMASK(31, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:INIT5 */
#define DDR_UMCTL2_INIT5          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 228, 0, 1, 4)

#define DDR_UMCTL2_INIT5_DEV_ZQINIT_X32(x)       (((x) << 16) & GENMASK(23, 16))
#define DDR_UMCTL2_INIT5_DEV_ZQINIT_X32_M        GENMASK(23, 16)
#define DDR_UMCTL2_INIT5_DEV_ZQINIT_X32_X(x)     (((x) & GENMASK(23, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:DIMMCTL */
#define DDR_UMCTL2_DIMMCTL        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 240, 0, 1, 4)

#define DDR_UMCTL2_DIMMCTL_DIMM_STAGGER_CS_EN(x) ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DIMMCTL_DIMM_STAGGER_CS_EN_M  GENMASK(0, 0)
#define DDR_UMCTL2_DIMMCTL_DIMM_STAGGER_CS_EN_X(x) ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_DIMMCTL_DIMM_ADDR_MIRR_EN(x)  (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_DIMMCTL_DIMM_ADDR_MIRR_EN_M   GENMASK(1, 1)
#define DDR_UMCTL2_DIMMCTL_DIMM_ADDR_MIRR_EN_X(x) (((x) & GENMASK(1, 1)) >> 1)

/*      DDR_UMCTL2:UMCTL2_REGS:DRAMTMG0 */
#define DDR_UMCTL2_DRAMTMG0       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 256, 0, 1, 4)

#define DDR_UMCTL2_DRAMTMG0_T_RAS_MIN(x)         ((x) & GENMASK(5, 0))
#define DDR_UMCTL2_DRAMTMG0_T_RAS_MIN_M          GENMASK(5, 0)
#define DDR_UMCTL2_DRAMTMG0_T_RAS_MIN_X(x)       ((x) & GENMASK(5, 0))

#define DDR_UMCTL2_DRAMTMG0_T_RAS_MAX(x)         (((x) << 8) & GENMASK(14, 8))
#define DDR_UMCTL2_DRAMTMG0_T_RAS_MAX_M          GENMASK(14, 8)
#define DDR_UMCTL2_DRAMTMG0_T_RAS_MAX_X(x)       (((x) & GENMASK(14, 8)) >> 8)

#define DDR_UMCTL2_DRAMTMG0_T_FAW(x)             (((x) << 16) & GENMASK(21, 16))
#define DDR_UMCTL2_DRAMTMG0_T_FAW_M              GENMASK(21, 16)
#define DDR_UMCTL2_DRAMTMG0_T_FAW_X(x)           (((x) & GENMASK(21, 16)) >> 16)

#define DDR_UMCTL2_DRAMTMG0_WR2PRE(x)            (((x) << 24) & GENMASK(30, 24))
#define DDR_UMCTL2_DRAMTMG0_WR2PRE_M             GENMASK(30, 24)
#define DDR_UMCTL2_DRAMTMG0_WR2PRE_X(x)          (((x) & GENMASK(30, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:DRAMTMG1 */
#define DDR_UMCTL2_DRAMTMG1       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 260, 0, 1, 4)

#define DDR_UMCTL2_DRAMTMG1_T_RC(x)              ((x) & GENMASK(6, 0))
#define DDR_UMCTL2_DRAMTMG1_T_RC_M               GENMASK(6, 0)
#define DDR_UMCTL2_DRAMTMG1_T_RC_X(x)            ((x) & GENMASK(6, 0))

#define DDR_UMCTL2_DRAMTMG1_RD2PRE(x)            (((x) << 8) & GENMASK(13, 8))
#define DDR_UMCTL2_DRAMTMG1_RD2PRE_M             GENMASK(13, 8)
#define DDR_UMCTL2_DRAMTMG1_RD2PRE_X(x)          (((x) & GENMASK(13, 8)) >> 8)

#define DDR_UMCTL2_DRAMTMG1_T_XP(x)              (((x) << 16) & GENMASK(20, 16))
#define DDR_UMCTL2_DRAMTMG1_T_XP_M               GENMASK(20, 16)
#define DDR_UMCTL2_DRAMTMG1_T_XP_X(x)            (((x) & GENMASK(20, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:DRAMTMG2 */
#define DDR_UMCTL2_DRAMTMG2       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 264, 0, 1, 4)

#define DDR_UMCTL2_DRAMTMG2_WR2RD(x)             ((x) & GENMASK(5, 0))
#define DDR_UMCTL2_DRAMTMG2_WR2RD_M              GENMASK(5, 0)
#define DDR_UMCTL2_DRAMTMG2_WR2RD_X(x)           ((x) & GENMASK(5, 0))

#define DDR_UMCTL2_DRAMTMG2_RD2WR(x)             (((x) << 8) & GENMASK(13, 8))
#define DDR_UMCTL2_DRAMTMG2_RD2WR_M              GENMASK(13, 8)
#define DDR_UMCTL2_DRAMTMG2_RD2WR_X(x)           (((x) & GENMASK(13, 8)) >> 8)

/*      DDR_UMCTL2:UMCTL2_REGS:DRAMTMG3 */
#define DDR_UMCTL2_DRAMTMG3       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 268, 0, 1, 4)

#define DDR_UMCTL2_DRAMTMG3_T_MOD(x)             ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_DRAMTMG3_T_MOD_M              GENMASK(9, 0)
#define DDR_UMCTL2_DRAMTMG3_T_MOD_X(x)           ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_DRAMTMG3_T_MRD(x)             (((x) << 12) & GENMASK(17, 12))
#define DDR_UMCTL2_DRAMTMG3_T_MRD_M              GENMASK(17, 12)
#define DDR_UMCTL2_DRAMTMG3_T_MRD_X(x)           (((x) & GENMASK(17, 12)) >> 12)

/*      DDR_UMCTL2:UMCTL2_REGS:DRAMTMG4 */
#define DDR_UMCTL2_DRAMTMG4       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 272, 0, 1, 4)

#define DDR_UMCTL2_DRAMTMG4_T_RP(x)              ((x) & GENMASK(4, 0))
#define DDR_UMCTL2_DRAMTMG4_T_RP_M               GENMASK(4, 0)
#define DDR_UMCTL2_DRAMTMG4_T_RP_X(x)            ((x) & GENMASK(4, 0))

#define DDR_UMCTL2_DRAMTMG4_T_RRD(x)             (((x) << 8) & GENMASK(11, 8))
#define DDR_UMCTL2_DRAMTMG4_T_RRD_M              GENMASK(11, 8)
#define DDR_UMCTL2_DRAMTMG4_T_RRD_X(x)           (((x) & GENMASK(11, 8)) >> 8)

#define DDR_UMCTL2_DRAMTMG4_T_CCD(x)             (((x) << 16) & GENMASK(19, 16))
#define DDR_UMCTL2_DRAMTMG4_T_CCD_M              GENMASK(19, 16)
#define DDR_UMCTL2_DRAMTMG4_T_CCD_X(x)           (((x) & GENMASK(19, 16)) >> 16)

#define DDR_UMCTL2_DRAMTMG4_T_RCD(x)             (((x) << 24) & GENMASK(28, 24))
#define DDR_UMCTL2_DRAMTMG4_T_RCD_M              GENMASK(28, 24)
#define DDR_UMCTL2_DRAMTMG4_T_RCD_X(x)           (((x) & GENMASK(28, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:DRAMTMG5 */
#define DDR_UMCTL2_DRAMTMG5       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 276, 0, 1, 4)

#define DDR_UMCTL2_DRAMTMG5_T_CKE(x)             ((x) & GENMASK(4, 0))
#define DDR_UMCTL2_DRAMTMG5_T_CKE_M              GENMASK(4, 0)
#define DDR_UMCTL2_DRAMTMG5_T_CKE_X(x)           ((x) & GENMASK(4, 0))

#define DDR_UMCTL2_DRAMTMG5_T_CKESR(x)           (((x) << 8) & GENMASK(13, 8))
#define DDR_UMCTL2_DRAMTMG5_T_CKESR_M            GENMASK(13, 8)
#define DDR_UMCTL2_DRAMTMG5_T_CKESR_X(x)         (((x) & GENMASK(13, 8)) >> 8)

#define DDR_UMCTL2_DRAMTMG5_T_CKSRE(x)           (((x) << 16) & GENMASK(19, 16))
#define DDR_UMCTL2_DRAMTMG5_T_CKSRE_M            GENMASK(19, 16)
#define DDR_UMCTL2_DRAMTMG5_T_CKSRE_X(x)         (((x) & GENMASK(19, 16)) >> 16)

#define DDR_UMCTL2_DRAMTMG5_T_CKSRX(x)           (((x) << 24) & GENMASK(27, 24))
#define DDR_UMCTL2_DRAMTMG5_T_CKSRX_M            GENMASK(27, 24)
#define DDR_UMCTL2_DRAMTMG5_T_CKSRX_X(x)         (((x) & GENMASK(27, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:DRAMTMG8 */
#define DDR_UMCTL2_DRAMTMG8       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 288, 0, 1, 4)

#define DDR_UMCTL2_DRAMTMG8_T_XS_X32(x)          ((x) & GENMASK(6, 0))
#define DDR_UMCTL2_DRAMTMG8_T_XS_X32_M           GENMASK(6, 0)
#define DDR_UMCTL2_DRAMTMG8_T_XS_X32_X(x)        ((x) & GENMASK(6, 0))

#define DDR_UMCTL2_DRAMTMG8_T_XS_DLL_X32(x)      (((x) << 8) & GENMASK(14, 8))
#define DDR_UMCTL2_DRAMTMG8_T_XS_DLL_X32_M       GENMASK(14, 8)
#define DDR_UMCTL2_DRAMTMG8_T_XS_DLL_X32_X(x)    (((x) & GENMASK(14, 8)) >> 8)

/*      DDR_UMCTL2:UMCTL2_REGS:DRAMTMG15 */
#define DDR_UMCTL2_DRAMTMG15      __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 316, 0, 1, 4)

#define DDR_UMCTL2_DRAMTMG15_T_STAB_X32(x)       ((x) & GENMASK(7, 0))
#define DDR_UMCTL2_DRAMTMG15_T_STAB_X32_M        GENMASK(7, 0)
#define DDR_UMCTL2_DRAMTMG15_T_STAB_X32_X(x)     ((x) & GENMASK(7, 0))

#define DDR_UMCTL2_DRAMTMG15_EN_DFI_LP_T_STAB(x) (((x) << 31) & GENMASK(31, 31))
#define DDR_UMCTL2_DRAMTMG15_EN_DFI_LP_T_STAB_M  GENMASK(31, 31)
#define DDR_UMCTL2_DRAMTMG15_EN_DFI_LP_T_STAB_X(x)\
	(((x) & GENMASK(31, 31)) >> 31)

/*      DDR_UMCTL2:UMCTL2_REGS:ZQCTL0 */
#define DDR_UMCTL2_ZQCTL0         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 384, 0, 1, 4)

#define DDR_UMCTL2_ZQCTL0_T_ZQ_SHORT_NOP(x)      ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_ZQCTL0_T_ZQ_SHORT_NOP_M       GENMASK(9, 0)
#define DDR_UMCTL2_ZQCTL0_T_ZQ_SHORT_NOP_X(x)    ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_ZQCTL0_T_ZQ_LONG_NOP(x)       (((x) << 16) & GENMASK(26, 16))
#define DDR_UMCTL2_ZQCTL0_T_ZQ_LONG_NOP_M        GENMASK(26, 16)
#define DDR_UMCTL2_ZQCTL0_T_ZQ_LONG_NOP_X(x)     (((x) & GENMASK(26, 16)) >> 16)

#define DDR_UMCTL2_ZQCTL0_ZQ_RESISTOR_SHARED(x)  (((x) << 29) & GENMASK(29, 29))
#define DDR_UMCTL2_ZQCTL0_ZQ_RESISTOR_SHARED_M   GENMASK(29, 29)
#define DDR_UMCTL2_ZQCTL0_ZQ_RESISTOR_SHARED_X(x)\
	(((x) & GENMASK(29, 29)) >> 29)

#define DDR_UMCTL2_ZQCTL0_DIS_SRX_ZQCL(x)        (((x) << 30) & GENMASK(30, 30))
#define DDR_UMCTL2_ZQCTL0_DIS_SRX_ZQCL_M         GENMASK(30, 30)
#define DDR_UMCTL2_ZQCTL0_DIS_SRX_ZQCL_X(x)      (((x) & GENMASK(30, 30)) >> 30)

#define DDR_UMCTL2_ZQCTL0_DIS_AUTO_ZQ(x)         (((x) << 31) & GENMASK(31, 31))
#define DDR_UMCTL2_ZQCTL0_DIS_AUTO_ZQ_M          GENMASK(31, 31)
#define DDR_UMCTL2_ZQCTL0_DIS_AUTO_ZQ_X(x)       (((x) & GENMASK(31, 31)) >> 31)

/*      DDR_UMCTL2:UMCTL2_REGS:ZQCTL1 */
#define DDR_UMCTL2_ZQCTL1         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 388, 0, 1, 4)

#define DDR_UMCTL2_ZQCTL1_T_ZQ_SHORT_INTERVAL_X1024(x) ((x) & GENMASK(19, 0))
#define DDR_UMCTL2_ZQCTL1_T_ZQ_SHORT_INTERVAL_X1024_M GENMASK(19, 0)
#define DDR_UMCTL2_ZQCTL1_T_ZQ_SHORT_INTERVAL_X1024_X(x) ((x) & GENMASK(19, 0))

/*      DDR_UMCTL2:UMCTL2_REGS:DFITMG0 */
#define DDR_UMCTL2_DFITMG0        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 400, 0, 1, 4)

#define DDR_UMCTL2_DFITMG0_DFI_TPHY_WRLAT(x)     ((x) & GENMASK(5, 0))
#define DDR_UMCTL2_DFITMG0_DFI_TPHY_WRLAT_M      GENMASK(5, 0)
#define DDR_UMCTL2_DFITMG0_DFI_TPHY_WRLAT_X(x)   ((x) & GENMASK(5, 0))

#define DDR_UMCTL2_DFITMG0_DFI_TPHY_WRDATA(x)    (((x) << 8) & GENMASK(13, 8))
#define DDR_UMCTL2_DFITMG0_DFI_TPHY_WRDATA_M     GENMASK(13, 8)
#define DDR_UMCTL2_DFITMG0_DFI_TPHY_WRDATA_X(x)  (((x) & GENMASK(13, 8)) >> 8)

#define DDR_UMCTL2_DFITMG0_DFI_WRDATA_USE_DFI_PHY_CLK(x)\
	(((x) << 15) & GENMASK(15, 15))
#define DDR_UMCTL2_DFITMG0_DFI_WRDATA_USE_DFI_PHY_CLK_M GENMASK(15, 15)
#define DDR_UMCTL2_DFITMG0_DFI_WRDATA_USE_DFI_PHY_CLK_X(x)\
	(((x) & GENMASK(15, 15)) >> 15)

#define DDR_UMCTL2_DFITMG0_DFI_T_RDDATA_EN(x)    (((x) << 16) & GENMASK(22, 16))
#define DDR_UMCTL2_DFITMG0_DFI_T_RDDATA_EN_M     GENMASK(22, 16)
#define DDR_UMCTL2_DFITMG0_DFI_T_RDDATA_EN_X(x)  (((x) & GENMASK(22, 16)) >> 16)

#define DDR_UMCTL2_DFITMG0_DFI_RDDATA_USE_DFI_PHY_CLK(x)\
	(((x) << 23) & GENMASK(23, 23))
#define DDR_UMCTL2_DFITMG0_DFI_RDDATA_USE_DFI_PHY_CLK_M GENMASK(23, 23)
#define DDR_UMCTL2_DFITMG0_DFI_RDDATA_USE_DFI_PHY_CLK_X(x)\
	(((x) & GENMASK(23, 23)) >> 23)

#define DDR_UMCTL2_DFITMG0_DFI_T_CTRL_DELAY(x)   (((x) << 24) & GENMASK(28, 24))
#define DDR_UMCTL2_DFITMG0_DFI_T_CTRL_DELAY_M    GENMASK(28, 24)
#define DDR_UMCTL2_DFITMG0_DFI_T_CTRL_DELAY_X(x) (((x) & GENMASK(28, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:DFITMG1 */
#define DDR_UMCTL2_DFITMG1        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 404, 0, 1, 4)

#define DDR_UMCTL2_DFITMG1_DFI_T_DRAM_CLK_ENABLE(x) ((x) & GENMASK(4, 0))
#define DDR_UMCTL2_DFITMG1_DFI_T_DRAM_CLK_ENABLE_M GENMASK(4, 0)
#define DDR_UMCTL2_DFITMG1_DFI_T_DRAM_CLK_ENABLE_X(x) ((x) & GENMASK(4, 0))

#define DDR_UMCTL2_DFITMG1_DFI_T_DRAM_CLK_DISABLE(x)\
	(((x) << 8) & GENMASK(12, 8))
#define DDR_UMCTL2_DFITMG1_DFI_T_DRAM_CLK_DISABLE_M GENMASK(12, 8)
#define DDR_UMCTL2_DFITMG1_DFI_T_DRAM_CLK_DISABLE_X(x)\
	(((x) & GENMASK(12, 8)) >> 8)

#define DDR_UMCTL2_DFITMG1_DFI_T_WRDATA_DELAY(x) (((x) << 16) & GENMASK(20, 16))
#define DDR_UMCTL2_DFITMG1_DFI_T_WRDATA_DELAY_M  GENMASK(20, 16)
#define DDR_UMCTL2_DFITMG1_DFI_T_WRDATA_DELAY_X(x)\
	(((x) & GENMASK(20, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:DFILPCFG0 */
#define DDR_UMCTL2_DFILPCFG0      __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 408, 0, 1, 4)

#define DDR_UMCTL2_DFILPCFG0_DFI_LP_EN_PD(x)     ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DFILPCFG0_DFI_LP_EN_PD_M      GENMASK(0, 0)
#define DDR_UMCTL2_DFILPCFG0_DFI_LP_EN_PD_X(x)   ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_DFILPCFG0_DFI_LP_WAKEUP_PD(x) (((x) << 4) & GENMASK(7, 4))
#define DDR_UMCTL2_DFILPCFG0_DFI_LP_WAKEUP_PD_M  GENMASK(7, 4)
#define DDR_UMCTL2_DFILPCFG0_DFI_LP_WAKEUP_PD_X(x) (((x) & GENMASK(7, 4)) >> 4)

#define DDR_UMCTL2_DFILPCFG0_DFI_LP_EN_SR(x)     (((x) << 8) & GENMASK(8, 8))
#define DDR_UMCTL2_DFILPCFG0_DFI_LP_EN_SR_M      GENMASK(8, 8)
#define DDR_UMCTL2_DFILPCFG0_DFI_LP_EN_SR_X(x)   (((x) & GENMASK(8, 8)) >> 8)

#define DDR_UMCTL2_DFILPCFG0_DFI_LP_WAKEUP_SR(x) (((x) << 12) & GENMASK(15, 12))
#define DDR_UMCTL2_DFILPCFG0_DFI_LP_WAKEUP_SR_M  GENMASK(15, 12)
#define DDR_UMCTL2_DFILPCFG0_DFI_LP_WAKEUP_SR_X(x)\
	(((x) & GENMASK(15, 12)) >> 12)

#define DDR_UMCTL2_DFILPCFG0_DFI_TLP_RESP(x)     (((x) << 24) & GENMASK(28, 24))
#define DDR_UMCTL2_DFILPCFG0_DFI_TLP_RESP_M      GENMASK(28, 24)
#define DDR_UMCTL2_DFILPCFG0_DFI_TLP_RESP_X(x)   (((x) & GENMASK(28, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:DFIUPD0 */
#define DDR_UMCTL2_DFIUPD0        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 416, 0, 1, 4)

#define DDR_UMCTL2_DFIUPD0_DFI_T_CTRLUP_MIN(x)   ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_DFIUPD0_DFI_T_CTRLUP_MIN_M    GENMASK(9, 0)
#define DDR_UMCTL2_DFIUPD0_DFI_T_CTRLUP_MIN_X(x) ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_DFIUPD0_DFI_T_CTRLUP_MAX(x)   (((x) << 16) & GENMASK(25, 16))
#define DDR_UMCTL2_DFIUPD0_DFI_T_CTRLUP_MAX_M    GENMASK(25, 16)
#define DDR_UMCTL2_DFIUPD0_DFI_T_CTRLUP_MAX_X(x) (((x) & GENMASK(25, 16)) >> 16)

#define DDR_UMCTL2_DFIUPD0_CTRLUPD_PRE_SRX(x)    (((x) << 29) & GENMASK(29, 29))
#define DDR_UMCTL2_DFIUPD0_CTRLUPD_PRE_SRX_M     GENMASK(29, 29)
#define DDR_UMCTL2_DFIUPD0_CTRLUPD_PRE_SRX_X(x)  (((x) & GENMASK(29, 29)) >> 29)

#define DDR_UMCTL2_DFIUPD0_DIS_AUTO_CTRLUPD_SRX(x)\
	(((x) << 30) & GENMASK(30, 30))
#define DDR_UMCTL2_DFIUPD0_DIS_AUTO_CTRLUPD_SRX_M GENMASK(30, 30)
#define DDR_UMCTL2_DFIUPD0_DIS_AUTO_CTRLUPD_SRX_X(x)\
	(((x) & GENMASK(30, 30)) >> 30)

#define DDR_UMCTL2_DFIUPD0_DIS_AUTO_CTRLUPD(x)   (((x) << 31) & GENMASK(31, 31))
#define DDR_UMCTL2_DFIUPD0_DIS_AUTO_CTRLUPD_M    GENMASK(31, 31)
#define DDR_UMCTL2_DFIUPD0_DIS_AUTO_CTRLUPD_X(x) (((x) & GENMASK(31, 31)) >> 31)

/*      DDR_UMCTL2:UMCTL2_REGS:DFIUPD1 */
#define DDR_UMCTL2_DFIUPD1        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 420, 0, 1, 4)

#define DDR_UMCTL2_DFIUPD1_DFI_T_CTRLUPD_INTERVAL_MAX_X1024(x)\
	((x) & GENMASK(7, 0))
#define DDR_UMCTL2_DFIUPD1_DFI_T_CTRLUPD_INTERVAL_MAX_X1024_M GENMASK(7, 0)
#define DDR_UMCTL2_DFIUPD1_DFI_T_CTRLUPD_INTERVAL_MAX_X1024_X(x)\
	((x) & GENMASK(7, 0))

#define DDR_UMCTL2_DFIUPD1_DFI_T_CTRLUPD_INTERVAL_MIN_X1024(x)\
	(((x) << 16) & GENMASK(23, 16))
#define DDR_UMCTL2_DFIUPD1_DFI_T_CTRLUPD_INTERVAL_MIN_X1024_M GENMASK(23, 16)
#define DDR_UMCTL2_DFIUPD1_DFI_T_CTRLUPD_INTERVAL_MIN_X1024_X(x)\
	(((x) & GENMASK(23, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:DFIUPD2 */
#define DDR_UMCTL2_DFIUPD2        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 424, 0, 1, 4)

#define DDR_UMCTL2_DFIUPD2_DFI_PHYUPD_EN(x)      (((x) << 31) & GENMASK(31, 31))
#define DDR_UMCTL2_DFIUPD2_DFI_PHYUPD_EN_M       GENMASK(31, 31)
#define DDR_UMCTL2_DFIUPD2_DFI_PHYUPD_EN_X(x)    (((x) & GENMASK(31, 31)) >> 31)

/*      DDR_UMCTL2:UMCTL2_REGS:DFIMISC */
#define DDR_UMCTL2_DFIMISC        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 432, 0, 1, 4)

#define DDR_UMCTL2_DFIMISC_DFI_INIT_COMPLETE_EN(x) ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DFIMISC_DFI_INIT_COMPLETE_EN_M GENMASK(0, 0)
#define DDR_UMCTL2_DFIMISC_DFI_INIT_COMPLETE_EN_X(x) ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_DFIMISC_DFI_DATA_CS_POLARITY(x) (((x) << 2) & GENMASK(2, 2))
#define DDR_UMCTL2_DFIMISC_DFI_DATA_CS_POLARITY_M GENMASK(2, 2)
#define DDR_UMCTL2_DFIMISC_DFI_DATA_CS_POLARITY_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define DDR_UMCTL2_DFIMISC_CTL_IDLE_EN(x)        (((x) << 4) & GENMASK(4, 4))
#define DDR_UMCTL2_DFIMISC_CTL_IDLE_EN_M         GENMASK(4, 4)
#define DDR_UMCTL2_DFIMISC_CTL_IDLE_EN_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define DDR_UMCTL2_DFIMISC_DFI_INIT_START(x)     (((x) << 5) & GENMASK(5, 5))
#define DDR_UMCTL2_DFIMISC_DFI_INIT_START_M      GENMASK(5, 5)
#define DDR_UMCTL2_DFIMISC_DFI_INIT_START_X(x)   (((x) & GENMASK(5, 5)) >> 5)

#define DDR_UMCTL2_DFIMISC_DFI_FREQUENCY(x)      (((x) << 8) & GENMASK(12, 8))
#define DDR_UMCTL2_DFIMISC_DFI_FREQUENCY_M       GENMASK(12, 8)
#define DDR_UMCTL2_DFIMISC_DFI_FREQUENCY_X(x)    (((x) & GENMASK(12, 8)) >> 8)

/*      DDR_UMCTL2:UMCTL2_REGS:DFITMG2 */
#define DDR_UMCTL2_DFITMG2        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 436, 0, 1, 4)

#define DDR_UMCTL2_DFITMG2_DFI_TPHY_WRCSLAT(x)   ((x) & GENMASK(5, 0))
#define DDR_UMCTL2_DFITMG2_DFI_TPHY_WRCSLAT_M    GENMASK(5, 0)
#define DDR_UMCTL2_DFITMG2_DFI_TPHY_WRCSLAT_X(x) ((x) & GENMASK(5, 0))

#define DDR_UMCTL2_DFITMG2_DFI_TPHY_RDCSLAT(x)   (((x) << 8) & GENMASK(14, 8))
#define DDR_UMCTL2_DFITMG2_DFI_TPHY_RDCSLAT_M    GENMASK(14, 8)
#define DDR_UMCTL2_DFITMG2_DFI_TPHY_RDCSLAT_X(x) (((x) & GENMASK(14, 8)) >> 8)

/*      DDR_UMCTL2:UMCTL2_REGS:DFISTAT */
#define DDR_UMCTL2_DFISTAT        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 444, 0, 1, 4)

#define DDR_UMCTL2_DFISTAT_DFI_INIT_COMPLETE(x)  ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DFISTAT_DFI_INIT_COMPLETE_M   GENMASK(0, 0)
#define DDR_UMCTL2_DFISTAT_DFI_INIT_COMPLETE_X(x) ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_DFISTAT_DFI_LP_ACK(x)         (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_DFISTAT_DFI_LP_ACK_M          GENMASK(1, 1)
#define DDR_UMCTL2_DFISTAT_DFI_LP_ACK_X(x)       (((x) & GENMASK(1, 1)) >> 1)

/*      DDR_UMCTL2:UMCTL2_REGS:DFIPHYMSTR */
#define DDR_UMCTL2_DFIPHYMSTR     __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 452, 0, 1, 4)

#define DDR_UMCTL2_DFIPHYMSTR_DFI_PHYMSTR_EN(x)  ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DFIPHYMSTR_DFI_PHYMSTR_EN_M   GENMASK(0, 0)
#define DDR_UMCTL2_DFIPHYMSTR_DFI_PHYMSTR_EN_X(x) ((x) & GENMASK(0, 0))

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP1 */
#define DDR_UMCTL2_ADDRMAP1       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 516, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B0(x)   ((x) & GENMASK(5, 0))
#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B0_M    GENMASK(5, 0)
#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B0_X(x) ((x) & GENMASK(5, 0))

#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B1(x)   (((x) << 8) & GENMASK(13, 8))
#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B1_M    GENMASK(13, 8)
#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B1_X(x) (((x) & GENMASK(13, 8)) >> 8)

#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B2(x)   (((x) << 16) & GENMASK(21, 16))
#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B2_M    GENMASK(21, 16)
#define DDR_UMCTL2_ADDRMAP1_ADDRMAP_BANK_B2_X(x) (((x) & GENMASK(21, 16)) >> 16)

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP2 */
#define DDR_UMCTL2_ADDRMAP2       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 520, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B2(x)    ((x) & GENMASK(3, 0))
#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B2_M     GENMASK(3, 0)
#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B2_X(x)  ((x) & GENMASK(3, 0))

#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B3(x)    (((x) << 8) & GENMASK(11, 8))
#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B3_M     GENMASK(11, 8)
#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B3_X(x)  (((x) & GENMASK(11, 8)) >> 8)

#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B4(x)    (((x) << 16) & GENMASK(19, 16))
#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B4_M     GENMASK(19, 16)
#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B4_X(x)  (((x) & GENMASK(19, 16)) >> 16)

#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B5(x)    (((x) << 24) & GENMASK(27, 24))
#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B5_M     GENMASK(27, 24)
#define DDR_UMCTL2_ADDRMAP2_ADDRMAP_COL_B5_X(x)  (((x) & GENMASK(27, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP3 */
#define DDR_UMCTL2_ADDRMAP3       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 524, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B6(x)    ((x) & GENMASK(3, 0))
#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B6_M     GENMASK(3, 0)
#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B6_X(x)  ((x) & GENMASK(3, 0))

#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B7(x)    (((x) << 8) & GENMASK(12, 8))
#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B7_M     GENMASK(12, 8)
#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B7_X(x)  (((x) & GENMASK(12, 8)) >> 8)

#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B8(x)    (((x) << 16) & GENMASK(20, 16))
#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B8_M     GENMASK(20, 16)
#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B8_X(x)  (((x) & GENMASK(20, 16)) >> 16)

#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B9(x)    (((x) << 24) & GENMASK(28, 24))
#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B9_M     GENMASK(28, 24)
#define DDR_UMCTL2_ADDRMAP3_ADDRMAP_COL_B9_X(x)  (((x) & GENMASK(28, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP4 */
#define DDR_UMCTL2_ADDRMAP4       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 528, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP4_ADDRMAP_COL_B10(x)   ((x) & GENMASK(4, 0))
#define DDR_UMCTL2_ADDRMAP4_ADDRMAP_COL_B10_M    GENMASK(4, 0)
#define DDR_UMCTL2_ADDRMAP4_ADDRMAP_COL_B10_X(x) ((x) & GENMASK(4, 0))

#define DDR_UMCTL2_ADDRMAP4_ADDRMAP_COL_B11(x)   (((x) << 8) & GENMASK(12, 8))
#define DDR_UMCTL2_ADDRMAP4_ADDRMAP_COL_B11_M    GENMASK(12, 8)
#define DDR_UMCTL2_ADDRMAP4_ADDRMAP_COL_B11_X(x) (((x) & GENMASK(12, 8)) >> 8)

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP5 */
#define DDR_UMCTL2_ADDRMAP5       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 532, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B0(x)    ((x) & GENMASK(3, 0))
#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B0_M     GENMASK(3, 0)
#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B0_X(x)  ((x) & GENMASK(3, 0))

#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B1(x)    (((x) << 8) & GENMASK(11, 8))
#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B1_M     GENMASK(11, 8)
#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B1_X(x)  (((x) & GENMASK(11, 8)) >> 8)

#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B2_10(x) (((x) << 16) & GENMASK(19, 16))
#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B2_10_M  GENMASK(19, 16)
#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B2_10_X(x)\
	(((x) & GENMASK(19, 16)) >> 16)

#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B11(x)   (((x) << 24) & GENMASK(27, 24))
#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B11_M    GENMASK(27, 24)
#define DDR_UMCTL2_ADDRMAP5_ADDRMAP_ROW_B11_X(x) (((x) & GENMASK(27, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP6 */
#define DDR_UMCTL2_ADDRMAP6       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 536, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B12(x)   ((x) & GENMASK(3, 0))
#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B12_M    GENMASK(3, 0)
#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B12_X(x) ((x) & GENMASK(3, 0))

#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B13(x)   (((x) << 8) & GENMASK(11, 8))
#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B13_M    GENMASK(11, 8)
#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B13_X(x) (((x) & GENMASK(11, 8)) >> 8)

#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B14(x)   (((x) << 16) & GENMASK(19, 16))
#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B14_M    GENMASK(19, 16)
#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B14_X(x) (((x) & GENMASK(19, 16)) >> 16)

#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B15(x)   (((x) << 24) & GENMASK(27, 24))
#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B15_M    GENMASK(27, 24)
#define DDR_UMCTL2_ADDRMAP6_ADDRMAP_ROW_B15_X(x) (((x) & GENMASK(27, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP9 */
#define DDR_UMCTL2_ADDRMAP9       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 548, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B2(x)    ((x) & GENMASK(3, 0))
#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B2_M     GENMASK(3, 0)
#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B2_X(x)  ((x) & GENMASK(3, 0))

#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B3(x)    (((x) << 8) & GENMASK(11, 8))
#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B3_M     GENMASK(11, 8)
#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B3_X(x)  (((x) & GENMASK(11, 8)) >> 8)

#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B4(x)    (((x) << 16) & GENMASK(19, 16))
#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B4_M     GENMASK(19, 16)
#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B4_X(x)  (((x) & GENMASK(19, 16)) >> 16)

#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B5(x)    (((x) << 24) & GENMASK(27, 24))
#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B5_M     GENMASK(27, 24)
#define DDR_UMCTL2_ADDRMAP9_ADDRMAP_ROW_B5_X(x)  (((x) & GENMASK(27, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP10 */
#define DDR_UMCTL2_ADDRMAP10      __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 552, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B6(x)   ((x) & GENMASK(3, 0))
#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B6_M    GENMASK(3, 0)
#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B6_X(x) ((x) & GENMASK(3, 0))

#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B7(x)   (((x) << 8) & GENMASK(11, 8))
#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B7_M    GENMASK(11, 8)
#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B7_X(x) (((x) & GENMASK(11, 8)) >> 8)

#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B8(x)   (((x) << 16) & GENMASK(19, 16))
#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B8_M    GENMASK(19, 16)
#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B8_X(x) (((x) & GENMASK(19, 16)) >> 16)

#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B9(x)   (((x) << 24) & GENMASK(27, 24))
#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B9_M    GENMASK(27, 24)
#define DDR_UMCTL2_ADDRMAP10_ADDRMAP_ROW_B9_X(x) (((x) & GENMASK(27, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:ADDRMAP11 */
#define DDR_UMCTL2_ADDRMAP11      __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 556, 0, 1, 4)

#define DDR_UMCTL2_ADDRMAP11_ADDRMAP_ROW_B10(x)  ((x) & GENMASK(3, 0))
#define DDR_UMCTL2_ADDRMAP11_ADDRMAP_ROW_B10_M   GENMASK(3, 0)
#define DDR_UMCTL2_ADDRMAP11_ADDRMAP_ROW_B10_X(x) ((x) & GENMASK(3, 0))

/*      DDR_UMCTL2:UMCTL2_REGS:ODTCFG */
#define DDR_UMCTL2_ODTCFG         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 576, 0, 1, 4)

#define DDR_UMCTL2_ODTCFG_RD_ODT_DELAY(x)        (((x) << 2) & GENMASK(6, 2))
#define DDR_UMCTL2_ODTCFG_RD_ODT_DELAY_M         GENMASK(6, 2)
#define DDR_UMCTL2_ODTCFG_RD_ODT_DELAY_X(x)      (((x) & GENMASK(6, 2)) >> 2)

#define DDR_UMCTL2_ODTCFG_RD_ODT_HOLD(x)         (((x) << 8) & GENMASK(11, 8))
#define DDR_UMCTL2_ODTCFG_RD_ODT_HOLD_M          GENMASK(11, 8)
#define DDR_UMCTL2_ODTCFG_RD_ODT_HOLD_X(x)       (((x) & GENMASK(11, 8)) >> 8)

#define DDR_UMCTL2_ODTCFG_WR_ODT_DELAY(x)        (((x) << 16) & GENMASK(20, 16))
#define DDR_UMCTL2_ODTCFG_WR_ODT_DELAY_M         GENMASK(20, 16)
#define DDR_UMCTL2_ODTCFG_WR_ODT_DELAY_X(x)      (((x) & GENMASK(20, 16)) >> 16)

#define DDR_UMCTL2_ODTCFG_WR_ODT_HOLD(x)         (((x) << 24) & GENMASK(27, 24))
#define DDR_UMCTL2_ODTCFG_WR_ODT_HOLD_M          GENMASK(27, 24)
#define DDR_UMCTL2_ODTCFG_WR_ODT_HOLD_X(x)       (((x) & GENMASK(27, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:ODTMAP */
#define DDR_UMCTL2_ODTMAP         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 580, 0, 1, 4)

#define DDR_UMCTL2_ODTMAP_RANK0_WR_ODT(x)        ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_ODTMAP_RANK0_WR_ODT_M         GENMASK(0, 0)
#define DDR_UMCTL2_ODTMAP_RANK0_WR_ODT_X(x)      ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_ODTMAP_RANK0_RD_ODT(x)        (((x) << 4) & GENMASK(4, 4))
#define DDR_UMCTL2_ODTMAP_RANK0_RD_ODT_M         GENMASK(4, 4)
#define DDR_UMCTL2_ODTMAP_RANK0_RD_ODT_X(x)      (((x) & GENMASK(4, 4)) >> 4)

/*      DDR_UMCTL2:UMCTL2_REGS:SCHED */
#define DDR_UMCTL2_SCHED          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 592, 0, 1, 4)

#define DDR_UMCTL2_SCHED_FORCE_LOW_PRI_N(x)      ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_SCHED_FORCE_LOW_PRI_N_M       GENMASK(0, 0)
#define DDR_UMCTL2_SCHED_FORCE_LOW_PRI_N_X(x)    ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_SCHED_PREFER_WRITE(x)         (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_SCHED_PREFER_WRITE_M          GENMASK(1, 1)
#define DDR_UMCTL2_SCHED_PREFER_WRITE_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define DDR_UMCTL2_SCHED_PAGECLOSE(x)            (((x) << 2) & GENMASK(2, 2))
#define DDR_UMCTL2_SCHED_PAGECLOSE_M             GENMASK(2, 2)
#define DDR_UMCTL2_SCHED_PAGECLOSE_X(x)          (((x) & GENMASK(2, 2)) >> 2)

#define DDR_UMCTL2_SCHED_LPR_NUM_ENTRIES(x)      (((x) << 8) & GENMASK(12, 8))
#define DDR_UMCTL2_SCHED_LPR_NUM_ENTRIES_M       GENMASK(12, 8)
#define DDR_UMCTL2_SCHED_LPR_NUM_ENTRIES_X(x)    (((x) & GENMASK(12, 8)) >> 8)

#define DDR_UMCTL2_SCHED_GO2CRITICAL_HYSTERESIS(x)\
	(((x) << 16) & GENMASK(23, 16))
#define DDR_UMCTL2_SCHED_GO2CRITICAL_HYSTERESIS_M GENMASK(23, 16)
#define DDR_UMCTL2_SCHED_GO2CRITICAL_HYSTERESIS_X(x)\
	(((x) & GENMASK(23, 16)) >> 16)

#define DDR_UMCTL2_SCHED_RDWR_IDLE_GAP(x)        (((x) << 24) & GENMASK(30, 24))
#define DDR_UMCTL2_SCHED_RDWR_IDLE_GAP_M         GENMASK(30, 24)
#define DDR_UMCTL2_SCHED_RDWR_IDLE_GAP_X(x)      (((x) & GENMASK(30, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:SCHED1 */
#define DDR_UMCTL2_SCHED1         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 596, 0, 1, 4)

#define DDR_UMCTL2_SCHED1_PAGECLOSE_TIMER(x)     ((x) & GENMASK(7, 0))
#define DDR_UMCTL2_SCHED1_PAGECLOSE_TIMER_M      GENMASK(7, 0)
#define DDR_UMCTL2_SCHED1_PAGECLOSE_TIMER_X(x)   ((x) & GENMASK(7, 0))

/*      DDR_UMCTL2:UMCTL2_REGS:PERFHPR1 */
#define DDR_UMCTL2_PERFHPR1       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 604, 0, 1, 4)

#define DDR_UMCTL2_PERFHPR1_HPR_MAX_STARVE(x)    ((x) & GENMASK(15, 0))
#define DDR_UMCTL2_PERFHPR1_HPR_MAX_STARVE_M     GENMASK(15, 0)
#define DDR_UMCTL2_PERFHPR1_HPR_MAX_STARVE_X(x)  ((x) & GENMASK(15, 0))

#define DDR_UMCTL2_PERFHPR1_HPR_XACT_RUN_LENGTH(x)\
	(((x) << 24) & GENMASK(31, 24))
#define DDR_UMCTL2_PERFHPR1_HPR_XACT_RUN_LENGTH_M GENMASK(31, 24)
#define DDR_UMCTL2_PERFHPR1_HPR_XACT_RUN_LENGTH_X(x)\
	(((x) & GENMASK(31, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:PERFLPR1 */
#define DDR_UMCTL2_PERFLPR1       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 612, 0, 1, 4)

#define DDR_UMCTL2_PERFLPR1_LPR_MAX_STARVE(x)    ((x) & GENMASK(15, 0))
#define DDR_UMCTL2_PERFLPR1_LPR_MAX_STARVE_M     GENMASK(15, 0)
#define DDR_UMCTL2_PERFLPR1_LPR_MAX_STARVE_X(x)  ((x) & GENMASK(15, 0))

#define DDR_UMCTL2_PERFLPR1_LPR_XACT_RUN_LENGTH(x)\
	(((x) << 24) & GENMASK(31, 24))
#define DDR_UMCTL2_PERFLPR1_LPR_XACT_RUN_LENGTH_M GENMASK(31, 24)
#define DDR_UMCTL2_PERFLPR1_LPR_XACT_RUN_LENGTH_X(x)\
	(((x) & GENMASK(31, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:PERFWR1 */
#define DDR_UMCTL2_PERFWR1        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 620, 0, 1, 4)

#define DDR_UMCTL2_PERFWR1_W_MAX_STARVE(x)       ((x) & GENMASK(15, 0))
#define DDR_UMCTL2_PERFWR1_W_MAX_STARVE_M        GENMASK(15, 0)
#define DDR_UMCTL2_PERFWR1_W_MAX_STARVE_X(x)     ((x) & GENMASK(15, 0))

#define DDR_UMCTL2_PERFWR1_W_XACT_RUN_LENGTH(x)  (((x) << 24) & GENMASK(31, 24))
#define DDR_UMCTL2_PERFWR1_W_XACT_RUN_LENGTH_M   GENMASK(31, 24)
#define DDR_UMCTL2_PERFWR1_W_XACT_RUN_LENGTH_X(x)\
	(((x) & GENMASK(31, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:DBG0 */
#define DDR_UMCTL2_DBG0           __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 768, 0, 1, 4)

#define DDR_UMCTL2_DBG0_DIS_WC(x)                ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DBG0_DIS_WC_M                 GENMASK(0, 0)
#define DDR_UMCTL2_DBG0_DIS_WC_X(x)              ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_DBG0_DIS_COLLISION_PAGE_OPT(x) (((x) << 4) & GENMASK(4, 4))
#define DDR_UMCTL2_DBG0_DIS_COLLISION_PAGE_OPT_M GENMASK(4, 4)
#define DDR_UMCTL2_DBG0_DIS_COLLISION_PAGE_OPT_X(x) (((x) & GENMASK(4, 4)) >> 4)

/*      DDR_UMCTL2:UMCTL2_REGS:DBG1 */
#define DDR_UMCTL2_DBG1           __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 772, 0, 1, 4)

#define DDR_UMCTL2_DBG1_DIS_DQ(x)                ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DBG1_DIS_DQ_M                 GENMASK(0, 0)
#define DDR_UMCTL2_DBG1_DIS_DQ_X(x)              ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_DBG1_DIS_HIF(x)               (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_DBG1_DIS_HIF_M                GENMASK(1, 1)
#define DDR_UMCTL2_DBG1_DIS_HIF_X(x)             (((x) & GENMASK(1, 1)) >> 1)

/*      DDR_UMCTL2:UMCTL2_REGS:DBGCAM */
#define DDR_UMCTL2_DBGCAM         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 776, 0, 1, 4)

#define DDR_UMCTL2_DBGCAM_DBG_HPR_Q_DEPTH(x)     ((x) & GENMASK(5, 0))
#define DDR_UMCTL2_DBGCAM_DBG_HPR_Q_DEPTH_M      GENMASK(5, 0)
#define DDR_UMCTL2_DBGCAM_DBG_HPR_Q_DEPTH_X(x)   ((x) & GENMASK(5, 0))

#define DDR_UMCTL2_DBGCAM_DBG_LPR_Q_DEPTH(x)     (((x) << 8) & GENMASK(13, 8))
#define DDR_UMCTL2_DBGCAM_DBG_LPR_Q_DEPTH_M      GENMASK(13, 8)
#define DDR_UMCTL2_DBGCAM_DBG_LPR_Q_DEPTH_X(x)   (((x) & GENMASK(13, 8)) >> 8)

#define DDR_UMCTL2_DBGCAM_DBG_W_Q_DEPTH(x)       (((x) << 16) & GENMASK(21, 16))
#define DDR_UMCTL2_DBGCAM_DBG_W_Q_DEPTH_M        GENMASK(21, 16)
#define DDR_UMCTL2_DBGCAM_DBG_W_Q_DEPTH_X(x)     (((x) & GENMASK(21, 16)) >> 16)

#define DDR_UMCTL2_DBGCAM_DBG_STALL(x)           (((x) << 24) & GENMASK(24, 24))
#define DDR_UMCTL2_DBGCAM_DBG_STALL_M            GENMASK(24, 24)
#define DDR_UMCTL2_DBGCAM_DBG_STALL_X(x)         (((x) & GENMASK(24, 24)) >> 24)

#define DDR_UMCTL2_DBGCAM_DBG_RD_Q_EMPTY(x)      (((x) << 25) & GENMASK(25, 25))
#define DDR_UMCTL2_DBGCAM_DBG_RD_Q_EMPTY_M       GENMASK(25, 25)
#define DDR_UMCTL2_DBGCAM_DBG_RD_Q_EMPTY_X(x)    (((x) & GENMASK(25, 25)) >> 25)

#define DDR_UMCTL2_DBGCAM_DBG_WR_Q_EMPTY(x)      (((x) << 26) & GENMASK(26, 26))
#define DDR_UMCTL2_DBGCAM_DBG_WR_Q_EMPTY_M       GENMASK(26, 26)
#define DDR_UMCTL2_DBGCAM_DBG_WR_Q_EMPTY_X(x)    (((x) & GENMASK(26, 26)) >> 26)

#define DDR_UMCTL2_DBGCAM_RD_DATA_PIPELINE_EMPTY(x)\
	(((x) << 28) & GENMASK(28, 28))
#define DDR_UMCTL2_DBGCAM_RD_DATA_PIPELINE_EMPTY_M GENMASK(28, 28)
#define DDR_UMCTL2_DBGCAM_RD_DATA_PIPELINE_EMPTY_X(x)\
	(((x) & GENMASK(28, 28)) >> 28)

#define DDR_UMCTL2_DBGCAM_WR_DATA_PIPELINE_EMPTY(x)\
	(((x) << 29) & GENMASK(29, 29))
#define DDR_UMCTL2_DBGCAM_WR_DATA_PIPELINE_EMPTY_M GENMASK(29, 29)
#define DDR_UMCTL2_DBGCAM_WR_DATA_PIPELINE_EMPTY_X(x)\
	(((x) & GENMASK(29, 29)) >> 29)

/*      DDR_UMCTL2:UMCTL2_REGS:DBGCMD */
#define DDR_UMCTL2_DBGCMD         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 780, 0, 1, 4)

#define DDR_UMCTL2_DBGCMD_RANK0_REFRESH(x)       ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DBGCMD_RANK0_REFRESH_M        GENMASK(0, 0)
#define DDR_UMCTL2_DBGCMD_RANK0_REFRESH_X(x)     ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_DBGCMD_ZQ_CALIB_SHORT(x)      (((x) << 4) & GENMASK(4, 4))
#define DDR_UMCTL2_DBGCMD_ZQ_CALIB_SHORT_M       GENMASK(4, 4)
#define DDR_UMCTL2_DBGCMD_ZQ_CALIB_SHORT_X(x)    (((x) & GENMASK(4, 4)) >> 4)

#define DDR_UMCTL2_DBGCMD_CTRLUPD(x)             (((x) << 5) & GENMASK(5, 5))
#define DDR_UMCTL2_DBGCMD_CTRLUPD_M              GENMASK(5, 5)
#define DDR_UMCTL2_DBGCMD_CTRLUPD_X(x)           (((x) & GENMASK(5, 5)) >> 5)

/*      DDR_UMCTL2:UMCTL2_REGS:DBGSTAT */
#define DDR_UMCTL2_DBGSTAT        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 784, 0, 1, 4)

#define DDR_UMCTL2_DBGSTAT_RANK0_REFRESH_BUSY(x) ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_DBGSTAT_RANK0_REFRESH_BUSY_M  GENMASK(0, 0)
#define DDR_UMCTL2_DBGSTAT_RANK0_REFRESH_BUSY_X(x) ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_DBGSTAT_ZQ_CALIB_SHORT_BUSY(x) (((x) << 4) & GENMASK(4, 4))
#define DDR_UMCTL2_DBGSTAT_ZQ_CALIB_SHORT_BUSY_M GENMASK(4, 4)
#define DDR_UMCTL2_DBGSTAT_ZQ_CALIB_SHORT_BUSY_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define DDR_UMCTL2_DBGSTAT_CTRLUPD_BUSY(x)       (((x) << 5) & GENMASK(5, 5))
#define DDR_UMCTL2_DBGSTAT_CTRLUPD_BUSY_M        GENMASK(5, 5)
#define DDR_UMCTL2_DBGSTAT_CTRLUPD_BUSY_X(x)     (((x) & GENMASK(5, 5)) >> 5)

/*      DDR_UMCTL2:UMCTL2_REGS:SWCTL */
#define DDR_UMCTL2_SWCTL          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 800, 0, 1, 4)

#define DDR_UMCTL2_SWCTL_SW_DONE(x)              ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_SWCTL_SW_DONE_M               GENMASK(0, 0)
#define DDR_UMCTL2_SWCTL_SW_DONE_X(x)            ((x) & GENMASK(0, 0))

/*      DDR_UMCTL2:UMCTL2_REGS:SWSTAT */
#define DDR_UMCTL2_SWSTAT         __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 804, 0, 1, 4)

#define DDR_UMCTL2_SWSTAT_SW_DONE_ACK(x)         ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_SWSTAT_SW_DONE_ACK_M          GENMASK(0, 0)
#define DDR_UMCTL2_SWSTAT_SW_DONE_ACK_X(x)       ((x) & GENMASK(0, 0))

/*      DDR_UMCTL2:UMCTL2_REGS:POISONCFG */
#define DDR_UMCTL2_POISONCFG      __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 876, 0, 1, 4)

#define DDR_UMCTL2_POISONCFG_WR_POISON_SLVERR_EN(x) ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_POISONCFG_WR_POISON_SLVERR_EN_M GENMASK(0, 0)
#define DDR_UMCTL2_POISONCFG_WR_POISON_SLVERR_EN_X(x) ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_POISONCFG_WR_POISON_INTR_EN(x) (((x) << 4) & GENMASK(4, 4))
#define DDR_UMCTL2_POISONCFG_WR_POISON_INTR_EN_M GENMASK(4, 4)
#define DDR_UMCTL2_POISONCFG_WR_POISON_INTR_EN_X(x) (((x) & GENMASK(4, 4)) >> 4)

#define DDR_UMCTL2_POISONCFG_WR_POISON_INTR_CLR(x) (((x) << 8) & GENMASK(8, 8))
#define DDR_UMCTL2_POISONCFG_WR_POISON_INTR_CLR_M GENMASK(8, 8)
#define DDR_UMCTL2_POISONCFG_WR_POISON_INTR_CLR_X(x)\
	(((x) & GENMASK(8, 8)) >> 8)

#define DDR_UMCTL2_POISONCFG_RD_POISON_SLVERR_EN(x)\
	(((x) << 16) & GENMASK(16, 16))
#define DDR_UMCTL2_POISONCFG_RD_POISON_SLVERR_EN_M GENMASK(16, 16)
#define DDR_UMCTL2_POISONCFG_RD_POISON_SLVERR_EN_X(x)\
	(((x) & GENMASK(16, 16)) >> 16)

#define DDR_UMCTL2_POISONCFG_RD_POISON_INTR_EN(x)\
	(((x) << 20) & GENMASK(20, 20))
#define DDR_UMCTL2_POISONCFG_RD_POISON_INTR_EN_M GENMASK(20, 20)
#define DDR_UMCTL2_POISONCFG_RD_POISON_INTR_EN_X(x)\
	(((x) & GENMASK(20, 20)) >> 20)

#define DDR_UMCTL2_POISONCFG_RD_POISON_INTR_CLR(x)\
	(((x) << 24) & GENMASK(24, 24))
#define DDR_UMCTL2_POISONCFG_RD_POISON_INTR_CLR_M GENMASK(24, 24)
#define DDR_UMCTL2_POISONCFG_RD_POISON_INTR_CLR_X(x)\
	(((x) & GENMASK(24, 24)) >> 24)

/*      DDR_UMCTL2:UMCTL2_REGS:POISONSTAT */
#define DDR_UMCTL2_POISONSTAT     __REG(TARGET_DDR_UMCTL2,\
					0, 1, 0, 0, 1, 1016, 880, 0, 1, 4)

#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_0(x) ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_0_M GENMASK(0, 0)
#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_0_X(x) ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_1(x) (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_1_M GENMASK(1, 1)
#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_1_X(x) (((x) & GENMASK(1, 1)) >> 1)

#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_2(x) (((x) << 2) & GENMASK(2, 2))
#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_2_M GENMASK(2, 2)
#define DDR_UMCTL2_POISONSTAT_WR_POISON_INTR_2_X(x) (((x) & GENMASK(2, 2)) >> 2)

#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_0(x)\
	(((x) << 16) & GENMASK(16, 16))
#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_0_M GENMASK(16, 16)
#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_0_X(x)\
	(((x) & GENMASK(16, 16)) >> 16)

#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_1(x)\
	(((x) << 17) & GENMASK(17, 17))
#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_1_M GENMASK(17, 17)
#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_1_X(x)\
	(((x) & GENMASK(17, 17)) >> 17)

#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_2(x)\
	(((x) << 18) & GENMASK(18, 18))
#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_2_M GENMASK(18, 18)
#define DDR_UMCTL2_POISONSTAT_RD_POISON_INTR_2_X(x)\
	(((x) & GENMASK(18, 18)) >> 18)

/*      DDR_UMCTL2:UMCTL2_MP:PSTAT */
#define DDR_UMCTL2_PSTAT          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 4, 0, 1, 4)

#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_0(x)       ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_0_M        GENMASK(0, 0)
#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_0_X(x)     ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_1(x)       (((x) << 1) & GENMASK(1, 1))
#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_1_M        GENMASK(1, 1)
#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_1_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_2(x)       (((x) << 2) & GENMASK(2, 2))
#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_2_M        GENMASK(2, 2)
#define DDR_UMCTL2_PSTAT_RD_PORT_BUSY_2_X(x)     (((x) & GENMASK(2, 2)) >> 2)

#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_0(x)       (((x) << 16) & GENMASK(16, 16))
#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_0_M        GENMASK(16, 16)
#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_0_X(x)     (((x) & GENMASK(16, 16)) >> 16)

#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_1(x)       (((x) << 17) & GENMASK(17, 17))
#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_1_M        GENMASK(17, 17)
#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_1_X(x)     (((x) & GENMASK(17, 17)) >> 17)

#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_2(x)       (((x) << 18) & GENMASK(18, 18))
#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_2_M        GENMASK(18, 18)
#define DDR_UMCTL2_PSTAT_WR_PORT_BUSY_2_X(x)     (((x) & GENMASK(18, 18)) >> 18)

/*      DDR_UMCTL2:UMCTL2_MP:PCCFG */
#define DDR_UMCTL2_PCCFG          __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 8, 0, 1, 4)

#define DDR_UMCTL2_PCCFG_GO2CRITICAL_EN(x)       ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_PCCFG_GO2CRITICAL_EN_M        GENMASK(0, 0)
#define DDR_UMCTL2_PCCFG_GO2CRITICAL_EN_X(x)     ((x) & GENMASK(0, 0))

#define DDR_UMCTL2_PCCFG_PAGEMATCH_LIMIT(x)      (((x) << 4) & GENMASK(4, 4))
#define DDR_UMCTL2_PCCFG_PAGEMATCH_LIMIT_M       GENMASK(4, 4)
#define DDR_UMCTL2_PCCFG_PAGEMATCH_LIMIT_X(x)    (((x) & GENMASK(4, 4)) >> 4)

#define DDR_UMCTL2_PCCFG_BL_EXP_MODE(x)          (((x) << 8) & GENMASK(8, 8))
#define DDR_UMCTL2_PCCFG_BL_EXP_MODE_M           GENMASK(8, 8)
#define DDR_UMCTL2_PCCFG_BL_EXP_MODE_X(x)        (((x) & GENMASK(8, 8)) >> 8)

/*      DDR_UMCTL2:UMCTL2_MP:PCFGR_0 */
#define DDR_UMCTL2_PCFGR_0        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 12, 0, 1, 4)

#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_PRIORITY(x) ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_PRIORITY_M GENMASK(9, 0)
#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_PRIORITY_X(x) ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_AGING_EN(x)\
	(((x) << 12) & GENMASK(12, 12))
#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_AGING_EN_M GENMASK(12, 12)
#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_AGING_EN_X(x)\
	(((x) & GENMASK(12, 12)) >> 12)

#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_URGENT_EN(x)\
	(((x) << 13) & GENMASK(13, 13))
#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_URGENT_EN_M GENMASK(13, 13)
#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_URGENT_EN_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_PAGEMATCH_EN(x)\
	(((x) << 14) & GENMASK(14, 14))
#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_PAGEMATCH_EN_M GENMASK(14, 14)
#define DDR_UMCTL2_PCFGR_0_PCFGR_0_RD_PORT_PAGEMATCH_EN_X(x)\
	(((x) & GENMASK(14, 14)) >> 14)

/*      DDR_UMCTL2:UMCTL2_MP:PCFGW_0 */
#define DDR_UMCTL2_PCFGW_0        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 16, 0, 1, 4)

#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_PRIORITY(x) ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_PRIORITY_M GENMASK(9, 0)
#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_PRIORITY_X(x) ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_AGING_EN(x)\
	(((x) << 12) & GENMASK(12, 12))
#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_AGING_EN_M GENMASK(12, 12)
#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_AGING_EN_X(x)\
	(((x) & GENMASK(12, 12)) >> 12)

#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_URGENT_EN(x)\
	(((x) << 13) & GENMASK(13, 13))
#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_URGENT_EN_M GENMASK(13, 13)
#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_URGENT_EN_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_PAGEMATCH_EN(x)\
	(((x) << 14) & GENMASK(14, 14))
#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_PAGEMATCH_EN_M GENMASK(14, 14)
#define DDR_UMCTL2_PCFGW_0_PCFGW_0_WR_PORT_PAGEMATCH_EN_X(x)\
	(((x) & GENMASK(14, 14)) >> 14)

/*      DDR_UMCTL2:UMCTL2_MP:PCTRL_0 */
#define DDR_UMCTL2_PCTRL_0        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 152, 0, 1, 4)

#define DDR_UMCTL2_PCTRL_0_PCTRL_0_PORT_EN(x)    ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_PCTRL_0_PCTRL_0_PORT_EN_M     GENMASK(0, 0)
#define DDR_UMCTL2_PCTRL_0_PCTRL_0_PORT_EN_X(x)  ((x) & GENMASK(0, 0))

/*      DDR_UMCTL2:UMCTL2_MP:PCFGQOS0_0 */
#define DDR_UMCTL2_PCFGQOS0_0     __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 156, 0, 1, 4)

#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_LEVEL1(x)\
	((x) & GENMASK(3, 0))
#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_LEVEL1_M GENMASK(3, 0)
#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_LEVEL1_X(x)\
	((x) & GENMASK(3, 0))

#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_REGION0(x)\
	(((x) << 16) & GENMASK(17, 16))
#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_REGION0_M GENMASK(17, 16)
#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_REGION0_X(x)\
	(((x) & GENMASK(17, 16)) >> 16)

#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_REGION1(x)\
	(((x) << 20) & GENMASK(21, 20))
#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_REGION1_M GENMASK(21, 20)
#define DDR_UMCTL2_PCFGQOS0_0_PCFGQOS0_0_RQOS_MAP_REGION1_X(x)\
	(((x) & GENMASK(21, 20)) >> 20)

/*      DDR_UMCTL2:UMCTL2_MP:PCFGR_1 */
#define DDR_UMCTL2_PCFGR_1        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 188, 0, 1, 4)

#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_PRIORITY(x) ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_PRIORITY_M GENMASK(9, 0)
#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_PRIORITY_X(x) ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_AGING_EN(x)\
	(((x) << 12) & GENMASK(12, 12))
#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_AGING_EN_M GENMASK(12, 12)
#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_AGING_EN_X(x)\
	(((x) & GENMASK(12, 12)) >> 12)

#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_URGENT_EN(x)\
	(((x) << 13) & GENMASK(13, 13))
#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_URGENT_EN_M GENMASK(13, 13)
#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_URGENT_EN_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_PAGEMATCH_EN(x)\
	(((x) << 14) & GENMASK(14, 14))
#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_PAGEMATCH_EN_M GENMASK(14, 14)
#define DDR_UMCTL2_PCFGR_1_PCFGR_1_RD_PORT_PAGEMATCH_EN_X(x)\
	(((x) & GENMASK(14, 14)) >> 14)

/*      DDR_UMCTL2:UMCTL2_MP:PCFGW_1 */
#define DDR_UMCTL2_PCFGW_1        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 192, 0, 1, 4)

#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_PRIORITY(x) ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_PRIORITY_M GENMASK(9, 0)
#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_PRIORITY_X(x) ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_AGING_EN(x)\
	(((x) << 12) & GENMASK(12, 12))
#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_AGING_EN_M GENMASK(12, 12)
#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_AGING_EN_X(x)\
	(((x) & GENMASK(12, 12)) >> 12)

#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_URGENT_EN(x)\
	(((x) << 13) & GENMASK(13, 13))
#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_URGENT_EN_M GENMASK(13, 13)
#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_URGENT_EN_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_PAGEMATCH_EN(x)\
	(((x) << 14) & GENMASK(14, 14))
#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_PAGEMATCH_EN_M GENMASK(14, 14)
#define DDR_UMCTL2_PCFGW_1_PCFGW_1_WR_PORT_PAGEMATCH_EN_X(x)\
	(((x) & GENMASK(14, 14)) >> 14)

/*      DDR_UMCTL2:UMCTL2_MP:PCTRL_1 */
#define DDR_UMCTL2_PCTRL_1        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 328, 0, 1, 4)

#define DDR_UMCTL2_PCTRL_1_PCTRL_1_PORT_EN(x)    ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_PCTRL_1_PCTRL_1_PORT_EN_M     GENMASK(0, 0)
#define DDR_UMCTL2_PCTRL_1_PCTRL_1_PORT_EN_X(x)  ((x) & GENMASK(0, 0))

/*      DDR_UMCTL2:UMCTL2_MP:PCFGQOS0_1 */
#define DDR_UMCTL2_PCFGQOS0_1     __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 332, 0, 1, 4)

#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_LEVEL1(x)\
	((x) & GENMASK(3, 0))
#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_LEVEL1_M GENMASK(3, 0)
#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_LEVEL1_X(x)\
	((x) & GENMASK(3, 0))

#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_REGION0(x)\
	(((x) << 16) & GENMASK(17, 16))
#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_REGION0_M GENMASK(17, 16)
#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_REGION0_X(x)\
	(((x) & GENMASK(17, 16)) >> 16)

#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_REGION1(x)\
	(((x) << 20) & GENMASK(21, 20))
#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_REGION1_M GENMASK(21, 20)
#define DDR_UMCTL2_PCFGQOS0_1_PCFGQOS0_1_RQOS_MAP_REGION1_X(x)\
	(((x) & GENMASK(21, 20)) >> 20)

/*      DDR_UMCTL2:UMCTL2_MP:PCFGR_2 */
#define DDR_UMCTL2_PCFGR_2        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 364, 0, 1, 4)

#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_PRIORITY(x) ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_PRIORITY_M GENMASK(9, 0)
#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_PRIORITY_X(x) ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_AGING_EN(x)\
	(((x) << 12) & GENMASK(12, 12))
#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_AGING_EN_M GENMASK(12, 12)
#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_AGING_EN_X(x)\
	(((x) & GENMASK(12, 12)) >> 12)

#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_URGENT_EN(x)\
	(((x) << 13) & GENMASK(13, 13))
#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_URGENT_EN_M GENMASK(13, 13)
#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_URGENT_EN_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_PAGEMATCH_EN(x)\
	(((x) << 14) & GENMASK(14, 14))
#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_PAGEMATCH_EN_M GENMASK(14, 14)
#define DDR_UMCTL2_PCFGR_2_PCFGR_2_RD_PORT_PAGEMATCH_EN_X(x)\
	(((x) & GENMASK(14, 14)) >> 14)

/*      DDR_UMCTL2:UMCTL2_MP:PCFGW_2 */
#define DDR_UMCTL2_PCFGW_2        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 368, 0, 1, 4)

#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_PRIORITY(x) ((x) & GENMASK(9, 0))
#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_PRIORITY_M GENMASK(9, 0)
#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_PRIORITY_X(x) ((x) & GENMASK(9, 0))

#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_AGING_EN(x)\
	(((x) << 12) & GENMASK(12, 12))
#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_AGING_EN_M GENMASK(12, 12)
#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_AGING_EN_X(x)\
	(((x) & GENMASK(12, 12)) >> 12)

#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_URGENT_EN(x)\
	(((x) << 13) & GENMASK(13, 13))
#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_URGENT_EN_M GENMASK(13, 13)
#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_URGENT_EN_X(x)\
	(((x) & GENMASK(13, 13)) >> 13)

#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_PAGEMATCH_EN(x)\
	(((x) << 14) & GENMASK(14, 14))
#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_PAGEMATCH_EN_M GENMASK(14, 14)
#define DDR_UMCTL2_PCFGW_2_PCFGW_2_WR_PORT_PAGEMATCH_EN_X(x)\
	(((x) & GENMASK(14, 14)) >> 14)

/*      DDR_UMCTL2:UMCTL2_MP:PCTRL_2 */
#define DDR_UMCTL2_PCTRL_2        __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 504, 0, 1, 4)

#define DDR_UMCTL2_PCTRL_2_PCTRL_2_PORT_EN(x)    ((x) & GENMASK(0, 0))
#define DDR_UMCTL2_PCTRL_2_PCTRL_2_PORT_EN_M     GENMASK(0, 0)
#define DDR_UMCTL2_PCTRL_2_PCTRL_2_PORT_EN_X(x)  ((x) & GENMASK(0, 0))

/*      DDR_UMCTL2:UMCTL2_MP:PCFGQOS0_2 */
#define DDR_UMCTL2_PCFGQOS0_2     __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 508, 0, 1, 4)

#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_LEVEL1(x)\
	((x) & GENMASK(3, 0))
#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_LEVEL1_M GENMASK(3, 0)
#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_LEVEL1_X(x)\
	((x) & GENMASK(3, 0))

#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_REGION0(x)\
	(((x) << 16) & GENMASK(17, 16))
#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_REGION0_M GENMASK(17, 16)
#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_REGION0_X(x)\
	(((x) & GENMASK(17, 16)) >> 16)

#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_REGION1(x)\
	(((x) << 20) & GENMASK(21, 20))
#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_REGION1_M GENMASK(21, 20)
#define DDR_UMCTL2_PCFGQOS0_2_PCFGQOS0_2_RQOS_MAP_REGION1_X(x)\
	(((x) & GENMASK(21, 20)) >> 20)

/*      DDR_UMCTL2:UMCTL2_MP:SARBASE0 */
#define DDR_UMCTL2_SARBASE0       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 2828, 0, 1, 4)

#define DDR_UMCTL2_SARBASE0_BASE_ADDR(x)         ((x) & GENMASK(2, 0))
#define DDR_UMCTL2_SARBASE0_BASE_ADDR_M          GENMASK(2, 0)
#define DDR_UMCTL2_SARBASE0_BASE_ADDR_X(x)       ((x) & GENMASK(2, 0))

/*      DDR_UMCTL2:UMCTL2_MP:SARSIZE0 */
#define DDR_UMCTL2_SARSIZE0       __REG(TARGET_DDR_UMCTL2,\
					0, 1, 1016, 0, 1, 5896, 2832, 0, 1, 4)

#define DDR_UMCTL2_SARSIZE0_NBLOCKS(x)           ((x) & GENMASK(7, 0))
#define DDR_UMCTL2_SARSIZE0_NBLOCKS_M            GENMASK(7, 0)
#define DDR_UMCTL2_SARSIZE0_NBLOCKS_X(x)         ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_REG:FLEX_MR */
#define FLEXCOM_FLEX_MR(t)        __REG(TARGET_FLEXCOM,\
					t, 5, 0, 0, 1, 256, 0, 0, 1, 4)

#define FLEXCOM_FLEX_MR_OPMODE(x)                ((x) & GENMASK(1, 0))
#define FLEXCOM_FLEX_MR_OPMODE_M                 GENMASK(1, 0)
#define FLEXCOM_FLEX_MR_OPMODE_X(x)              ((x) & GENMASK(1, 0))

/*      FLEXCOM:FLEXCOM_REG:FLEX_RHR */
#define FLEXCOM_FLEX_RHR(t)       __REG(TARGET_FLEXCOM,\
					t, 5, 0, 0, 1, 256, 16, 0, 1, 4)

#define FLEXCOM_FLEX_RHR_RXDATA(x)               ((x) & GENMASK(15, 0))
#define FLEXCOM_FLEX_RHR_RXDATA_M                GENMASK(15, 0)
#define FLEXCOM_FLEX_RHR_RXDATA_X(x)             ((x) & GENMASK(15, 0))

/*      FLEXCOM:FLEXCOM_REG:FLEX_THR */
#define FLEXCOM_FLEX_THR(t)       __REG(TARGET_FLEXCOM,\
					t, 5, 0, 0, 1, 256, 32, 0, 1, 4)

#define FLEXCOM_FLEX_THR_TXDATA(x)               ((x) & GENMASK(15, 0))
#define FLEXCOM_FLEX_THR_TXDATA_M                GENMASK(15, 0)
#define FLEXCOM_FLEX_THR_TXDATA_X(x)             ((x) & GENMASK(15, 0))

/*      FLEXCOM:FLEXCOM_REG:FLEX_VERSION */
#define FLEXCOM_FLEX_VERSION(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 0, 0, 1, 256, 252, 0, 1, 4)

#define FLEXCOM_FLEX_VERSION_MFN(x)              (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_VERSION_MFN_M               GENMASK(18, 16)
#define FLEXCOM_FLEX_VERSION_MFN_X(x)            (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_VERSION_VERSION(x)          ((x) & GENMASK(11, 0))
#define FLEXCOM_FLEX_VERSION_VERSION_M           GENMASK(11, 0)
#define FLEXCOM_FLEX_VERSION_VERSION_X(x)        ((x) & GENMASK(11, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_CR */
#define FLEXCOM_FLEX_US_CR(t)     __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 0, 0, 1, 4)

#define FLEXCOM_FLEX_US_CR_FIFODIS(x)            (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_US_CR_FIFODIS_M             GENMASK(31, 31)
#define FLEXCOM_FLEX_US_CR_FIFODIS_X(x)          (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_US_CR_FIFOEN(x)             (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_US_CR_FIFOEN_M              GENMASK(30, 30)
#define FLEXCOM_FLEX_US_CR_FIFOEN_X(x)           (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_US_CR_USART_REQCLR(x)       (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_US_CR_USART_REQCLR_M        GENMASK(28, 28)
#define FLEXCOM_FLEX_US_CR_USART_REQCLR_X(x)     (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_US_CR_TXFLCLR(x)            (((x) << 26) & GENMASK(26, 26))
#define FLEXCOM_FLEX_US_CR_TXFLCLR_M             GENMASK(26, 26)
#define FLEXCOM_FLEX_US_CR_TXFLCLR_X(x)          (((x) & GENMASK(26, 26)) >> 26)

#define FLEXCOM_FLEX_US_CR_RXFCLR(x)             (((x) << 25) & GENMASK(25, 25))
#define FLEXCOM_FLEX_US_CR_RXFCLR_M              GENMASK(25, 25)
#define FLEXCOM_FLEX_US_CR_RXFCLR_X(x)           (((x) & GENMASK(25, 25)) >> 25)

#define FLEXCOM_FLEX_US_CR_TXFCLR(x)             (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_US_CR_TXFCLR_M              GENMASK(24, 24)
#define FLEXCOM_FLEX_US_CR_TXFCLR_X(x)           (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_US_CR_LINWKUP(x)            (((x) << 21) & GENMASK(21, 21))
#define FLEXCOM_FLEX_US_CR_LINWKUP_M             GENMASK(21, 21)
#define FLEXCOM_FLEX_US_CR_LINWKUP_X(x)          (((x) & GENMASK(21, 21)) >> 21)

#define FLEXCOM_FLEX_US_CR_LINABT(x)             (((x) << 20) & GENMASK(20, 20))
#define FLEXCOM_FLEX_US_CR_LINABT_M              GENMASK(20, 20)
#define FLEXCOM_FLEX_US_CR_LINABT_X(x)           (((x) & GENMASK(20, 20)) >> 20)

#define FLEXCOM_FLEX_US_CR_RTSDIS(x)             (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_US_CR_RTSDIS_M              GENMASK(19, 19)
#define FLEXCOM_FLEX_US_CR_RTSDIS_X(x)           (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_US_CR_RTSEN(x)              (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_US_CR_RTSEN_M               GENMASK(18, 18)
#define FLEXCOM_FLEX_US_CR_RTSEN_X(x)            (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_US_CR_DTRDIS(x)             (((x) << 17) & GENMASK(17, 17))
#define FLEXCOM_FLEX_US_CR_DTRDIS_M              GENMASK(17, 17)
#define FLEXCOM_FLEX_US_CR_DTRDIS_X(x)           (((x) & GENMASK(17, 17)) >> 17)

#define FLEXCOM_FLEX_US_CR_DTREN(x)              (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_US_CR_DTREN_M               GENMASK(16, 16)
#define FLEXCOM_FLEX_US_CR_DTREN_X(x)            (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_US_CR_RETTO(x)              (((x) << 15) & GENMASK(15, 15))
#define FLEXCOM_FLEX_US_CR_RETTO_M               GENMASK(15, 15)
#define FLEXCOM_FLEX_US_CR_RETTO_X(x)            (((x) & GENMASK(15, 15)) >> 15)

#define FLEXCOM_FLEX_US_CR_RSTNACK(x)            (((x) << 14) & GENMASK(14, 14))
#define FLEXCOM_FLEX_US_CR_RSTNACK_M             GENMASK(14, 14)
#define FLEXCOM_FLEX_US_CR_RSTNACK_X(x)          (((x) & GENMASK(14, 14)) >> 14)

#define FLEXCOM_FLEX_US_CR_RSTIT(x)              (((x) << 13) & GENMASK(13, 13))
#define FLEXCOM_FLEX_US_CR_RSTIT_M               GENMASK(13, 13)
#define FLEXCOM_FLEX_US_CR_RSTIT_X(x)            (((x) & GENMASK(13, 13)) >> 13)

#define FLEXCOM_FLEX_US_CR_SENDA(x)              (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_US_CR_SENDA_M               GENMASK(12, 12)
#define FLEXCOM_FLEX_US_CR_SENDA_X(x)            (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_US_CR_STTTO(x)              (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_US_CR_STTTO_M               GENMASK(11, 11)
#define FLEXCOM_FLEX_US_CR_STTTO_X(x)            (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_US_CR_STPBRK(x)             (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_US_CR_STPBRK_M              GENMASK(10, 10)
#define FLEXCOM_FLEX_US_CR_STPBRK_X(x)           (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_US_CR_STTBRK(x)             (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_CR_STTBRK_M              GENMASK(9, 9)
#define FLEXCOM_FLEX_US_CR_STTBRK_X(x)           (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_CR_RSTSTA(x)             (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_US_CR_RSTSTA_M              GENMASK(8, 8)
#define FLEXCOM_FLEX_US_CR_RSTSTA_X(x)           (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_US_CR_TXDIS(x)              (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_CR_TXDIS_M               GENMASK(7, 7)
#define FLEXCOM_FLEX_US_CR_TXDIS_X(x)            (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_CR_TXEN(x)               (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_CR_TXEN_M                GENMASK(6, 6)
#define FLEXCOM_FLEX_US_CR_TXEN_X(x)             (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_CR_RXDIS(x)              (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_CR_RXDIS_M               GENMASK(5, 5)
#define FLEXCOM_FLEX_US_CR_RXDIS_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_CR_RXEN(x)               (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_CR_RXEN_M                GENMASK(4, 4)
#define FLEXCOM_FLEX_US_CR_RXEN_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_CR_RSTTX(x)              (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_CR_RSTTX_M               GENMASK(3, 3)
#define FLEXCOM_FLEX_US_CR_RSTTX_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_CR_RSTRX(x)              (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_CR_RSTRX_M               GENMASK(2, 2)
#define FLEXCOM_FLEX_US_CR_RSTRX_X(x)            (((x) & GENMASK(2, 2)) >> 2)

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_MR */
#define FLEXCOM_FLEX_US_MR(t)     __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 4, 0, 1, 4)

#define FLEXCOM_FLEX_US_MR_ONEBIT(x)             (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_US_MR_ONEBIT_M              GENMASK(31, 31)
#define FLEXCOM_FLEX_US_MR_ONEBIT_X(x)           (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_US_MR_MODSYNC(x)            (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_US_MR_MODSYNC_M             GENMASK(30, 30)
#define FLEXCOM_FLEX_US_MR_MODSYNC_X(x)          (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_US_MR_MAN(x)                (((x) << 29) & GENMASK(29, 29))
#define FLEXCOM_FLEX_US_MR_MAN_M                 GENMASK(29, 29)
#define FLEXCOM_FLEX_US_MR_MAN_X(x)              (((x) & GENMASK(29, 29)) >> 29)

#define FLEXCOM_FLEX_US_MR_FILTER(x)             (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_US_MR_FILTER_M              GENMASK(28, 28)
#define FLEXCOM_FLEX_US_MR_FILTER_X(x)           (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_US_MR_MAX_ITERATION(x)      (((x) << 24) & GENMASK(26, 24))
#define FLEXCOM_FLEX_US_MR_MAX_ITERATION_M       GENMASK(26, 24)
#define FLEXCOM_FLEX_US_MR_MAX_ITERATION_X(x)    (((x) & GENMASK(26, 24)) >> 24)

#define FLEXCOM_FLEX_US_MR_INVDATA(x)            (((x) << 23) & GENMASK(23, 23))
#define FLEXCOM_FLEX_US_MR_INVDATA_M             GENMASK(23, 23)
#define FLEXCOM_FLEX_US_MR_INVDATA_X(x)          (((x) & GENMASK(23, 23)) >> 23)

#define FLEXCOM_FLEX_US_MR_VAR_SYNC(x)           (((x) << 22) & GENMASK(22, 22))
#define FLEXCOM_FLEX_US_MR_VAR_SYNC_M            GENMASK(22, 22)
#define FLEXCOM_FLEX_US_MR_VAR_SYNC_X(x)         (((x) & GENMASK(22, 22)) >> 22)

#define FLEXCOM_FLEX_US_MR_DSNACK(x)             (((x) << 21) & GENMASK(21, 21))
#define FLEXCOM_FLEX_US_MR_DSNACK_M              GENMASK(21, 21)
#define FLEXCOM_FLEX_US_MR_DSNACK_X(x)           (((x) & GENMASK(21, 21)) >> 21)

#define FLEXCOM_FLEX_US_MR_INACK(x)              (((x) << 20) & GENMASK(20, 20))
#define FLEXCOM_FLEX_US_MR_INACK_M               GENMASK(20, 20)
#define FLEXCOM_FLEX_US_MR_INACK_X(x)            (((x) & GENMASK(20, 20)) >> 20)

#define FLEXCOM_FLEX_US_MR_OVER(x)               (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_US_MR_OVER_M                GENMASK(19, 19)
#define FLEXCOM_FLEX_US_MR_OVER_X(x)             (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_US_MR_CLKO(x)               (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_US_MR_CLKO_M                GENMASK(18, 18)
#define FLEXCOM_FLEX_US_MR_CLKO_X(x)             (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_US_MR_MODE9(x)              (((x) << 17) & GENMASK(17, 17))
#define FLEXCOM_FLEX_US_MR_MODE9_M               GENMASK(17, 17)
#define FLEXCOM_FLEX_US_MR_MODE9_X(x)            (((x) & GENMASK(17, 17)) >> 17)

#define FLEXCOM_FLEX_US_MR_MSBF(x)               (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_US_MR_MSBF_M                GENMASK(16, 16)
#define FLEXCOM_FLEX_US_MR_MSBF_X(x)             (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_US_MR_CHMODE(x)             (((x) << 14) & GENMASK(15, 14))
#define FLEXCOM_FLEX_US_MR_CHMODE_M              GENMASK(15, 14)
#define FLEXCOM_FLEX_US_MR_CHMODE_X(x)           (((x) & GENMASK(15, 14)) >> 14)

#define FLEXCOM_FLEX_US_MR_NBSTOP(x)             (((x) << 12) & GENMASK(13, 12))
#define FLEXCOM_FLEX_US_MR_NBSTOP_M              GENMASK(13, 12)
#define FLEXCOM_FLEX_US_MR_NBSTOP_X(x)           (((x) & GENMASK(13, 12)) >> 12)

#define FLEXCOM_FLEX_US_MR_PAR(x)                (((x) << 9) & GENMASK(11, 9))
#define FLEXCOM_FLEX_US_MR_PAR_M                 GENMASK(11, 9)
#define FLEXCOM_FLEX_US_MR_PAR_X(x)              (((x) & GENMASK(11, 9)) >> 9)

#define FLEXCOM_FLEX_US_MR_SYNC(x)               (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_US_MR_SYNC_M                GENMASK(8, 8)
#define FLEXCOM_FLEX_US_MR_SYNC_X(x)             (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_US_MR_CHRL(x)               (((x) << 6) & GENMASK(7, 6))
#define FLEXCOM_FLEX_US_MR_CHRL_M                GENMASK(7, 6)
#define FLEXCOM_FLEX_US_MR_CHRL_X(x)             (((x) & GENMASK(7, 6)) >> 6)

#define FLEXCOM_FLEX_US_MR_USCLKS(x)             (((x) << 4) & GENMASK(5, 4))
#define FLEXCOM_FLEX_US_MR_USCLKS_M              GENMASK(5, 4)
#define FLEXCOM_FLEX_US_MR_USCLKS_X(x)           (((x) & GENMASK(5, 4)) >> 4)

#define FLEXCOM_FLEX_US_MR_USART_MODE(x)         ((x) & GENMASK(3, 0))
#define FLEXCOM_FLEX_US_MR_USART_MODE_M          GENMASK(3, 0)
#define FLEXCOM_FLEX_US_MR_USART_MODE_X(x)       ((x) & GENMASK(3, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_IER */
#define FLEXCOM_FLEX_US_IER(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 8, 0, 1, 4)

#define FLEXCOM_FLEX_US_IER_MANE_IE(x)           (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_US_IER_MANE_IE_M            GENMASK(24, 24)
#define FLEXCOM_FLEX_US_IER_MANE_IE_X(x)         (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_US_IER_CMP_IE(x)            (((x) << 22) & GENMASK(22, 22))
#define FLEXCOM_FLEX_US_IER_CMP_IE_M             GENMASK(22, 22)
#define FLEXCOM_FLEX_US_IER_CMP_IE_X(x)          (((x) & GENMASK(22, 22)) >> 22)

#define FLEXCOM_FLEX_US_IER_CTSIC_IE(x)          (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_US_IER_CTSIC_IE_M           GENMASK(19, 19)
#define FLEXCOM_FLEX_US_IER_CTSIC_IE_X(x)        (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_US_IER_DCDIC_IE(x)          (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_US_IER_DCDIC_IE_M           GENMASK(18, 18)
#define FLEXCOM_FLEX_US_IER_DCDIC_IE_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_US_IER_DSRIC_IE(x)          (((x) << 17) & GENMASK(17, 17))
#define FLEXCOM_FLEX_US_IER_DSRIC_IE_M           GENMASK(17, 17)
#define FLEXCOM_FLEX_US_IER_DSRIC_IE_X(x)        (((x) & GENMASK(17, 17)) >> 17)

#define FLEXCOM_FLEX_US_IER_RIIC_IE(x)           (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_US_IER_RIIC_IE_M            GENMASK(16, 16)
#define FLEXCOM_FLEX_US_IER_RIIC_IE_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_US_IER_NACK_IE(x)           (((x) << 13) & GENMASK(13, 13))
#define FLEXCOM_FLEX_US_IER_NACK_IE_M            GENMASK(13, 13)
#define FLEXCOM_FLEX_US_IER_NACK_IE_X(x)         (((x) & GENMASK(13, 13)) >> 13)

#define FLEXCOM_FLEX_US_IER_RXBUFF_IE(x)         (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_US_IER_RXBUFF_IE_M          GENMASK(12, 12)
#define FLEXCOM_FLEX_US_IER_RXBUFF_IE_X(x)       (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_US_IER_TXBUFE_IE(x)         (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_US_IER_TXBUFE_IE_M          GENMASK(11, 11)
#define FLEXCOM_FLEX_US_IER_TXBUFE_IE_X(x)       (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_US_IER_ITER_IE(x)           (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_US_IER_ITER_IE_M            GENMASK(10, 10)
#define FLEXCOM_FLEX_US_IER_ITER_IE_X(x)         (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_US_IER_TXEMPTY_IE(x)        (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_IER_TXEMPTY_IE_M         GENMASK(9, 9)
#define FLEXCOM_FLEX_US_IER_TXEMPTY_IE_X(x)      (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_IER_TIMEOUT_IE(x)        (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_US_IER_TIMEOUT_IE_M         GENMASK(8, 8)
#define FLEXCOM_FLEX_US_IER_TIMEOUT_IE_X(x)      (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_US_IER_PARE_IE(x)           (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_IER_PARE_IE_M            GENMASK(7, 7)
#define FLEXCOM_FLEX_US_IER_PARE_IE_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_IER_FRAME_IE(x)          (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_IER_FRAME_IE_M           GENMASK(6, 6)
#define FLEXCOM_FLEX_US_IER_FRAME_IE_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_IER_OVRE_IE(x)           (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_IER_OVRE_IE_M            GENMASK(5, 5)
#define FLEXCOM_FLEX_US_IER_OVRE_IE_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_IER_ENDTX_IE(x)          (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_IER_ENDTX_IE_M           GENMASK(4, 4)
#define FLEXCOM_FLEX_US_IER_ENDTX_IE_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_IER_ENDRX_IE(x)          (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_IER_ENDRX_IE_M           GENMASK(3, 3)
#define FLEXCOM_FLEX_US_IER_ENDRX_IE_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_IER_RXBRK_IE(x)          (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_IER_RXBRK_IE_M           GENMASK(2, 2)
#define FLEXCOM_FLEX_US_IER_RXBRK_IE_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_IER_TXRDY_IE(x)          (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_IER_TXRDY_IE_M           GENMASK(1, 1)
#define FLEXCOM_FLEX_US_IER_TXRDY_IE_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_IER_RXRDY_IE(x)          ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_IER_RXRDY_IE_M           GENMASK(0, 0)
#define FLEXCOM_FLEX_US_IER_RXRDY_IE_X(x)        ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_IDR */
#define FLEXCOM_FLEX_US_IDR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 12, 0, 1, 4)

#define FLEXCOM_FLEX_US_IDR_MANE_ID(x)           (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_US_IDR_MANE_ID_M            GENMASK(24, 24)
#define FLEXCOM_FLEX_US_IDR_MANE_ID_X(x)         (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_US_IDR_CMP_ID(x)            (((x) << 22) & GENMASK(22, 22))
#define FLEXCOM_FLEX_US_IDR_CMP_ID_M             GENMASK(22, 22)
#define FLEXCOM_FLEX_US_IDR_CMP_ID_X(x)          (((x) & GENMASK(22, 22)) >> 22)

#define FLEXCOM_FLEX_US_IDR_CTSIC_ID(x)          (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_US_IDR_CTSIC_ID_M           GENMASK(19, 19)
#define FLEXCOM_FLEX_US_IDR_CTSIC_ID_X(x)        (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_US_IDR_DCDIC_ID(x)          (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_US_IDR_DCDIC_ID_M           GENMASK(18, 18)
#define FLEXCOM_FLEX_US_IDR_DCDIC_ID_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_US_IDR_DSRIC_ID(x)          (((x) << 17) & GENMASK(17, 17))
#define FLEXCOM_FLEX_US_IDR_DSRIC_ID_M           GENMASK(17, 17)
#define FLEXCOM_FLEX_US_IDR_DSRIC_ID_X(x)        (((x) & GENMASK(17, 17)) >> 17)

#define FLEXCOM_FLEX_US_IDR_RIIC_ID(x)           (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_US_IDR_RIIC_ID_M            GENMASK(16, 16)
#define FLEXCOM_FLEX_US_IDR_RIIC_ID_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_US_IDR_NACK_ID(x)           (((x) << 13) & GENMASK(13, 13))
#define FLEXCOM_FLEX_US_IDR_NACK_ID_M            GENMASK(13, 13)
#define FLEXCOM_FLEX_US_IDR_NACK_ID_X(x)         (((x) & GENMASK(13, 13)) >> 13)

#define FLEXCOM_FLEX_US_IDR_RXBUFF_ID(x)         (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_US_IDR_RXBUFF_ID_M          GENMASK(12, 12)
#define FLEXCOM_FLEX_US_IDR_RXBUFF_ID_X(x)       (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_US_IDR_TXBUFE_ID(x)         (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_US_IDR_TXBUFE_ID_M          GENMASK(11, 11)
#define FLEXCOM_FLEX_US_IDR_TXBUFE_ID_X(x)       (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_US_IDR_ITER_ID(x)           (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_US_IDR_ITER_ID_M            GENMASK(10, 10)
#define FLEXCOM_FLEX_US_IDR_ITER_ID_X(x)         (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_US_IDR_TXEMPTY_ID(x)        (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_IDR_TXEMPTY_ID_M         GENMASK(9, 9)
#define FLEXCOM_FLEX_US_IDR_TXEMPTY_ID_X(x)      (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_IDR_TIMEOUT_ID(x)        (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_US_IDR_TIMEOUT_ID_M         GENMASK(8, 8)
#define FLEXCOM_FLEX_US_IDR_TIMEOUT_ID_X(x)      (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_US_IDR_PARE_ID(x)           (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_IDR_PARE_ID_M            GENMASK(7, 7)
#define FLEXCOM_FLEX_US_IDR_PARE_ID_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_IDR_FRAME_ID(x)          (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_IDR_FRAME_ID_M           GENMASK(6, 6)
#define FLEXCOM_FLEX_US_IDR_FRAME_ID_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_IDR_OVRE_ID(x)           (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_IDR_OVRE_ID_M            GENMASK(5, 5)
#define FLEXCOM_FLEX_US_IDR_OVRE_ID_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_IDR_ENDTX_ID(x)          (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_IDR_ENDTX_ID_M           GENMASK(4, 4)
#define FLEXCOM_FLEX_US_IDR_ENDTX_ID_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_IDR_ENDRX_ID(x)          (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_IDR_ENDRX_ID_M           GENMASK(3, 3)
#define FLEXCOM_FLEX_US_IDR_ENDRX_ID_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_IDR_RXBRK_ID(x)          (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_IDR_RXBRK_ID_M           GENMASK(2, 2)
#define FLEXCOM_FLEX_US_IDR_RXBRK_ID_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_IDR_TXRDY_ID(x)          (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_IDR_TXRDY_ID_M           GENMASK(1, 1)
#define FLEXCOM_FLEX_US_IDR_TXRDY_ID_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_IDR_RXRDY_ID(x)          ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_IDR_RXRDY_ID_M           GENMASK(0, 0)
#define FLEXCOM_FLEX_US_IDR_RXRDY_ID_X(x)        ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_IMR */
#define FLEXCOM_FLEX_US_IMR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 16, 0, 1, 4)

#define FLEXCOM_FLEX_US_IMR_MANE_IM(x)           (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_US_IMR_MANE_IM_M            GENMASK(24, 24)
#define FLEXCOM_FLEX_US_IMR_MANE_IM_X(x)         (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_US_IMR_CMP_IM(x)            (((x) << 22) & GENMASK(22, 22))
#define FLEXCOM_FLEX_US_IMR_CMP_IM_M             GENMASK(22, 22)
#define FLEXCOM_FLEX_US_IMR_CMP_IM_X(x)          (((x) & GENMASK(22, 22)) >> 22)

#define FLEXCOM_FLEX_US_IMR_CTSIC_IM(x)          (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_US_IMR_CTSIC_IM_M           GENMASK(19, 19)
#define FLEXCOM_FLEX_US_IMR_CTSIC_IM_X(x)        (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_US_IMR_DCDIC_IM(x)          (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_US_IMR_DCDIC_IM_M           GENMASK(18, 18)
#define FLEXCOM_FLEX_US_IMR_DCDIC_IM_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_US_IMR_DSRIC_IM(x)          (((x) << 17) & GENMASK(17, 17))
#define FLEXCOM_FLEX_US_IMR_DSRIC_IM_M           GENMASK(17, 17)
#define FLEXCOM_FLEX_US_IMR_DSRIC_IM_X(x)        (((x) & GENMASK(17, 17)) >> 17)

#define FLEXCOM_FLEX_US_IMR_RIIC_IM(x)           (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_US_IMR_RIIC_IM_M            GENMASK(16, 16)
#define FLEXCOM_FLEX_US_IMR_RIIC_IM_X(x)         (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_US_IMR_NACK_IM(x)           (((x) << 13) & GENMASK(13, 13))
#define FLEXCOM_FLEX_US_IMR_NACK_IM_M            GENMASK(13, 13)
#define FLEXCOM_FLEX_US_IMR_NACK_IM_X(x)         (((x) & GENMASK(13, 13)) >> 13)

#define FLEXCOM_FLEX_US_IMR_RXBUFF_IM(x)         (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_US_IMR_RXBUFF_IM_M          GENMASK(12, 12)
#define FLEXCOM_FLEX_US_IMR_RXBUFF_IM_X(x)       (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_US_IMR_TXBUFE_IM(x)         (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_US_IMR_TXBUFE_IM_M          GENMASK(11, 11)
#define FLEXCOM_FLEX_US_IMR_TXBUFE_IM_X(x)       (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_US_IMR_ITER_IM(x)           (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_US_IMR_ITER_IM_M            GENMASK(10, 10)
#define FLEXCOM_FLEX_US_IMR_ITER_IM_X(x)         (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_US_IMR_TXEMPTY_IM(x)        (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_IMR_TXEMPTY_IM_M         GENMASK(9, 9)
#define FLEXCOM_FLEX_US_IMR_TXEMPTY_IM_X(x)      (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_IMR_TIMEOUT_IM(x)        (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_US_IMR_TIMEOUT_IM_M         GENMASK(8, 8)
#define FLEXCOM_FLEX_US_IMR_TIMEOUT_IM_X(x)      (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_US_IMR_PARE_IM(x)           (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_IMR_PARE_IM_M            GENMASK(7, 7)
#define FLEXCOM_FLEX_US_IMR_PARE_IM_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_IMR_FRAME_IM(x)          (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_IMR_FRAME_IM_M           GENMASK(6, 6)
#define FLEXCOM_FLEX_US_IMR_FRAME_IM_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_IMR_OVRE_IM(x)           (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_IMR_OVRE_IM_M            GENMASK(5, 5)
#define FLEXCOM_FLEX_US_IMR_OVRE_IM_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_IMR_ENDTX_IM(x)          (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_IMR_ENDTX_IM_M           GENMASK(4, 4)
#define FLEXCOM_FLEX_US_IMR_ENDTX_IM_X(x)        (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_IMR_ENDRX_IM(x)          (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_IMR_ENDRX_IM_M           GENMASK(3, 3)
#define FLEXCOM_FLEX_US_IMR_ENDRX_IM_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_IMR_RXBRK_IM(x)          (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_IMR_RXBRK_IM_M           GENMASK(2, 2)
#define FLEXCOM_FLEX_US_IMR_RXBRK_IM_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_IMR_TXRDY_IM(x)          (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_IMR_TXRDY_IM_M           GENMASK(1, 1)
#define FLEXCOM_FLEX_US_IMR_TXRDY_IM_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_IMR_RXRDY_IM(x)          ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_IMR_RXRDY_IM_M           GENMASK(0, 0)
#define FLEXCOM_FLEX_US_IMR_RXRDY_IM_X(x)        ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_CSR */
#define FLEXCOM_FLEX_US_CSR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 20, 0, 1, 4)

#define FLEXCOM_FLEX_US_CSR_MANE(x)              (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_US_CSR_MANE_M               GENMASK(24, 24)
#define FLEXCOM_FLEX_US_CSR_MANE_X(x)            (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_US_CSR_CTS(x)               (((x) << 23) & GENMASK(23, 23))
#define FLEXCOM_FLEX_US_CSR_CTS_M                GENMASK(23, 23)
#define FLEXCOM_FLEX_US_CSR_CTS_X(x)             (((x) & GENMASK(23, 23)) >> 23)

#define FLEXCOM_FLEX_US_CSR_CMP(x)               (((x) << 22) & GENMASK(22, 22))
#define FLEXCOM_FLEX_US_CSR_CMP_M                GENMASK(22, 22)
#define FLEXCOM_FLEX_US_CSR_CMP_X(x)             (((x) & GENMASK(22, 22)) >> 22)

#define FLEXCOM_FLEX_US_CSR_CTSIC(x)             (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_US_CSR_CTSIC_M              GENMASK(19, 19)
#define FLEXCOM_FLEX_US_CSR_CTSIC_X(x)           (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_US_CSR_DCDIC(x)             (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_US_CSR_DCDIC_M              GENMASK(18, 18)
#define FLEXCOM_FLEX_US_CSR_DCDIC_X(x)           (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_US_CSR_DSRIC(x)             (((x) << 17) & GENMASK(17, 17))
#define FLEXCOM_FLEX_US_CSR_DSRIC_M              GENMASK(17, 17)
#define FLEXCOM_FLEX_US_CSR_DSRIC_X(x)           (((x) & GENMASK(17, 17)) >> 17)

#define FLEXCOM_FLEX_US_CSR_RIIC(x)              (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_US_CSR_RIIC_M               GENMASK(16, 16)
#define FLEXCOM_FLEX_US_CSR_RIIC_X(x)            (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_US_CSR_NACK(x)              (((x) << 13) & GENMASK(13, 13))
#define FLEXCOM_FLEX_US_CSR_NACK_M               GENMASK(13, 13)
#define FLEXCOM_FLEX_US_CSR_NACK_X(x)            (((x) & GENMASK(13, 13)) >> 13)

#define FLEXCOM_FLEX_US_CSR_RXBUFF(x)            (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_US_CSR_RXBUFF_M             GENMASK(12, 12)
#define FLEXCOM_FLEX_US_CSR_RXBUFF_X(x)          (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_US_CSR_TXBUFE(x)            (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_US_CSR_TXBUFE_M             GENMASK(11, 11)
#define FLEXCOM_FLEX_US_CSR_TXBUFE_X(x)          (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_US_CSR_ITER(x)              (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_US_CSR_ITER_M               GENMASK(10, 10)
#define FLEXCOM_FLEX_US_CSR_ITER_X(x)            (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_US_CSR_TXEMPTY(x)           (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_CSR_TXEMPTY_M            GENMASK(9, 9)
#define FLEXCOM_FLEX_US_CSR_TXEMPTY_X(x)         (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_CSR_TIMEOUT(x)           (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_US_CSR_TIMEOUT_M            GENMASK(8, 8)
#define FLEXCOM_FLEX_US_CSR_TIMEOUT_X(x)         (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_US_CSR_PARE(x)              (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_CSR_PARE_M               GENMASK(7, 7)
#define FLEXCOM_FLEX_US_CSR_PARE_X(x)            (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_CSR_FRAME(x)             (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_CSR_FRAME_M              GENMASK(6, 6)
#define FLEXCOM_FLEX_US_CSR_FRAME_X(x)           (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_CSR_OVRE(x)              (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_CSR_OVRE_M               GENMASK(5, 5)
#define FLEXCOM_FLEX_US_CSR_OVRE_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_CSR_ENDTX(x)             (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_CSR_ENDTX_M              GENMASK(4, 4)
#define FLEXCOM_FLEX_US_CSR_ENDTX_X(x)           (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_CSR_ENDRX(x)             (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_CSR_ENDRX_M              GENMASK(3, 3)
#define FLEXCOM_FLEX_US_CSR_ENDRX_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_CSR_RXBRK(x)             (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_CSR_RXBRK_M              GENMASK(2, 2)
#define FLEXCOM_FLEX_US_CSR_RXBRK_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_CSR_TXRDY(x)             (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_CSR_TXRDY_M              GENMASK(1, 1)
#define FLEXCOM_FLEX_US_CSR_TXRDY_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_CSR_RXRDY(x)             ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_CSR_RXRDY_M              GENMASK(0, 0)
#define FLEXCOM_FLEX_US_CSR_RXRDY_X(x)           ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_RHR */
#define FLEXCOM_FLEX_US_RHR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 24, 0, 1, 4)

#define FLEXCOM_FLEX_US_RHR_RXSYNH(x)            (((x) << 15) & GENMASK(15, 15))
#define FLEXCOM_FLEX_US_RHR_RXSYNH_M             GENMASK(15, 15)
#define FLEXCOM_FLEX_US_RHR_RXSYNH_X(x)          (((x) & GENMASK(15, 15)) >> 15)

#define FLEXCOM_FLEX_US_RHR_RXCHR(x)             ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_US_RHR_RXCHR_M              GENMASK(7, 0)
#define FLEXCOM_FLEX_US_RHR_RXCHR_X(x)           ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_FMT_RHR */
#define FLEXCOM_FLEX_US_FMT_RHR(t) __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 24, 0, 1, 4)

#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR3(x)        (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR3_M         GENMASK(31, 24)
#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR3_X(x)      (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR2(x)        (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR2_M         GENMASK(23, 16)
#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR2_X(x)      (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR1(x)        (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR1_M         GENMASK(15, 8)
#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR1_X(x)      (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR0(x)        ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR0_M         GENMASK(7, 0)
#define FLEXCOM_FLEX_US_FMT_RHR_RXCHR0_X(x)      ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_THR */
#define FLEXCOM_FLEX_US_THR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 28, 0, 1, 4)

#define FLEXCOM_FLEX_US_THR_TXSYNH(x)            (((x) << 15) & GENMASK(15, 15))
#define FLEXCOM_FLEX_US_THR_TXSYNH_M             GENMASK(15, 15)
#define FLEXCOM_FLEX_US_THR_TXSYNH_X(x)          (((x) & GENMASK(15, 15)) >> 15)

#define FLEXCOM_FLEX_US_THR_TXCHR(x)             ((x) & GENMASK(8, 0))
#define FLEXCOM_FLEX_US_THR_TXCHR_M              GENMASK(8, 0)
#define FLEXCOM_FLEX_US_THR_TXCHR_X(x)           ((x) & GENMASK(8, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_FMT_THR */
#define FLEXCOM_FLEX_US_FMT_THR(t) __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 28, 0, 1, 4)

#define FLEXCOM_FLEX_US_FMT_THR_TXCHR3(x)        (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_US_FMT_THR_TXCHR3_M         GENMASK(31, 24)
#define FLEXCOM_FLEX_US_FMT_THR_TXCHR3_X(x)      (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_US_FMT_THR_TXCHR2(x)        (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_US_FMT_THR_TXCHR2_M         GENMASK(23, 16)
#define FLEXCOM_FLEX_US_FMT_THR_TXCHR2_X(x)      (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_US_FMT_THR_TXCHR1(x)        (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_US_FMT_THR_TXCHR1_M         GENMASK(15, 8)
#define FLEXCOM_FLEX_US_FMT_THR_TXCHR1_X(x)      (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_US_FMT_THR_TXCHR0(x)        ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_US_FMT_THR_TXCHR0_M         GENMASK(7, 0)
#define FLEXCOM_FLEX_US_FMT_THR_TXCHR0_X(x)      ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_BRGR */
#define FLEXCOM_FLEX_US_BRGR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 32, 0, 1, 4)

#define FLEXCOM_FLEX_US_BRGR_FP(x)               (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_US_BRGR_FP_M                GENMASK(18, 16)
#define FLEXCOM_FLEX_US_BRGR_FP_X(x)             (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_US_BRGR_CD(x)               ((x) & GENMASK(15, 0))
#define FLEXCOM_FLEX_US_BRGR_CD_M                GENMASK(15, 0)
#define FLEXCOM_FLEX_US_BRGR_CD_X(x)             ((x) & GENMASK(15, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_RTOR */
#define FLEXCOM_FLEX_US_RTOR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 36, 0, 1, 4)

#define FLEXCOM_FLEX_US_RTOR_TO(x)               ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_US_RTOR_TO_M                GENMASK(7, 0)
#define FLEXCOM_FLEX_US_RTOR_TO_X(x)             ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_TTGR */
#define FLEXCOM_FLEX_US_TTGR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 40, 0, 1, 4)

#define FLEXCOM_FLEX_US_TTGR_TG(x)               ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_US_TTGR_TG_M                GENMASK(7, 0)
#define FLEXCOM_FLEX_US_TTGR_TG_X(x)             ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_MAN */
#define FLEXCOM_FLEX_US_MAN(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 80, 0, 1, 4)

#define FLEXCOM_FLEX_US_MAN_RXIDLEV(x)           (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_US_MAN_RXIDLEV_M            GENMASK(31, 31)
#define FLEXCOM_FLEX_US_MAN_RXIDLEV_X(x)         (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_US_MAN_DRIFT(x)             (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_US_MAN_DRIFT_M              GENMASK(30, 30)
#define FLEXCOM_FLEX_US_MAN_DRIFT_X(x)           (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_US_MAN_ONE(x)               (((x) << 29) & GENMASK(29, 29))
#define FLEXCOM_FLEX_US_MAN_ONE_M                GENMASK(29, 29)
#define FLEXCOM_FLEX_US_MAN_ONE_X(x)             (((x) & GENMASK(29, 29)) >> 29)

#define FLEXCOM_FLEX_US_MAN_RX_MPOL(x)           (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_US_MAN_RX_MPOL_M            GENMASK(28, 28)
#define FLEXCOM_FLEX_US_MAN_RX_MPOL_X(x)         (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_US_MAN_RX_PP(x)             (((x) << 24) & GENMASK(25, 24))
#define FLEXCOM_FLEX_US_MAN_RX_PP_M              GENMASK(25, 24)
#define FLEXCOM_FLEX_US_MAN_RX_PP_X(x)           (((x) & GENMASK(25, 24)) >> 24)

#define FLEXCOM_FLEX_US_MAN_RX_PL(x)             (((x) << 16) & GENMASK(19, 16))
#define FLEXCOM_FLEX_US_MAN_RX_PL_M              GENMASK(19, 16)
#define FLEXCOM_FLEX_US_MAN_RX_PL_X(x)           (((x) & GENMASK(19, 16)) >> 16)

#define FLEXCOM_FLEX_US_MAN_TX_MPOL(x)           (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_US_MAN_TX_MPOL_M            GENMASK(12, 12)
#define FLEXCOM_FLEX_US_MAN_TX_MPOL_X(x)         (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_US_MAN_TX_PP(x)             (((x) << 8) & GENMASK(9, 8))
#define FLEXCOM_FLEX_US_MAN_TX_PP_M              GENMASK(9, 8)
#define FLEXCOM_FLEX_US_MAN_TX_PP_X(x)           (((x) & GENMASK(9, 8)) >> 8)

#define FLEXCOM_FLEX_US_MAN_TX_PL(x)             ((x) & GENMASK(3, 0))
#define FLEXCOM_FLEX_US_MAN_TX_PL_M              GENMASK(3, 0)
#define FLEXCOM_FLEX_US_MAN_TX_PL_X(x)           ((x) & GENMASK(3, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_CMPR */
#define FLEXCOM_FLEX_US_CMPR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 144, 0, 1, 4)

#define FLEXCOM_FLEX_US_CMPR_VAL2(x)             (((x) << 16) & GENMASK(24, 16))
#define FLEXCOM_FLEX_US_CMPR_VAL2_M              GENMASK(24, 16)
#define FLEXCOM_FLEX_US_CMPR_VAL2_X(x)           (((x) & GENMASK(24, 16)) >> 16)

#define FLEXCOM_FLEX_US_CMPR_CMPPAR(x)           (((x) << 14) & GENMASK(14, 14))
#define FLEXCOM_FLEX_US_CMPR_CMPPAR_M            GENMASK(14, 14)
#define FLEXCOM_FLEX_US_CMPR_CMPPAR_X(x)         (((x) & GENMASK(14, 14)) >> 14)

#define FLEXCOM_FLEX_US_CMPR_CMPMODE(x)          (((x) << 12) & GENMASK(13, 12))
#define FLEXCOM_FLEX_US_CMPR_CMPMODE_M           GENMASK(13, 12)
#define FLEXCOM_FLEX_US_CMPR_CMPMODE_X(x)        (((x) & GENMASK(13, 12)) >> 12)

#define FLEXCOM_FLEX_US_CMPR_VAL1(x)             ((x) & GENMASK(8, 0))
#define FLEXCOM_FLEX_US_CMPR_VAL1_M              GENMASK(8, 0)
#define FLEXCOM_FLEX_US_CMPR_VAL1_X(x)           ((x) & GENMASK(8, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_FMR */
#define FLEXCOM_FLEX_US_FMR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 160, 0, 1, 4)

#define FLEXCOM_FLEX_US_FMR_RXFTHRES2(x)         (((x) << 24) & GENMASK(29, 24))
#define FLEXCOM_FLEX_US_FMR_RXFTHRES2_M          GENMASK(29, 24)
#define FLEXCOM_FLEX_US_FMR_RXFTHRES2_X(x)       (((x) & GENMASK(29, 24)) >> 24)

#define FLEXCOM_FLEX_US_FMR_RXFTHRES(x)          (((x) << 16) & GENMASK(21, 16))
#define FLEXCOM_FLEX_US_FMR_RXFTHRES_M           GENMASK(21, 16)
#define FLEXCOM_FLEX_US_FMR_RXFTHRES_X(x)        (((x) & GENMASK(21, 16)) >> 16)

#define FLEXCOM_FLEX_US_FMR_TXFTHRES(x)          (((x) << 8) & GENMASK(13, 8))
#define FLEXCOM_FLEX_US_FMR_TXFTHRES_M           GENMASK(13, 8)
#define FLEXCOM_FLEX_US_FMR_TXFTHRES_X(x)        (((x) & GENMASK(13, 8)) >> 8)

#define FLEXCOM_FLEX_US_FMR_FRTSC(x)             (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_FMR_FRTSC_M              GENMASK(7, 7)
#define FLEXCOM_FLEX_US_FMR_FRTSC_X(x)           (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_FMR_RXRDYM(x)            (((x) << 4) & GENMASK(5, 4))
#define FLEXCOM_FLEX_US_FMR_RXRDYM_M             GENMASK(5, 4)
#define FLEXCOM_FLEX_US_FMR_RXRDYM_X(x)          (((x) & GENMASK(5, 4)) >> 4)

#define FLEXCOM_FLEX_US_FMR_TXRDYM(x)            ((x) & GENMASK(1, 0))
#define FLEXCOM_FLEX_US_FMR_TXRDYM_M             GENMASK(1, 0)
#define FLEXCOM_FLEX_US_FMR_TXRDYM_X(x)          ((x) & GENMASK(1, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_FLR */
#define FLEXCOM_FLEX_US_FLR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 164, 0, 1, 4)

#define FLEXCOM_FLEX_US_FLR_RXFL(x)              (((x) << 16) & GENMASK(21, 16))
#define FLEXCOM_FLEX_US_FLR_RXFL_M               GENMASK(21, 16)
#define FLEXCOM_FLEX_US_FLR_RXFL_X(x)            (((x) & GENMASK(21, 16)) >> 16)

#define FLEXCOM_FLEX_US_FLR_TXFL(x)              ((x) & GENMASK(5, 0))
#define FLEXCOM_FLEX_US_FLR_TXFL_M               GENMASK(5, 0)
#define FLEXCOM_FLEX_US_FLR_TXFL_X(x)            ((x) & GENMASK(5, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_FIER */
#define FLEXCOM_FLEX_US_FIER(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 168, 0, 1, 4)

#define FLEXCOM_FLEX_US_FIER_RXFTHF2_IE(x)       (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_FIER_RXFTHF2_IE_M        GENMASK(9, 9)
#define FLEXCOM_FLEX_US_FIER_RXFTHF2_IE_X(x)     (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_FIER_RXFPTEF_IE(x)       (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_FIER_RXFPTEF_IE_M        GENMASK(7, 7)
#define FLEXCOM_FLEX_US_FIER_RXFPTEF_IE_X(x)     (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_FIER_TXFPTEF_IE(x)       (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_FIER_TXFPTEF_IE_M        GENMASK(6, 6)
#define FLEXCOM_FLEX_US_FIER_TXFPTEF_IE_X(x)     (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_FIER_RXFTHF_IE(x)        (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_FIER_RXFTHF_IE_M         GENMASK(5, 5)
#define FLEXCOM_FLEX_US_FIER_RXFTHF_IE_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_FIER_RXFFF_IE(x)         (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_FIER_RXFFF_IE_M          GENMASK(4, 4)
#define FLEXCOM_FLEX_US_FIER_RXFFF_IE_X(x)       (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_FIER_RXFEF_IE(x)         (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_FIER_RXFEF_IE_M          GENMASK(3, 3)
#define FLEXCOM_FLEX_US_FIER_RXFEF_IE_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_FIER_TXFTHF_IE(x)        (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_FIER_TXFTHF_IE_M         GENMASK(2, 2)
#define FLEXCOM_FLEX_US_FIER_TXFTHF_IE_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_FIER_TXFFF_IE(x)         (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_FIER_TXFFF_IE_M          GENMASK(1, 1)
#define FLEXCOM_FLEX_US_FIER_TXFFF_IE_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_FIER_TXFEF_IE(x)         ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_FIER_TXFEF_IE_M          GENMASK(0, 0)
#define FLEXCOM_FLEX_US_FIER_TXFEF_IE_X(x)       ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_FIDR */
#define FLEXCOM_FLEX_US_FIDR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 172, 0, 1, 4)

#define FLEXCOM_FLEX_US_FIDR_RXFTHF2_ID(x)       (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_FIDR_RXFTHF2_ID_M        GENMASK(9, 9)
#define FLEXCOM_FLEX_US_FIDR_RXFTHF2_ID_X(x)     (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_FIDR_RXFPTEF_ID(x)       (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_FIDR_RXFPTEF_ID_M        GENMASK(7, 7)
#define FLEXCOM_FLEX_US_FIDR_RXFPTEF_ID_X(x)     (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_FIDR_TXFPTEF_ID(x)       (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_FIDR_TXFPTEF_ID_M        GENMASK(6, 6)
#define FLEXCOM_FLEX_US_FIDR_TXFPTEF_ID_X(x)     (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_FIDR_RXFTHF_ID(x)        (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_FIDR_RXFTHF_ID_M         GENMASK(5, 5)
#define FLEXCOM_FLEX_US_FIDR_RXFTHF_ID_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_FIDR_RXFFF_ID(x)         (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_FIDR_RXFFF_ID_M          GENMASK(4, 4)
#define FLEXCOM_FLEX_US_FIDR_RXFFF_ID_X(x)       (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_FIDR_RXFEF_ID(x)         (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_FIDR_RXFEF_ID_M          GENMASK(3, 3)
#define FLEXCOM_FLEX_US_FIDR_RXFEF_ID_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_FIDR_TXFTHF_ID(x)        (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_FIDR_TXFTHF_ID_M         GENMASK(2, 2)
#define FLEXCOM_FLEX_US_FIDR_TXFTHF_ID_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_FIDR_TXFFF_ID(x)         (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_FIDR_TXFFF_ID_M          GENMASK(1, 1)
#define FLEXCOM_FLEX_US_FIDR_TXFFF_ID_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_FIDR_TXFEF_ID(x)         ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_FIDR_TXFEF_ID_M          GENMASK(0, 0)
#define FLEXCOM_FLEX_US_FIDR_TXFEF_ID_X(x)       ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_FIMR */
#define FLEXCOM_FLEX_US_FIMR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 176, 0, 1, 4)

#define FLEXCOM_FLEX_US_FIMR_RXFTHF2_IM(x)       (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_FIMR_RXFTHF2_IM_M        GENMASK(9, 9)
#define FLEXCOM_FLEX_US_FIMR_RXFTHF2_IM_X(x)     (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_FIMR_RXFPTEF_IM(x)       (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_FIMR_RXFPTEF_IM_M        GENMASK(7, 7)
#define FLEXCOM_FLEX_US_FIMR_RXFPTEF_IM_X(x)     (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_FIMR_TXFPTEF_IM(x)       (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_FIMR_TXFPTEF_IM_M        GENMASK(6, 6)
#define FLEXCOM_FLEX_US_FIMR_TXFPTEF_IM_X(x)     (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_FIMR_RXFTHF_IM(x)        (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_FIMR_RXFTHF_IM_M         GENMASK(5, 5)
#define FLEXCOM_FLEX_US_FIMR_RXFTHF_IM_X(x)      (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_FIMR_RXFFF_IM(x)         (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_FIMR_RXFFF_IM_M          GENMASK(4, 4)
#define FLEXCOM_FLEX_US_FIMR_RXFFF_IM_X(x)       (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_FIMR_RXFEF_IM(x)         (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_FIMR_RXFEF_IM_M          GENMASK(3, 3)
#define FLEXCOM_FLEX_US_FIMR_RXFEF_IM_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_FIMR_TXFTHF_IM(x)        (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_FIMR_TXFTHF_IM_M         GENMASK(2, 2)
#define FLEXCOM_FLEX_US_FIMR_TXFTHF_IM_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_FIMR_TXFFF_IM(x)         (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_FIMR_TXFFF_IM_M          GENMASK(1, 1)
#define FLEXCOM_FLEX_US_FIMR_TXFFF_IM_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_FIMR_TXFEF_IM(x)         ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_FIMR_TXFEF_IM_M          GENMASK(0, 0)
#define FLEXCOM_FLEX_US_FIMR_TXFEF_IM_X(x)       ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_FESR */
#define FLEXCOM_FLEX_US_FESR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 180, 0, 1, 4)

#define FLEXCOM_FLEX_US_FESR_RXFTHF2(x)          (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_US_FESR_RXFTHF2_M           GENMASK(9, 9)
#define FLEXCOM_FLEX_US_FESR_RXFTHF2_X(x)        (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_US_FESR_TXFLOCK(x)          (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_US_FESR_TXFLOCK_M           GENMASK(8, 8)
#define FLEXCOM_FLEX_US_FESR_TXFLOCK_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_US_FESR_RXFPTEF(x)          (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_US_FESR_RXFPTEF_M           GENMASK(7, 7)
#define FLEXCOM_FLEX_US_FESR_RXFPTEF_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_US_FESR_TXFPTEF(x)          (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_US_FESR_TXFPTEF_M           GENMASK(6, 6)
#define FLEXCOM_FLEX_US_FESR_TXFPTEF_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_US_FESR_RXFTHF(x)           (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_US_FESR_RXFTHF_M            GENMASK(5, 5)
#define FLEXCOM_FLEX_US_FESR_RXFTHF_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_US_FESR_RXFFF(x)            (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_US_FESR_RXFFF_M             GENMASK(4, 4)
#define FLEXCOM_FLEX_US_FESR_RXFFF_X(x)          (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_US_FESR_RXFEF(x)            (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_US_FESR_RXFEF_M             GENMASK(3, 3)
#define FLEXCOM_FLEX_US_FESR_RXFEF_X(x)          (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_US_FESR_TXFTHF(x)           (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_FESR_TXFTHF_M            GENMASK(2, 2)
#define FLEXCOM_FLEX_US_FESR_TXFTHF_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_FESR_TXFFF(x)            (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_FESR_TXFFF_M             GENMASK(1, 1)
#define FLEXCOM_FLEX_US_FESR_TXFFF_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_FESR_TXFEF(x)            ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_FESR_TXFEF_M             GENMASK(0, 0)
#define FLEXCOM_FLEX_US_FESR_TXFEF_X(x)          ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_WPMR */
#define FLEXCOM_FLEX_US_WPMR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 228, 0, 1, 4)

#define FLEXCOM_FLEX_US_WPMR_WPKEY(x)            (((x) << 8) & GENMASK(31, 8))
#define FLEXCOM_FLEX_US_WPMR_WPKEY_M             GENMASK(31, 8)
#define FLEXCOM_FLEX_US_WPMR_WPKEY_X(x)          (((x) & GENMASK(31, 8)) >> 8)

#define FLEXCOM_FLEX_US_WPMR_WPCREN(x)           (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_US_WPMR_WPCREN_M            GENMASK(2, 2)
#define FLEXCOM_FLEX_US_WPMR_WPCREN_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_US_WPMR_WPITEN(x)           (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_US_WPMR_WPITEN_M            GENMASK(1, 1)
#define FLEXCOM_FLEX_US_WPMR_WPITEN_X(x)         (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_US_WPMR_WPEN(x)             ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_WPMR_WPEN_M              GENMASK(0, 0)
#define FLEXCOM_FLEX_US_WPMR_WPEN_X(x)           ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_WPSR */
#define FLEXCOM_FLEX_US_WPSR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 232, 0, 1, 4)

#define FLEXCOM_FLEX_US_WPSR_WPVSRC(x)           (((x) << 8) & GENMASK(23, 8))
#define FLEXCOM_FLEX_US_WPSR_WPVSRC_M            GENMASK(23, 8)
#define FLEXCOM_FLEX_US_WPSR_WPVSRC_X(x)         (((x) & GENMASK(23, 8)) >> 8)

#define FLEXCOM_FLEX_US_WPSR_WPVS(x)             ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_US_WPSR_WPVS_M              GENMASK(0, 0)
#define FLEXCOM_FLEX_US_WPSR_WPVS_X(x)           ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_USART_REG:FLEX_US_VERSION */
#define FLEXCOM_FLEX_US_VERSION(t) __REG(TARGET_FLEXCOM,\
					t, 5, 512, 0, 1, 264, 252, 0, 1, 4)

#define FLEXCOM_FLEX_US_VERSION_USART_MFN(x)     (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_US_VERSION_USART_MFN_M      GENMASK(18, 16)
#define FLEXCOM_FLEX_US_VERSION_USART_MFN_X(x)   (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_US_VERSION_USART_VERSION(x) ((x) & GENMASK(11, 0))
#define FLEXCOM_FLEX_US_VERSION_USART_VERSION_M  GENMASK(11, 0)
#define FLEXCOM_FLEX_US_VERSION_USART_VERSION_X(x) ((x) & GENMASK(11, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_CR */
#define FLEXCOM_FLEX_SPI_CR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 0, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_CR_FIFODIS(x)           (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_SPI_CR_FIFODIS_M            GENMASK(31, 31)
#define FLEXCOM_FLEX_SPI_CR_FIFODIS_X(x)         (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_SPI_CR_FIFOEN(x)            (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_SPI_CR_FIFOEN_M             GENMASK(30, 30)
#define FLEXCOM_FLEX_SPI_CR_FIFOEN_X(x)          (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_SPI_CR_LASTXFER(x)          (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_SPI_CR_LASTXFER_M           GENMASK(24, 24)
#define FLEXCOM_FLEX_SPI_CR_LASTXFER_X(x)        (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_CR_RXFCLR(x)            (((x) << 17) & GENMASK(17, 17))
#define FLEXCOM_FLEX_SPI_CR_RXFCLR_M             GENMASK(17, 17)
#define FLEXCOM_FLEX_SPI_CR_RXFCLR_X(x)          (((x) & GENMASK(17, 17)) >> 17)

#define FLEXCOM_FLEX_SPI_CR_TXFCLR(x)            (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_SPI_CR_TXFCLR_M             GENMASK(16, 16)
#define FLEXCOM_FLEX_SPI_CR_TXFCLR_X(x)          (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_CR_REQCLR(x)            (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_SPI_CR_REQCLR_M             GENMASK(12, 12)
#define FLEXCOM_FLEX_SPI_CR_REQCLR_X(x)          (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_SPI_CR_SWRST(x)             (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_SPI_CR_SWRST_M              GENMASK(7, 7)
#define FLEXCOM_FLEX_SPI_CR_SWRST_X(x)           (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_SPI_CR_SPIDIS(x)            (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_CR_SPIDIS_M             GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_CR_SPIDIS_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_CR_SPIEN(x)             ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_CR_SPIEN_M              GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_CR_SPIEN_X(x)           ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_MR */
#define FLEXCOM_FLEX_SPI_MR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 4, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_MR_DLYBCS(x)            (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_SPI_MR_DLYBCS_M             GENMASK(31, 24)
#define FLEXCOM_FLEX_SPI_MR_DLYBCS_X(x)          (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_MR_PCS_MR(x)            (((x) << 16) & GENMASK(19, 16))
#define FLEXCOM_FLEX_SPI_MR_PCS_MR_M             GENMASK(19, 16)
#define FLEXCOM_FLEX_SPI_MR_PCS_MR_X(x)          (((x) & GENMASK(19, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_MR_CMPMODE(x)           (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_SPI_MR_CMPMODE_M            GENMASK(12, 12)
#define FLEXCOM_FLEX_SPI_MR_CMPMODE_X(x)         (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_SPI_MR_LBHPC(x)             (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_SPI_MR_LBHPC_M              GENMASK(8, 8)
#define FLEXCOM_FLEX_SPI_MR_LBHPC_X(x)           (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_MR_LLB(x)               (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_SPI_MR_LLB_M                GENMASK(7, 7)
#define FLEXCOM_FLEX_SPI_MR_LLB_X(x)             (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_SPI_MR_WDRBT(x)             (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_SPI_MR_WDRBT_M              GENMASK(5, 5)
#define FLEXCOM_FLEX_SPI_MR_WDRBT_X(x)           (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_SPI_MR_MODFDIS(x)           (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_SPI_MR_MODFDIS_M            GENMASK(4, 4)
#define FLEXCOM_FLEX_SPI_MR_MODFDIS_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_SPI_MR_BRSRCCLK(x)          (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_SPI_MR_BRSRCCLK_M           GENMASK(3, 3)
#define FLEXCOM_FLEX_SPI_MR_BRSRCCLK_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_SPI_MR_PCSDEC(x)            (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_SPI_MR_PCSDEC_M             GENMASK(2, 2)
#define FLEXCOM_FLEX_SPI_MR_PCSDEC_X(x)          (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_SPI_MR_PS(x)                (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_MR_PS_M                 GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_MR_PS_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_MR_MSTR(x)              ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_MR_MSTR_M               GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_MR_MSTR_X(x)            ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_RDR */
#define FLEXCOM_FLEX_SPI_RDR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 8, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_RDR_PCS_RDR(x)          (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_SPI_RDR_PCS_RDR_M           GENMASK(18, 16)
#define FLEXCOM_FLEX_SPI_RDR_PCS_RDR_X(x)        (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_RDR_RD(x)               ((x) & GENMASK(15, 0))
#define FLEXCOM_FLEX_SPI_RDR_RD_M                GENMASK(15, 0)
#define FLEXCOM_FLEX_SPI_RDR_RD_X(x)             ((x) & GENMASK(15, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_FMT_RDR_8 */
#define FLEXCOM_FLEX_SPI_FMT_RDR_8(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 8, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD3(x)        (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD3_M         GENMASK(31, 24)
#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD3_X(x)      (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD2(x)        (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD2_M         GENMASK(23, 16)
#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD2_X(x)      (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD1(x)        (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD1_M         GENMASK(15, 8)
#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD1_X(x)      (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD0(x)        ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD0_M         GENMASK(7, 0)
#define FLEXCOM_FLEX_SPI_FMT_RDR_8_RD0_X(x)      ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_FMT_RDR_16 */
#define FLEXCOM_FLEX_SPI_FMT_RDR_16(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 8, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_FMT_RDR_16_RD1_16(x)    (((x) << 16) & GENMASK(31, 16))
#define FLEXCOM_FLEX_SPI_FMT_RDR_16_RD1_16_M     GENMASK(31, 16)
#define FLEXCOM_FLEX_SPI_FMT_RDR_16_RD1_16_X(x)  (((x) & GENMASK(31, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_FMT_RDR_16_RD0_16(x)    ((x) & GENMASK(15, 0))
#define FLEXCOM_FLEX_SPI_FMT_RDR_16_RD0_16_M     GENMASK(15, 0)
#define FLEXCOM_FLEX_SPI_FMT_RDR_16_RD0_16_X(x)  ((x) & GENMASK(15, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_TDR */
#define FLEXCOM_FLEX_SPI_TDR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 12, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_TDR_LASTXFER_TDR(x)     (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_SPI_TDR_LASTXFER_TDR_M      GENMASK(24, 24)
#define FLEXCOM_FLEX_SPI_TDR_LASTXFER_TDR_X(x)   (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_TDR_PCS_TDR(x)          (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_SPI_TDR_PCS_TDR_M           GENMASK(18, 16)
#define FLEXCOM_FLEX_SPI_TDR_PCS_TDR_X(x)        (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_TDR_TD(x)               ((x) & GENMASK(15, 0))
#define FLEXCOM_FLEX_SPI_TDR_TD_M                GENMASK(15, 0)
#define FLEXCOM_FLEX_SPI_TDR_TD_X(x)             ((x) & GENMASK(15, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_FMT_TDR */
#define FLEXCOM_FLEX_SPI_FMT_TDR(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 12, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_FMT_TDR_TD1(x)          (((x) << 16) & GENMASK(31, 16))
#define FLEXCOM_FLEX_SPI_FMT_TDR_TD1_M           GENMASK(31, 16)
#define FLEXCOM_FLEX_SPI_FMT_TDR_TD1_X(x)        (((x) & GENMASK(31, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_FMT_TDR_TD0(x)          ((x) & GENMASK(15, 0))
#define FLEXCOM_FLEX_SPI_FMT_TDR_TD0_M           GENMASK(15, 0)
#define FLEXCOM_FLEX_SPI_FMT_TDR_TD0_X(x)        ((x) & GENMASK(15, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_SR */
#define FLEXCOM_FLEX_SPI_SR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 16, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_SR_RXFPTEF(x)           (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_SPI_SR_RXFPTEF_M            GENMASK(31, 31)
#define FLEXCOM_FLEX_SPI_SR_RXFPTEF_X(x)         (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_SPI_SR_TXFPTEF(x)           (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_SPI_SR_TXFPTEF_M            GENMASK(30, 30)
#define FLEXCOM_FLEX_SPI_SR_TXFPTEF_X(x)         (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_SPI_SR_RXFTHF(x)            (((x) << 29) & GENMASK(29, 29))
#define FLEXCOM_FLEX_SPI_SR_RXFTHF_M             GENMASK(29, 29)
#define FLEXCOM_FLEX_SPI_SR_RXFTHF_X(x)          (((x) & GENMASK(29, 29)) >> 29)

#define FLEXCOM_FLEX_SPI_SR_RXFFF(x)             (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_SPI_SR_RXFFF_M              GENMASK(28, 28)
#define FLEXCOM_FLEX_SPI_SR_RXFFF_X(x)           (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_SPI_SR_RXFEF(x)             (((x) << 27) & GENMASK(27, 27))
#define FLEXCOM_FLEX_SPI_SR_RXFEF_M              GENMASK(27, 27)
#define FLEXCOM_FLEX_SPI_SR_RXFEF_X(x)           (((x) & GENMASK(27, 27)) >> 27)

#define FLEXCOM_FLEX_SPI_SR_TXFTHF(x)            (((x) << 26) & GENMASK(26, 26))
#define FLEXCOM_FLEX_SPI_SR_TXFTHF_M             GENMASK(26, 26)
#define FLEXCOM_FLEX_SPI_SR_TXFTHF_X(x)          (((x) & GENMASK(26, 26)) >> 26)

#define FLEXCOM_FLEX_SPI_SR_TXFFF(x)             (((x) << 25) & GENMASK(25, 25))
#define FLEXCOM_FLEX_SPI_SR_TXFFF_M              GENMASK(25, 25)
#define FLEXCOM_FLEX_SPI_SR_TXFFF_X(x)           (((x) & GENMASK(25, 25)) >> 25)

#define FLEXCOM_FLEX_SPI_SR_TXFEF(x)             (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_SPI_SR_TXFEF_M              GENMASK(24, 24)
#define FLEXCOM_FLEX_SPI_SR_TXFEF_X(x)           (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_SR_SFERR(x)             (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_SPI_SR_SFERR_M              GENMASK(12, 12)
#define FLEXCOM_FLEX_SPI_SR_SFERR_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_SPI_SR_CMP(x)               (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_SPI_SR_CMP_M                GENMASK(11, 11)
#define FLEXCOM_FLEX_SPI_SR_CMP_X(x)             (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_SPI_SR_SPIENS(x)            (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_SPI_SR_SPIENS_M             GENMASK(16, 16)
#define FLEXCOM_FLEX_SPI_SR_SPIENS_X(x)          (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_SR_UNDES(x)             (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_SPI_SR_UNDES_M              GENMASK(10, 10)
#define FLEXCOM_FLEX_SPI_SR_UNDES_X(x)           (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_SPI_SR_TXEMPTY(x)           (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_SPI_SR_TXEMPTY_M            GENMASK(9, 9)
#define FLEXCOM_FLEX_SPI_SR_TXEMPTY_X(x)         (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_SPI_SR_NSSR(x)              (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_SPI_SR_NSSR_M               GENMASK(8, 8)
#define FLEXCOM_FLEX_SPI_SR_NSSR_X(x)            (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_SR_OVRES(x)             (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_SPI_SR_OVRES_M              GENMASK(3, 3)
#define FLEXCOM_FLEX_SPI_SR_OVRES_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_SPI_SR_MODF(x)              (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_SPI_SR_MODF_M               GENMASK(2, 2)
#define FLEXCOM_FLEX_SPI_SR_MODF_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_SPI_SR_TDRE(x)              (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_SR_TDRE_M               GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_SR_TDRE_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_SR_RDRF(x)              ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_SR_RDRF_M               GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_SR_RDRF_X(x)            ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_IER */
#define FLEXCOM_FLEX_SPI_IER(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 20, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_IER_RXFPTEF_IE(x)       (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_SPI_IER_RXFPTEF_IE_M        GENMASK(31, 31)
#define FLEXCOM_FLEX_SPI_IER_RXFPTEF_IE_X(x)     (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_SPI_IER_TXFPTEF_IE(x)       (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_SPI_IER_TXFPTEF_IE_M        GENMASK(30, 30)
#define FLEXCOM_FLEX_SPI_IER_TXFPTEF_IE_X(x)     (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_SPI_IER_RXFTHF_IE(x)        (((x) << 29) & GENMASK(29, 29))
#define FLEXCOM_FLEX_SPI_IER_RXFTHF_IE_M         GENMASK(29, 29)
#define FLEXCOM_FLEX_SPI_IER_RXFTHF_IE_X(x)      (((x) & GENMASK(29, 29)) >> 29)

#define FLEXCOM_FLEX_SPI_IER_RXFFF_IE(x)         (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_SPI_IER_RXFFF_IE_M          GENMASK(28, 28)
#define FLEXCOM_FLEX_SPI_IER_RXFFF_IE_X(x)       (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_SPI_IER_RXFEF_IE(x)         (((x) << 27) & GENMASK(27, 27))
#define FLEXCOM_FLEX_SPI_IER_RXFEF_IE_M          GENMASK(27, 27)
#define FLEXCOM_FLEX_SPI_IER_RXFEF_IE_X(x)       (((x) & GENMASK(27, 27)) >> 27)

#define FLEXCOM_FLEX_SPI_IER_TXFTHF_IE(x)        (((x) << 26) & GENMASK(26, 26))
#define FLEXCOM_FLEX_SPI_IER_TXFTHF_IE_M         GENMASK(26, 26)
#define FLEXCOM_FLEX_SPI_IER_TXFTHF_IE_X(x)      (((x) & GENMASK(26, 26)) >> 26)

#define FLEXCOM_FLEX_SPI_IER_TXFFF_IE(x)         (((x) << 25) & GENMASK(25, 25))
#define FLEXCOM_FLEX_SPI_IER_TXFFF_IE_M          GENMASK(25, 25)
#define FLEXCOM_FLEX_SPI_IER_TXFFF_IE_X(x)       (((x) & GENMASK(25, 25)) >> 25)

#define FLEXCOM_FLEX_SPI_IER_TXFEF_IE(x)         (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_SPI_IER_TXFEF_IE_M          GENMASK(24, 24)
#define FLEXCOM_FLEX_SPI_IER_TXFEF_IE_X(x)       (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_IER_CMP_IE(x)           (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_SPI_IER_CMP_IE_M            GENMASK(11, 11)
#define FLEXCOM_FLEX_SPI_IER_CMP_IE_X(x)         (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_SPI_IER_UNDES_IE(x)         (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_SPI_IER_UNDES_IE_M          GENMASK(10, 10)
#define FLEXCOM_FLEX_SPI_IER_UNDES_IE_X(x)       (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_SPI_IER_TXEMPTY_IE(x)       (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_SPI_IER_TXEMPTY_IE_M        GENMASK(9, 9)
#define FLEXCOM_FLEX_SPI_IER_TXEMPTY_IE_X(x)     (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_SPI_IER_NSSR_IE(x)          (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_SPI_IER_NSSR_IE_M           GENMASK(8, 8)
#define FLEXCOM_FLEX_SPI_IER_NSSR_IE_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_IER_OVRES_IE(x)         (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_SPI_IER_OVRES_IE_M          GENMASK(3, 3)
#define FLEXCOM_FLEX_SPI_IER_OVRES_IE_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_SPI_IER_MODF_IE(x)          (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_SPI_IER_MODF_IE_M           GENMASK(2, 2)
#define FLEXCOM_FLEX_SPI_IER_MODF_IE_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_SPI_IER_TDRE_IE(x)          (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_IER_TDRE_IE_M           GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_IER_TDRE_IE_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_IER_RDRF_IE(x)          ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_IER_RDRF_IE_M           GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_IER_RDRF_IE_X(x)        ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_IDR */
#define FLEXCOM_FLEX_SPI_IDR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 24, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_IDR_RXFPTEF_ID(x)       (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_SPI_IDR_RXFPTEF_ID_M        GENMASK(31, 31)
#define FLEXCOM_FLEX_SPI_IDR_RXFPTEF_ID_X(x)     (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_SPI_IDR_TXFPTEF_ID(x)       (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_SPI_IDR_TXFPTEF_ID_M        GENMASK(30, 30)
#define FLEXCOM_FLEX_SPI_IDR_TXFPTEF_ID_X(x)     (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_SPI_IDR_RXFTHF_ID(x)        (((x) << 29) & GENMASK(29, 29))
#define FLEXCOM_FLEX_SPI_IDR_RXFTHF_ID_M         GENMASK(29, 29)
#define FLEXCOM_FLEX_SPI_IDR_RXFTHF_ID_X(x)      (((x) & GENMASK(29, 29)) >> 29)

#define FLEXCOM_FLEX_SPI_IDR_RXFFF_ID(x)         (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_SPI_IDR_RXFFF_ID_M          GENMASK(28, 28)
#define FLEXCOM_FLEX_SPI_IDR_RXFFF_ID_X(x)       (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_SPI_IDR_RXFEF_ID(x)         (((x) << 27) & GENMASK(27, 27))
#define FLEXCOM_FLEX_SPI_IDR_RXFEF_ID_M          GENMASK(27, 27)
#define FLEXCOM_FLEX_SPI_IDR_RXFEF_ID_X(x)       (((x) & GENMASK(27, 27)) >> 27)

#define FLEXCOM_FLEX_SPI_IDR_TXFTHF_ID(x)        (((x) << 26) & GENMASK(26, 26))
#define FLEXCOM_FLEX_SPI_IDR_TXFTHF_ID_M         GENMASK(26, 26)
#define FLEXCOM_FLEX_SPI_IDR_TXFTHF_ID_X(x)      (((x) & GENMASK(26, 26)) >> 26)

#define FLEXCOM_FLEX_SPI_IDR_TXFFF_ID(x)         (((x) << 25) & GENMASK(25, 25))
#define FLEXCOM_FLEX_SPI_IDR_TXFFF_ID_M          GENMASK(25, 25)
#define FLEXCOM_FLEX_SPI_IDR_TXFFF_ID_X(x)       (((x) & GENMASK(25, 25)) >> 25)

#define FLEXCOM_FLEX_SPI_IDR_TXFEF_ID(x)         (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_SPI_IDR_TXFEF_ID_M          GENMASK(24, 24)
#define FLEXCOM_FLEX_SPI_IDR_TXFEF_ID_X(x)       (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_IDR_CMP_ID(x)           (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_SPI_IDR_CMP_ID_M            GENMASK(11, 11)
#define FLEXCOM_FLEX_SPI_IDR_CMP_ID_X(x)         (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_SPI_IDR_UNDES_ID(x)         (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_SPI_IDR_UNDES_ID_M          GENMASK(10, 10)
#define FLEXCOM_FLEX_SPI_IDR_UNDES_ID_X(x)       (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_SPI_IDR_TXEMPTY_ID(x)       (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_SPI_IDR_TXEMPTY_ID_M        GENMASK(9, 9)
#define FLEXCOM_FLEX_SPI_IDR_TXEMPTY_ID_X(x)     (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_SPI_IDR_NSSR_ID(x)          (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_SPI_IDR_NSSR_ID_M           GENMASK(8, 8)
#define FLEXCOM_FLEX_SPI_IDR_NSSR_ID_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_IDR_OVRES_ID(x)         (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_SPI_IDR_OVRES_ID_M          GENMASK(3, 3)
#define FLEXCOM_FLEX_SPI_IDR_OVRES_ID_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_SPI_IDR_MODF_ID(x)          (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_SPI_IDR_MODF_ID_M           GENMASK(2, 2)
#define FLEXCOM_FLEX_SPI_IDR_MODF_ID_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_SPI_IDR_TDRE_ID(x)          (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_IDR_TDRE_ID_M           GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_IDR_TDRE_ID_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_IDR_RDRF_ID(x)          ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_IDR_RDRF_ID_M           GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_IDR_RDRF_ID_X(x)        ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_IMR */
#define FLEXCOM_FLEX_SPI_IMR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 28, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_IMR_RXFPTEF_IM(x)       (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_SPI_IMR_RXFPTEF_IM_M        GENMASK(31, 31)
#define FLEXCOM_FLEX_SPI_IMR_RXFPTEF_IM_X(x)     (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_SPI_IMR_TXFPTEF_IM(x)       (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_SPI_IMR_TXFPTEF_IM_M        GENMASK(30, 30)
#define FLEXCOM_FLEX_SPI_IMR_TXFPTEF_IM_X(x)     (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_SPI_IMR_RXFTHF_IM(x)        (((x) << 29) & GENMASK(29, 29))
#define FLEXCOM_FLEX_SPI_IMR_RXFTHF_IM_M         GENMASK(29, 29)
#define FLEXCOM_FLEX_SPI_IMR_RXFTHF_IM_X(x)      (((x) & GENMASK(29, 29)) >> 29)

#define FLEXCOM_FLEX_SPI_IMR_RXFFF_IM(x)         (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_SPI_IMR_RXFFF_IM_M          GENMASK(28, 28)
#define FLEXCOM_FLEX_SPI_IMR_RXFFF_IM_X(x)       (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_SPI_IMR_RXFEF_IM(x)         (((x) << 27) & GENMASK(27, 27))
#define FLEXCOM_FLEX_SPI_IMR_RXFEF_IM_M          GENMASK(27, 27)
#define FLEXCOM_FLEX_SPI_IMR_RXFEF_IM_X(x)       (((x) & GENMASK(27, 27)) >> 27)

#define FLEXCOM_FLEX_SPI_IMR_TXFTHF_IM(x)        (((x) << 26) & GENMASK(26, 26))
#define FLEXCOM_FLEX_SPI_IMR_TXFTHF_IM_M         GENMASK(26, 26)
#define FLEXCOM_FLEX_SPI_IMR_TXFTHF_IM_X(x)      (((x) & GENMASK(26, 26)) >> 26)

#define FLEXCOM_FLEX_SPI_IMR_TXFFF_IM(x)         (((x) << 25) & GENMASK(25, 25))
#define FLEXCOM_FLEX_SPI_IMR_TXFFF_IM_M          GENMASK(25, 25)
#define FLEXCOM_FLEX_SPI_IMR_TXFFF_IM_X(x)       (((x) & GENMASK(25, 25)) >> 25)

#define FLEXCOM_FLEX_SPI_IMR_TXFEF_IM(x)         (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_SPI_IMR_TXFEF_IM_M          GENMASK(24, 24)
#define FLEXCOM_FLEX_SPI_IMR_TXFEF_IM_X(x)       (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_IMR_CMP_IM(x)           (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_SPI_IMR_CMP_IM_M            GENMASK(11, 11)
#define FLEXCOM_FLEX_SPI_IMR_CMP_IM_X(x)         (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_SPI_IMR_UNDES_IM(x)         (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_SPI_IMR_UNDES_IM_M          GENMASK(10, 10)
#define FLEXCOM_FLEX_SPI_IMR_UNDES_IM_X(x)       (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_SPI_IMR_TXEMPTY_IM(x)       (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_SPI_IMR_TXEMPTY_IM_M        GENMASK(9, 9)
#define FLEXCOM_FLEX_SPI_IMR_TXEMPTY_IM_X(x)     (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_SPI_IMR_NSSR_IM(x)          (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_SPI_IMR_NSSR_IM_M           GENMASK(8, 8)
#define FLEXCOM_FLEX_SPI_IMR_NSSR_IM_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_IMR_OVRES_IM(x)         (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_SPI_IMR_OVRES_IM_M          GENMASK(3, 3)
#define FLEXCOM_FLEX_SPI_IMR_OVRES_IM_X(x)       (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_SPI_IMR_MODF_IM(x)          (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_SPI_IMR_MODF_IM_M           GENMASK(2, 2)
#define FLEXCOM_FLEX_SPI_IMR_MODF_IM_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_SPI_IMR_TDRE_IM(x)          (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_IMR_TDRE_IM_M           GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_IMR_TDRE_IM_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_IMR_RDRF_IM(x)          ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_IMR_RDRF_IM_M           GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_IMR_RDRF_IM_X(x)        ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_CSR0 */
#define FLEXCOM_FLEX_SPI_CSR0(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 48, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_CSR0_DLYBCT_CS0(x)      (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_SPI_CSR0_DLYBCT_CS0_M       GENMASK(31, 24)
#define FLEXCOM_FLEX_SPI_CSR0_DLYBCT_CS0_X(x)    (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_CSR0_DLYBS_CS0(x)       (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_SPI_CSR0_DLYBS_CS0_M        GENMASK(23, 16)
#define FLEXCOM_FLEX_SPI_CSR0_DLYBS_CS0_X(x)     (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_CSR0_SCBR_CS0(x)        (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_SPI_CSR0_SCBR_CS0_M         GENMASK(15, 8)
#define FLEXCOM_FLEX_SPI_CSR0_SCBR_CS0_X(x)      (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_CSR0_BITS_CS0(x)        (((x) << 4) & GENMASK(7, 4))
#define FLEXCOM_FLEX_SPI_CSR0_BITS_CS0_M         GENMASK(7, 4)
#define FLEXCOM_FLEX_SPI_CSR0_BITS_CS0_X(x)      (((x) & GENMASK(7, 4)) >> 4)

#define FLEXCOM_FLEX_SPI_CSR0_CSAAT_CS0(x)       (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_SPI_CSR0_CSAAT_CS0_M        GENMASK(3, 3)
#define FLEXCOM_FLEX_SPI_CSR0_CSAAT_CS0_X(x)     (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_SPI_CSR0_CSNAAT_CS0(x)      (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_SPI_CSR0_CSNAAT_CS0_M       GENMASK(2, 2)
#define FLEXCOM_FLEX_SPI_CSR0_CSNAAT_CS0_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_SPI_CSR0_NCPHA_CS0(x)       (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_CSR0_NCPHA_CS0_M        GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_CSR0_NCPHA_CS0_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_CSR0_CPOL_CS0(x)        ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_CSR0_CPOL_CS0_M         GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_CSR0_CPOL_CS0_X(x)      ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_CSR1 */
#define FLEXCOM_FLEX_SPI_CSR1(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 52, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_CSR1_DLYBCT_CS1(x)      (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_SPI_CSR1_DLYBCT_CS1_M       GENMASK(31, 24)
#define FLEXCOM_FLEX_SPI_CSR1_DLYBCT_CS1_X(x)    (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_CSR1_DLYBS_CS1(x)       (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_SPI_CSR1_DLYBS_CS1_M        GENMASK(23, 16)
#define FLEXCOM_FLEX_SPI_CSR1_DLYBS_CS1_X(x)     (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_CSR1_SCBR_CS1(x)        (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_SPI_CSR1_SCBR_CS1_M         GENMASK(15, 8)
#define FLEXCOM_FLEX_SPI_CSR1_SCBR_CS1_X(x)      (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_CSR1_BITS_CS1(x)        (((x) << 4) & GENMASK(7, 4))
#define FLEXCOM_FLEX_SPI_CSR1_BITS_CS1_M         GENMASK(7, 4)
#define FLEXCOM_FLEX_SPI_CSR1_BITS_CS1_X(x)      (((x) & GENMASK(7, 4)) >> 4)

#define FLEXCOM_FLEX_SPI_CSR1_CSAAT_CS1(x)       (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_SPI_CSR1_CSAAT_CS1_M        GENMASK(3, 3)
#define FLEXCOM_FLEX_SPI_CSR1_CSAAT_CS1_X(x)     (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_SPI_CSR1_CSNAAT_CS1(x)      (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_SPI_CSR1_CSNAAT_CS1_M       GENMASK(2, 2)
#define FLEXCOM_FLEX_SPI_CSR1_CSNAAT_CS1_X(x)    (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_SPI_CSR1_NCPHA_CS1(x)       (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_CSR1_NCPHA_CS1_M        GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_CSR1_NCPHA_CS1_X(x)     (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_CSR1_CPOL_CS1(x)        ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_CSR1_CPOL_CS1_M         GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_CSR1_CPOL_CS1_X(x)      ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_FMR */
#define FLEXCOM_FLEX_SPI_FMR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 64, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_FMR_RXFTHRES(x)         (((x) << 24) & GENMASK(29, 24))
#define FLEXCOM_FLEX_SPI_FMR_RXFTHRES_M          GENMASK(29, 24)
#define FLEXCOM_FLEX_SPI_FMR_RXFTHRES_X(x)       (((x) & GENMASK(29, 24)) >> 24)

#define FLEXCOM_FLEX_SPI_FMR_TXFTHRES(x)         (((x) << 16) & GENMASK(21, 16))
#define FLEXCOM_FLEX_SPI_FMR_TXFTHRES_M          GENMASK(21, 16)
#define FLEXCOM_FLEX_SPI_FMR_TXFTHRES_X(x)       (((x) & GENMASK(21, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_FMR_RXRDYM(x)           (((x) << 4) & GENMASK(5, 4))
#define FLEXCOM_FLEX_SPI_FMR_RXRDYM_M            GENMASK(5, 4)
#define FLEXCOM_FLEX_SPI_FMR_RXRDYM_X(x)         (((x) & GENMASK(5, 4)) >> 4)

#define FLEXCOM_FLEX_SPI_FMR_TXRDYM(x)           ((x) & GENMASK(1, 0))
#define FLEXCOM_FLEX_SPI_FMR_TXRDYM_M            GENMASK(1, 0)
#define FLEXCOM_FLEX_SPI_FMR_TXRDYM_X(x)         ((x) & GENMASK(1, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_FLR */
#define FLEXCOM_FLEX_SPI_FLR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 68, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_FLR_RXFL(x)             (((x) << 16) & GENMASK(21, 16))
#define FLEXCOM_FLEX_SPI_FLR_RXFL_M              GENMASK(21, 16)
#define FLEXCOM_FLEX_SPI_FLR_RXFL_X(x)           (((x) & GENMASK(21, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_FLR_TXFL(x)             ((x) & GENMASK(5, 0))
#define FLEXCOM_FLEX_SPI_FLR_TXFL_M              GENMASK(5, 0)
#define FLEXCOM_FLEX_SPI_FLR_TXFL_X(x)           ((x) & GENMASK(5, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_CMPR */
#define FLEXCOM_FLEX_SPI_CMPR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 72, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_CMPR_VAL2(x)            (((x) << 16) & GENMASK(31, 16))
#define FLEXCOM_FLEX_SPI_CMPR_VAL2_M             GENMASK(31, 16)
#define FLEXCOM_FLEX_SPI_CMPR_VAL2_X(x)          (((x) & GENMASK(31, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_CMPR_VAL1(x)            ((x) & GENMASK(15, 0))
#define FLEXCOM_FLEX_SPI_CMPR_VAL1_M             GENMASK(15, 0)
#define FLEXCOM_FLEX_SPI_CMPR_VAL1_X(x)          ((x) & GENMASK(15, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_WPMR */
#define FLEXCOM_FLEX_SPI_WPMR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 228, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_WPMR_WPKEY(x)           (((x) << 8) & GENMASK(31, 8))
#define FLEXCOM_FLEX_SPI_WPMR_WPKEY_M            GENMASK(31, 8)
#define FLEXCOM_FLEX_SPI_WPMR_WPKEY_X(x)         (((x) & GENMASK(31, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_WPMR_WPCREN(x)          (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_SPI_WPMR_WPCREN_M           GENMASK(2, 2)
#define FLEXCOM_FLEX_SPI_WPMR_WPCREN_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_SPI_WPMR_WPITEN(x)          (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_SPI_WPMR_WPITEN_M           GENMASK(1, 1)
#define FLEXCOM_FLEX_SPI_WPMR_WPITEN_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_SPI_WPMR_WPEN(x)            ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_WPMR_WPEN_M             GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_WPMR_WPEN_X(x)          ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_WPSR */
#define FLEXCOM_FLEX_SPI_WPSR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 232, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_WPSR_WPVSRC(x)          (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_SPI_WPSR_WPVSRC_M           GENMASK(15, 8)
#define FLEXCOM_FLEX_SPI_WPSR_WPVSRC_X(x)        (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_SPI_WPSR_WPVS(x)            ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_SPI_WPSR_WPVS_M             GENMASK(0, 0)
#define FLEXCOM_FLEX_SPI_WPSR_WPVS_X(x)          ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_SPI_REG:FLEX_SPI_VERSION */
#define FLEXCOM_FLEX_SPI_VERSION(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1024, 0, 1, 268, 252, 0, 1, 4)

#define FLEXCOM_FLEX_SPI_VERSION_MFN(x)          (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_SPI_VERSION_MFN_M           GENMASK(18, 16)
#define FLEXCOM_FLEX_SPI_VERSION_MFN_X(x)        (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_SPI_VERSION_VERSION(x)      ((x) & GENMASK(11, 0))
#define FLEXCOM_FLEX_SPI_VERSION_VERSION_M       GENMASK(11, 0)
#define FLEXCOM_FLEX_SPI_VERSION_VERSION_X(x)    ((x) & GENMASK(11, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_CR */
#define FLEXCOM_FLEX_TWI_CR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 0, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_CR_FIFODIS(x)           (((x) << 29) & GENMASK(29, 29))
#define FLEXCOM_FLEX_TWI_CR_FIFODIS_M            GENMASK(29, 29)
#define FLEXCOM_FLEX_TWI_CR_FIFODIS_X(x)         (((x) & GENMASK(29, 29)) >> 29)

#define FLEXCOM_FLEX_TWI_CR_FIFOEN(x)            (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_TWI_CR_FIFOEN_M             GENMASK(28, 28)
#define FLEXCOM_FLEX_TWI_CR_FIFOEN_X(x)          (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_TWI_CR_LOCKCLR(x)           (((x) << 26) & GENMASK(26, 26))
#define FLEXCOM_FLEX_TWI_CR_LOCKCLR_M            GENMASK(26, 26)
#define FLEXCOM_FLEX_TWI_CR_LOCKCLR_X(x)         (((x) & GENMASK(26, 26)) >> 26)

#define FLEXCOM_FLEX_TWI_CR_THRCLR(x)            (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_TWI_CR_THRCLR_M             GENMASK(24, 24)
#define FLEXCOM_FLEX_TWI_CR_THRCLR_X(x)          (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_CR_ACMDIS(x)            (((x) << 17) & GENMASK(17, 17))
#define FLEXCOM_FLEX_TWI_CR_ACMDIS_M             GENMASK(17, 17)
#define FLEXCOM_FLEX_TWI_CR_ACMDIS_X(x)          (((x) & GENMASK(17, 17)) >> 17)

#define FLEXCOM_FLEX_TWI_CR_ACMEN(x)             (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_TWI_CR_ACMEN_M              GENMASK(16, 16)
#define FLEXCOM_FLEX_TWI_CR_ACMEN_X(x)           (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_CR_CLEAR(x)             (((x) << 15) & GENMASK(15, 15))
#define FLEXCOM_FLEX_TWI_CR_CLEAR_M              GENMASK(15, 15)
#define FLEXCOM_FLEX_TWI_CR_CLEAR_X(x)           (((x) & GENMASK(15, 15)) >> 15)

#define FLEXCOM_FLEX_TWI_CR_PECRQ(x)             (((x) << 14) & GENMASK(14, 14))
#define FLEXCOM_FLEX_TWI_CR_PECRQ_M              GENMASK(14, 14)
#define FLEXCOM_FLEX_TWI_CR_PECRQ_X(x)           (((x) & GENMASK(14, 14)) >> 14)

#define FLEXCOM_FLEX_TWI_CR_PECDIS(x)            (((x) << 13) & GENMASK(13, 13))
#define FLEXCOM_FLEX_TWI_CR_PECDIS_M             GENMASK(13, 13)
#define FLEXCOM_FLEX_TWI_CR_PECDIS_X(x)          (((x) & GENMASK(13, 13)) >> 13)

#define FLEXCOM_FLEX_TWI_CR_PECEN(x)             (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_TWI_CR_PECEN_M              GENMASK(12, 12)
#define FLEXCOM_FLEX_TWI_CR_PECEN_X(x)           (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_TWI_CR_SMBDIS(x)            (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_TWI_CR_SMBDIS_M             GENMASK(11, 11)
#define FLEXCOM_FLEX_TWI_CR_SMBDIS_X(x)          (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_TWI_CR_SMBEN(x)             (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_TWI_CR_SMBEN_M              GENMASK(10, 10)
#define FLEXCOM_FLEX_TWI_CR_SMBEN_X(x)           (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_TWI_CR_HSDIS(x)             (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_TWI_CR_HSDIS_M              GENMASK(9, 9)
#define FLEXCOM_FLEX_TWI_CR_HSDIS_X(x)           (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_TWI_CR_HSEN(x)              (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_TWI_CR_HSEN_M               GENMASK(8, 8)
#define FLEXCOM_FLEX_TWI_CR_HSEN_X(x)            (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_CR_SWR_RST(x)           (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_CR_SWR_RST_M            GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_CR_SWR_RST_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_CR_QUICK(x)             (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_CR_QUICK_M              GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_CR_QUICK_X(x)           (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_CR_SVDIS(x)             (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_CR_SVDIS_M              GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_CR_SVDIS_X(x)           (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_CR_SVEN(x)              (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_CR_SVEN_M               GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_CR_SVEN_X(x)            (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_CR_MSDIS(x)             (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_TWI_CR_MSDIS_M              GENMASK(3, 3)
#define FLEXCOM_FLEX_TWI_CR_MSDIS_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_TWI_CR_MSEN(x)              (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_CR_MSEN_M               GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_CR_MSEN_X(x)            (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_CR_STOP(x)              (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_CR_STOP_M               GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_CR_STOP_X(x)            (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_CR_START(x)             ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_CR_START_M              GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_CR_START_X(x)           ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_MMR */
#define FLEXCOM_FLEX_TWI_MMR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 4, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_MMR_NOAP(x)             (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_TWI_MMR_NOAP_M              GENMASK(24, 24)
#define FLEXCOM_FLEX_TWI_MMR_NOAP_X(x)           (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_MMR_DADR(x)             (((x) << 16) & GENMASK(22, 16))
#define FLEXCOM_FLEX_TWI_MMR_DADR_M              GENMASK(22, 16)
#define FLEXCOM_FLEX_TWI_MMR_DADR_X(x)           (((x) & GENMASK(22, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_MMR_SCLRBL(x)           (((x) << 13) & GENMASK(14, 13))
#define FLEXCOM_FLEX_TWI_MMR_SCLRBL_M            GENMASK(14, 13)
#define FLEXCOM_FLEX_TWI_MMR_SCLRBL_X(x)         (((x) & GENMASK(14, 13)) >> 13)

#define FLEXCOM_FLEX_TWI_MMR_MREAD(x)            (((x) << 12) & GENMASK(12, 12))
#define FLEXCOM_FLEX_TWI_MMR_MREAD_M             GENMASK(12, 12)
#define FLEXCOM_FLEX_TWI_MMR_MREAD_X(x)          (((x) & GENMASK(12, 12)) >> 12)

#define FLEXCOM_FLEX_TWI_MMR_IADRSZ(x)           (((x) << 8) & GENMASK(9, 8))
#define FLEXCOM_FLEX_TWI_MMR_IADRSZ_M            GENMASK(9, 8)
#define FLEXCOM_FLEX_TWI_MMR_IADRSZ_X(x)         (((x) & GENMASK(9, 8)) >> 8)

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_SMR */
#define FLEXCOM_FLEX_TWI_SMR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 8, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_SMR_DATAMEN(x)          (((x) << 31) & GENMASK(31, 31))
#define FLEXCOM_FLEX_TWI_SMR_DATAMEN_M           GENMASK(31, 31)
#define FLEXCOM_FLEX_TWI_SMR_DATAMEN_X(x)        (((x) & GENMASK(31, 31)) >> 31)

#define FLEXCOM_FLEX_TWI_SMR_SADR3EN(x)          (((x) << 30) & GENMASK(30, 30))
#define FLEXCOM_FLEX_TWI_SMR_SADR3EN_M           GENMASK(30, 30)
#define FLEXCOM_FLEX_TWI_SMR_SADR3EN_X(x)        (((x) & GENMASK(30, 30)) >> 30)

#define FLEXCOM_FLEX_TWI_SMR_SADR2EN(x)          (((x) << 29) & GENMASK(29, 29))
#define FLEXCOM_FLEX_TWI_SMR_SADR2EN_M           GENMASK(29, 29)
#define FLEXCOM_FLEX_TWI_SMR_SADR2EN_X(x)        (((x) & GENMASK(29, 29)) >> 29)

#define FLEXCOM_FLEX_TWI_SMR_SADR1EN(x)          (((x) << 28) & GENMASK(28, 28))
#define FLEXCOM_FLEX_TWI_SMR_SADR1EN_M           GENMASK(28, 28)
#define FLEXCOM_FLEX_TWI_SMR_SADR1EN_X(x)        (((x) & GENMASK(28, 28)) >> 28)

#define FLEXCOM_FLEX_TWI_SMR_SADR(x)             (((x) << 16) & GENMASK(22, 16))
#define FLEXCOM_FLEX_TWI_SMR_SADR_M              GENMASK(22, 16)
#define FLEXCOM_FLEX_TWI_SMR_SADR_X(x)           (((x) & GENMASK(22, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_SMR_MASK(x)             (((x) << 8) & GENMASK(14, 8))
#define FLEXCOM_FLEX_TWI_SMR_MASK_M              GENMASK(14, 8)
#define FLEXCOM_FLEX_TWI_SMR_MASK_X(x)           (((x) & GENMASK(14, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_SMR_SNIFF(x)            (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_SMR_SNIFF_M             GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_SMR_SNIFF_X(x)          (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_SMR_SCLWSDIS(x)         (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_SMR_SCLWSDIS_M          GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_SMR_SCLWSDIS_X(x)       (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_SMR_SADAT(x)            (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_SMR_SADAT_M             GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_SMR_SADAT_X(x)          (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_SMR_SMHH(x)             (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_TWI_SMR_SMHH_M              GENMASK(3, 3)
#define FLEXCOM_FLEX_TWI_SMR_SMHH_X(x)           (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_TWI_SMR_SMDA(x)             (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_SMR_SMDA_M              GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_SMR_SMDA_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_SMR_NACKEN(x)           ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_SMR_NACKEN_M            GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_SMR_NACKEN_X(x)         ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_IADR */
#define FLEXCOM_FLEX_TWI_IADR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 12, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_IADR_IADR(x)            ((x) & GENMASK(23, 0))
#define FLEXCOM_FLEX_TWI_IADR_IADR_M             GENMASK(23, 0)
#define FLEXCOM_FLEX_TWI_IADR_IADR_X(x)          ((x) & GENMASK(23, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_CWGR */
#define FLEXCOM_FLEX_TWI_CWGR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 16, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_CWGR_HOLD(x)            (((x) << 24) & GENMASK(29, 24))
#define FLEXCOM_FLEX_TWI_CWGR_HOLD_M             GENMASK(29, 24)
#define FLEXCOM_FLEX_TWI_CWGR_HOLD_X(x)          (((x) & GENMASK(29, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_CWGR_BRSRCCLK(x)        (((x) << 20) & GENMASK(20, 20))
#define FLEXCOM_FLEX_TWI_CWGR_BRSRCCLK_M         GENMASK(20, 20)
#define FLEXCOM_FLEX_TWI_CWGR_BRSRCCLK_X(x)      (((x) & GENMASK(20, 20)) >> 20)

#define FLEXCOM_FLEX_TWI_CWGR_CKDIV(x)           (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_TWI_CWGR_CKDIV_M            GENMASK(18, 16)
#define FLEXCOM_FLEX_TWI_CWGR_CKDIV_X(x)         (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_CWGR_CHDIV(x)           (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_TWI_CWGR_CHDIV_M            GENMASK(15, 8)
#define FLEXCOM_FLEX_TWI_CWGR_CHDIV_X(x)         (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_CWGR_CLDIV(x)           ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_TWI_CWGR_CLDIV_M            GENMASK(7, 0)
#define FLEXCOM_FLEX_TWI_CWGR_CLDIV_X(x)         ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_SR */
#define FLEXCOM_FLEX_TWI_SR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 32, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_SR_SR(x)                (((x) << 26) & GENMASK(26, 26))
#define FLEXCOM_FLEX_TWI_SR_SR_M                 GENMASK(26, 26)
#define FLEXCOM_FLEX_TWI_SR_SR_X(x)              (((x) & GENMASK(26, 26)) >> 26)

#define FLEXCOM_FLEX_TWI_SR_SDA(x)               (((x) << 25) & GENMASK(25, 25))
#define FLEXCOM_FLEX_TWI_SR_SDA_M                GENMASK(25, 25)
#define FLEXCOM_FLEX_TWI_SR_SDA_X(x)             (((x) & GENMASK(25, 25)) >> 25)

#define FLEXCOM_FLEX_TWI_SR_SCL(x)               (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_TWI_SR_SCL_M                GENMASK(24, 24)
#define FLEXCOM_FLEX_TWI_SR_SCL_X(x)             (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_SR_LOCK(x)              (((x) << 23) & GENMASK(23, 23))
#define FLEXCOM_FLEX_TWI_SR_LOCK_M               GENMASK(23, 23)
#define FLEXCOM_FLEX_TWI_SR_LOCK_X(x)            (((x) & GENMASK(23, 23)) >> 23)

#define FLEXCOM_FLEX_TWI_SR_SMBHHM(x)            (((x) << 21) & GENMASK(21, 21))
#define FLEXCOM_FLEX_TWI_SR_SMBHHM_M             GENMASK(21, 21)
#define FLEXCOM_FLEX_TWI_SR_SMBHHM_X(x)          (((x) & GENMASK(21, 21)) >> 21)

#define FLEXCOM_FLEX_TWI_SR_SMBDAM(x)            (((x) << 20) & GENMASK(20, 20))
#define FLEXCOM_FLEX_TWI_SR_SMBDAM_M             GENMASK(20, 20)
#define FLEXCOM_FLEX_TWI_SR_SMBDAM_X(x)          (((x) & GENMASK(20, 20)) >> 20)

#define FLEXCOM_FLEX_TWI_SR_PECERR(x)            (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_TWI_SR_PECERR_M             GENMASK(19, 19)
#define FLEXCOM_FLEX_TWI_SR_PECERR_X(x)          (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_TWI_SR_TOUT(x)              (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_TWI_SR_TOUT_M               GENMASK(18, 18)
#define FLEXCOM_FLEX_TWI_SR_TOUT_X(x)            (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_TWI_SR_MCACK(x)             (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_TWI_SR_MCACK_M              GENMASK(16, 16)
#define FLEXCOM_FLEX_TWI_SR_MCACK_X(x)           (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_SR_EOASACC(x)           (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_TWI_SR_EOASACC_M            GENMASK(11, 11)
#define FLEXCOM_FLEX_TWI_SR_EOASACC_X(x)         (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_TWI_SR_SCLWS(x)             (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_TWI_SR_SCLWS_M              GENMASK(10, 10)
#define FLEXCOM_FLEX_TWI_SR_SCLWS_X(x)           (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_TWI_SR_ARBLST(x)            (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_TWI_SR_ARBLST_M             GENMASK(9, 9)
#define FLEXCOM_FLEX_TWI_SR_ARBLST_X(x)          (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_TWI_SR_NACK(x)              (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_TWI_SR_NACK_M               GENMASK(8, 8)
#define FLEXCOM_FLEX_TWI_SR_NACK_X(x)            (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_SR_UNRE(x)              (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_SR_UNRE_M               GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_SR_UNRE_X(x)            (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_SR_OVRE(x)              (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_SR_OVRE_M               GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_SR_OVRE_X(x)            (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_SR_GACC(x)              (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_SR_GACC_M               GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_SR_GACC_X(x)            (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_SR_SVACC(x)             (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_SR_SVACC_M              GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_SR_SVACC_X(x)           (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_SR_SVREAD(x)            (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_TWI_SR_SVREAD_M             GENMASK(3, 3)
#define FLEXCOM_FLEX_TWI_SR_SVREAD_X(x)          (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_TWI_SR_TXRDY(x)             (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_SR_TXRDY_M              GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_SR_TXRDY_X(x)           (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_SR_RXRDY(x)             (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_SR_RXRDY_M              GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_SR_RXRDY_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_SR_TXCOMP(x)            ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_SR_TXCOMP_M             GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_SR_TXCOMP_X(x)          ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_IER */
#define FLEXCOM_FLEX_TWI_IER(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 36, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_IER_SMBHHM_IE(x)        (((x) << 21) & GENMASK(21, 21))
#define FLEXCOM_FLEX_TWI_IER_SMBHHM_IE_M         GENMASK(21, 21)
#define FLEXCOM_FLEX_TWI_IER_SMBHHM_IE_X(x)      (((x) & GENMASK(21, 21)) >> 21)

#define FLEXCOM_FLEX_TWI_IER_SMBDAM_IE(x)        (((x) << 20) & GENMASK(20, 20))
#define FLEXCOM_FLEX_TWI_IER_SMBDAM_IE_M         GENMASK(20, 20)
#define FLEXCOM_FLEX_TWI_IER_SMBDAM_IE_X(x)      (((x) & GENMASK(20, 20)) >> 20)

#define FLEXCOM_FLEX_TWI_IER_PECERR_IE(x)        (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_TWI_IER_PECERR_IE_M         GENMASK(19, 19)
#define FLEXCOM_FLEX_TWI_IER_PECERR_IE_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_TWI_IER_TOUT_IE(x)          (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_TWI_IER_TOUT_IE_M           GENMASK(18, 18)
#define FLEXCOM_FLEX_TWI_IER_TOUT_IE_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_TWI_IER_MCACK_IE(x)         (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_TWI_IER_MCACK_IE_M          GENMASK(16, 16)
#define FLEXCOM_FLEX_TWI_IER_MCACK_IE_X(x)       (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_IER_EOASACC_IE(x)       (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_TWI_IER_EOASACC_IE_M        GENMASK(11, 11)
#define FLEXCOM_FLEX_TWI_IER_EOASACC_IE_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_TWI_IER_SCLWS_IE(x)         (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_TWI_IER_SCLWS_IE_M          GENMASK(10, 10)
#define FLEXCOM_FLEX_TWI_IER_SCLWS_IE_X(x)       (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_TWI_IER_ARBLST_IE(x)        (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_TWI_IER_ARBLST_IE_M         GENMASK(9, 9)
#define FLEXCOM_FLEX_TWI_IER_ARBLST_IE_X(x)      (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_TWI_IER_NACK_IE(x)          (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_TWI_IER_NACK_IE_M           GENMASK(8, 8)
#define FLEXCOM_FLEX_TWI_IER_NACK_IE_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_IER_UNRE_IE(x)          (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_IER_UNRE_IE_M           GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_IER_UNRE_IE_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_IER_OVRE_IE(x)          (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_IER_OVRE_IE_M           GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_IER_OVRE_IE_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_IER_GACC_IE(x)          (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_IER_GACC_IE_M           GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_IER_GACC_IE_X(x)        (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_IER_SVACC_IE(x)         (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_IER_SVACC_IE_M          GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_IER_SVACC_IE_X(x)       (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_IER_TXRDY_IE(x)         (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_IER_TXRDY_IE_M          GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_IER_TXRDY_IE_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_IER_RXRDY_IE(x)         (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_IER_RXRDY_IE_M          GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_IER_RXRDY_IE_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_IER_TXCOMP_IE(x)        ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_IER_TXCOMP_IE_M         GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_IER_TXCOMP_IE_X(x)      ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_IDR */
#define FLEXCOM_FLEX_TWI_IDR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 40, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_IDR_SMBHHM_ID(x)        (((x) << 21) & GENMASK(21, 21))
#define FLEXCOM_FLEX_TWI_IDR_SMBHHM_ID_M         GENMASK(21, 21)
#define FLEXCOM_FLEX_TWI_IDR_SMBHHM_ID_X(x)      (((x) & GENMASK(21, 21)) >> 21)

#define FLEXCOM_FLEX_TWI_IDR_SMBDAM_ID(x)        (((x) << 20) & GENMASK(20, 20))
#define FLEXCOM_FLEX_TWI_IDR_SMBDAM_ID_M         GENMASK(20, 20)
#define FLEXCOM_FLEX_TWI_IDR_SMBDAM_ID_X(x)      (((x) & GENMASK(20, 20)) >> 20)

#define FLEXCOM_FLEX_TWI_IDR_PECERR_ID(x)        (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_TWI_IDR_PECERR_ID_M         GENMASK(19, 19)
#define FLEXCOM_FLEX_TWI_IDR_PECERR_ID_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_TWI_IDR_TOUT_ID(x)          (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_TWI_IDR_TOUT_ID_M           GENMASK(18, 18)
#define FLEXCOM_FLEX_TWI_IDR_TOUT_ID_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_TWI_IDR_MCACK_ID(x)         (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_TWI_IDR_MCACK_ID_M          GENMASK(16, 16)
#define FLEXCOM_FLEX_TWI_IDR_MCACK_ID_X(x)       (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_IDR_EOASACC_ID(x)       (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_TWI_IDR_EOASACC_ID_M        GENMASK(11, 11)
#define FLEXCOM_FLEX_TWI_IDR_EOASACC_ID_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_TWI_IDR_SCLWS_ID(x)         (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_TWI_IDR_SCLWS_ID_M          GENMASK(10, 10)
#define FLEXCOM_FLEX_TWI_IDR_SCLWS_ID_X(x)       (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_TWI_IDR_ARBLST_ID(x)        (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_TWI_IDR_ARBLST_ID_M         GENMASK(9, 9)
#define FLEXCOM_FLEX_TWI_IDR_ARBLST_ID_X(x)      (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_TWI_IDR_NACK_ID(x)          (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_TWI_IDR_NACK_ID_M           GENMASK(8, 8)
#define FLEXCOM_FLEX_TWI_IDR_NACK_ID_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_IDR_UNRE_ID(x)          (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_IDR_UNRE_ID_M           GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_IDR_UNRE_ID_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_IDR_OVRE_ID(x)          (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_IDR_OVRE_ID_M           GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_IDR_OVRE_ID_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_IDR_GACC_ID(x)          (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_IDR_GACC_ID_M           GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_IDR_GACC_ID_X(x)        (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_IDR_SVACC_ID(x)         (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_IDR_SVACC_ID_M          GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_IDR_SVACC_ID_X(x)       (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_IDR_TXRDY_ID(x)         (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_IDR_TXRDY_ID_M          GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_IDR_TXRDY_ID_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_IDR_RXRDY_ID(x)         (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_IDR_RXRDY_ID_M          GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_IDR_RXRDY_ID_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_IDR_TXCOMP_ID(x)        ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_IDR_TXCOMP_ID_M         GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_IDR_TXCOMP_ID_X(x)      ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_IMR */
#define FLEXCOM_FLEX_TWI_IMR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 44, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_IMR_SMBHHM_IM(x)        (((x) << 21) & GENMASK(21, 21))
#define FLEXCOM_FLEX_TWI_IMR_SMBHHM_IM_M         GENMASK(21, 21)
#define FLEXCOM_FLEX_TWI_IMR_SMBHHM_IM_X(x)      (((x) & GENMASK(21, 21)) >> 21)

#define FLEXCOM_FLEX_TWI_IMR_SMBDAM_IM(x)        (((x) << 20) & GENMASK(20, 20))
#define FLEXCOM_FLEX_TWI_IMR_SMBDAM_IM_M         GENMASK(20, 20)
#define FLEXCOM_FLEX_TWI_IMR_SMBDAM_IM_X(x)      (((x) & GENMASK(20, 20)) >> 20)

#define FLEXCOM_FLEX_TWI_IMR_PECERR_IM(x)        (((x) << 19) & GENMASK(19, 19))
#define FLEXCOM_FLEX_TWI_IMR_PECERR_IM_M         GENMASK(19, 19)
#define FLEXCOM_FLEX_TWI_IMR_PECERR_IM_X(x)      (((x) & GENMASK(19, 19)) >> 19)

#define FLEXCOM_FLEX_TWI_IMR_TOUT_IM(x)          (((x) << 18) & GENMASK(18, 18))
#define FLEXCOM_FLEX_TWI_IMR_TOUT_IM_M           GENMASK(18, 18)
#define FLEXCOM_FLEX_TWI_IMR_TOUT_IM_X(x)        (((x) & GENMASK(18, 18)) >> 18)

#define FLEXCOM_FLEX_TWI_IMR_MCACK_IM(x)         (((x) << 16) & GENMASK(16, 16))
#define FLEXCOM_FLEX_TWI_IMR_MCACK_IM_M          GENMASK(16, 16)
#define FLEXCOM_FLEX_TWI_IMR_MCACK_IM_X(x)       (((x) & GENMASK(16, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_IMR_EOASACC_IM(x)       (((x) << 11) & GENMASK(11, 11))
#define FLEXCOM_FLEX_TWI_IMR_EOASACC_IM_M        GENMASK(11, 11)
#define FLEXCOM_FLEX_TWI_IMR_EOASACC_IM_X(x)     (((x) & GENMASK(11, 11)) >> 11)

#define FLEXCOM_FLEX_TWI_IMR_SCLWS_IM(x)         (((x) << 10) & GENMASK(10, 10))
#define FLEXCOM_FLEX_TWI_IMR_SCLWS_IM_M          GENMASK(10, 10)
#define FLEXCOM_FLEX_TWI_IMR_SCLWS_IM_X(x)       (((x) & GENMASK(10, 10)) >> 10)

#define FLEXCOM_FLEX_TWI_IMR_ARBLST_IM(x)        (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_TWI_IMR_ARBLST_IM_M         GENMASK(9, 9)
#define FLEXCOM_FLEX_TWI_IMR_ARBLST_IM_X(x)      (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_TWI_IMR_NACK_IM(x)          (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_TWI_IMR_NACK_IM_M           GENMASK(8, 8)
#define FLEXCOM_FLEX_TWI_IMR_NACK_IM_X(x)        (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_IMR_UNRE_IM(x)          (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_IMR_UNRE_IM_M           GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_IMR_UNRE_IM_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_IMR_OVRE_IM(x)          (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_IMR_OVRE_IM_M           GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_IMR_OVRE_IM_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_IMR_GACC_IM(x)          (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_IMR_GACC_IM_M           GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_IMR_GACC_IM_X(x)        (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_IMR_SVACC_IM(x)         (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_IMR_SVACC_IM_M          GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_IMR_SVACC_IM_X(x)       (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_IMR_TXRDY_IM(x)         (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_IMR_TXRDY_IM_M          GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_IMR_TXRDY_IM_X(x)       (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_IMR_RXRDY_IM(x)         (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_IMR_RXRDY_IM_M          GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_IMR_RXRDY_IM_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_IMR_TXCOMP_IM(x)        ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_IMR_TXCOMP_IM_M         GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_IMR_TXCOMP_IM_X(x)      ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_RHR */
#define FLEXCOM_FLEX_TWI_RHR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 48, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_RHR_RXDATA(x)           ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_TWI_RHR_RXDATA_M            GENMASK(7, 0)
#define FLEXCOM_FLEX_TWI_RHR_RXDATA_X(x)         ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FMT_RHR */
#define FLEXCOM_FLEX_TWI_FMT_RHR(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 48, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA3(x)      (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA3_M       GENMASK(31, 24)
#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA3_X(x)    (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA2(x)      (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA2_M       GENMASK(23, 16)
#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA2_X(x)    (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA1(x)      (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA1_M       GENMASK(15, 8)
#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA1_X(x)    (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA0(x)      ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA0_M       GENMASK(7, 0)
#define FLEXCOM_FLEX_TWI_FMT_RHR_RXDATA0_X(x)    ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_THR */
#define FLEXCOM_FLEX_TWI_THR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 52, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_THR_TXDATA(x)           ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_TWI_THR_TXDATA_M            GENMASK(7, 0)
#define FLEXCOM_FLEX_TWI_THR_TXDATA_X(x)         ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FMT_THR */
#define FLEXCOM_FLEX_TWI_FMT_THR(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 52, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA3(x)      (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA3_M       GENMASK(31, 24)
#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA3_X(x)    (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA2(x)      (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA2_M       GENMASK(23, 16)
#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA2_X(x)    (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA1(x)      (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA1_M       GENMASK(15, 8)
#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA1_X(x)    (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA0(x)      ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA0_M       GENMASK(7, 0)
#define FLEXCOM_FLEX_TWI_FMT_THR_TXDATA0_X(x)    ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_SMBTR */
#define FLEXCOM_FLEX_TWI_SMBTR(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 56, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_SMBTR_THMAX(x)          (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_TWI_SMBTR_THMAX_M           GENMASK(31, 24)
#define FLEXCOM_FLEX_TWI_SMBTR_THMAX_X(x)        (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_SMBTR_TLOWM(x)          (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_TWI_SMBTR_TLOWM_M           GENMASK(23, 16)
#define FLEXCOM_FLEX_TWI_SMBTR_TLOWM_X(x)        (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_SMBTR_TLOWS(x)          (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_TWI_SMBTR_TLOWS_M           GENMASK(15, 8)
#define FLEXCOM_FLEX_TWI_SMBTR_TLOWS_X(x)        (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_SMBTR_PRESC(x)          ((x) & GENMASK(3, 0))
#define FLEXCOM_FLEX_TWI_SMBTR_PRESC_M           GENMASK(3, 0)
#define FLEXCOM_FLEX_TWI_SMBTR_PRESC_X(x)        ((x) & GENMASK(3, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_HSR */
#define FLEXCOM_FLEX_TWI_HSR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 60, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_HSR_MCODE(x)            ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_TWI_HSR_MCODE_M             GENMASK(7, 0)
#define FLEXCOM_FLEX_TWI_HSR_MCODE_X(x)          ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_ACR */
#define FLEXCOM_FLEX_TWI_ACR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 64, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_ACR_NPEC(x)             (((x) << 25) & GENMASK(25, 25))
#define FLEXCOM_FLEX_TWI_ACR_NPEC_M              GENMASK(25, 25)
#define FLEXCOM_FLEX_TWI_ACR_NPEC_X(x)           (((x) & GENMASK(25, 25)) >> 25)

#define FLEXCOM_FLEX_TWI_ACR_NDIR(x)             (((x) << 24) & GENMASK(24, 24))
#define FLEXCOM_FLEX_TWI_ACR_NDIR_M              GENMASK(24, 24)
#define FLEXCOM_FLEX_TWI_ACR_NDIR_X(x)           (((x) & GENMASK(24, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_ACR_NDATAL(x)           (((x) << 16) & GENMASK(23, 16))
#define FLEXCOM_FLEX_TWI_ACR_NDATAL_M            GENMASK(23, 16)
#define FLEXCOM_FLEX_TWI_ACR_NDATAL_X(x)         (((x) & GENMASK(23, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_ACR_PEC(x)              (((x) << 9) & GENMASK(9, 9))
#define FLEXCOM_FLEX_TWI_ACR_PEC_M               GENMASK(9, 9)
#define FLEXCOM_FLEX_TWI_ACR_PEC_X(x)            (((x) & GENMASK(9, 9)) >> 9)

#define FLEXCOM_FLEX_TWI_ACR_DIR(x)              (((x) << 8) & GENMASK(8, 8))
#define FLEXCOM_FLEX_TWI_ACR_DIR_M               GENMASK(8, 8)
#define FLEXCOM_FLEX_TWI_ACR_DIR_X(x)            (((x) & GENMASK(8, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_ACR_DATAL(x)            ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_TWI_ACR_DATAL_M             GENMASK(7, 0)
#define FLEXCOM_FLEX_TWI_ACR_DATAL_X(x)          ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FILTR */
#define FLEXCOM_FLEX_TWI_FILTR(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 68, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FILTR_THRES(x)          (((x) << 8) & GENMASK(10, 8))
#define FLEXCOM_FLEX_TWI_FILTR_THRES_M           GENMASK(10, 8)
#define FLEXCOM_FLEX_TWI_FILTR_THRES_X(x)        (((x) & GENMASK(10, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_FILTR_PADFCFG(x)        (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_FILTR_PADFCFG_M         GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_FILTR_PADFCFG_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_FILTR_PADFEN(x)         (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_FILTR_PADFEN_M          GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_FILTR_PADFEN_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_FILTR_FILT(x)           ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_FILTR_FILT_M            GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_FILTR_FILT_X(x)         ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_HSCWGR */
#define FLEXCOM_FLEX_TWI_HSCWGR(t) __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 72, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_HSCWGR_HSCKDIV(x)       (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_TWI_HSCWGR_HSCKDIV_M        GENMASK(18, 16)
#define FLEXCOM_FLEX_TWI_HSCWGR_HSCKDIV_X(x)     (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_HSCWGR_HSCHDIV(x)       (((x) << 8) & GENMASK(15, 8))
#define FLEXCOM_FLEX_TWI_HSCWGR_HSCHDIV_M        GENMASK(15, 8)
#define FLEXCOM_FLEX_TWI_HSCWGR_HSCHDIV_X(x)     (((x) & GENMASK(15, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_HSCWGR_HSCLDIV(x)       ((x) & GENMASK(7, 0))
#define FLEXCOM_FLEX_TWI_HSCWGR_HSCLDIV_M        GENMASK(7, 0)
#define FLEXCOM_FLEX_TWI_HSCWGR_HSCLDIV_X(x)     ((x) & GENMASK(7, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_SWMR */
#define FLEXCOM_FLEX_TWI_SWMR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 76, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_SWMR_DATAM(x)           (((x) << 24) & GENMASK(31, 24))
#define FLEXCOM_FLEX_TWI_SWMR_DATAM_M            GENMASK(31, 24)
#define FLEXCOM_FLEX_TWI_SWMR_DATAM_X(x)         (((x) & GENMASK(31, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_SWMR_SADR3(x)           (((x) << 16) & GENMASK(22, 16))
#define FLEXCOM_FLEX_TWI_SWMR_SADR3_M            GENMASK(22, 16)
#define FLEXCOM_FLEX_TWI_SWMR_SADR3_X(x)         (((x) & GENMASK(22, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_SWMR_SADR2(x)           (((x) << 8) & GENMASK(14, 8))
#define FLEXCOM_FLEX_TWI_SWMR_SADR2_M            GENMASK(14, 8)
#define FLEXCOM_FLEX_TWI_SWMR_SADR2_X(x)         (((x) & GENMASK(14, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_SWMR_SADR1(x)           ((x) & GENMASK(6, 0))
#define FLEXCOM_FLEX_TWI_SWMR_SADR1_M            GENMASK(6, 0)
#define FLEXCOM_FLEX_TWI_SWMR_SADR1_X(x)         ((x) & GENMASK(6, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FMR */
#define FLEXCOM_FLEX_TWI_FMR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 80, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FMR_RXFTHRES(x)         (((x) << 24) & GENMASK(29, 24))
#define FLEXCOM_FLEX_TWI_FMR_RXFTHRES_M          GENMASK(29, 24)
#define FLEXCOM_FLEX_TWI_FMR_RXFTHRES_X(x)       (((x) & GENMASK(29, 24)) >> 24)

#define FLEXCOM_FLEX_TWI_FMR_TXFTHRES(x)         (((x) << 16) & GENMASK(21, 16))
#define FLEXCOM_FLEX_TWI_FMR_TXFTHRES_M          GENMASK(21, 16)
#define FLEXCOM_FLEX_TWI_FMR_TXFTHRES_X(x)       (((x) & GENMASK(21, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_FMR_RXRDYM(x)           (((x) << 4) & GENMASK(5, 4))
#define FLEXCOM_FLEX_TWI_FMR_RXRDYM_M            GENMASK(5, 4)
#define FLEXCOM_FLEX_TWI_FMR_RXRDYM_X(x)         (((x) & GENMASK(5, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_FMR_TXRDYM(x)           ((x) & GENMASK(1, 0))
#define FLEXCOM_FLEX_TWI_FMR_TXRDYM_M            GENMASK(1, 0)
#define FLEXCOM_FLEX_TWI_FMR_TXRDYM_X(x)         ((x) & GENMASK(1, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FLR */
#define FLEXCOM_FLEX_TWI_FLR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 84, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FLR_RXFL(x)             (((x) << 16) & GENMASK(21, 16))
#define FLEXCOM_FLEX_TWI_FLR_RXFL_M              GENMASK(21, 16)
#define FLEXCOM_FLEX_TWI_FLR_RXFL_X(x)           (((x) & GENMASK(21, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_FLR_TXFL(x)             ((x) & GENMASK(5, 0))
#define FLEXCOM_FLEX_TWI_FLR_TXFL_M              GENMASK(5, 0)
#define FLEXCOM_FLEX_TWI_FLR_TXFL_X(x)           ((x) & GENMASK(5, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FSR */
#define FLEXCOM_FLEX_TWI_FSR(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 96, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FSR_RXFPTEF(x)          (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_FSR_RXFPTEF_M           GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_FSR_RXFPTEF_X(x)        (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_FSR_TXFPTEF(x)          (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_FSR_TXFPTEF_M           GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_FSR_TXFPTEF_X(x)        (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_FSR_RXFTHF(x)           (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_FSR_RXFTHF_M            GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_FSR_RXFTHF_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_FSR_RXFFF(x)            (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_FSR_RXFFF_M             GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_FSR_RXFFF_X(x)          (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_FSR_RXFEF(x)            (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_TWI_FSR_RXFEF_M             GENMASK(3, 3)
#define FLEXCOM_FLEX_TWI_FSR_RXFEF_X(x)          (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_TWI_FSR_TXFTHF(x)           (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_FSR_TXFTHF_M            GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_FSR_TXFTHF_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_FSR_TXFFF(x)            (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_FSR_TXFFF_M             GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_FSR_TXFFF_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_FSR_TXFEF(x)            ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_FSR_TXFEF_M             GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_FSR_TXFEF_X(x)          ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FIER */
#define FLEXCOM_FLEX_TWI_FIER(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 100, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FIER_RXFPTEF_IE(x)      (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_FIER_RXFPTEF_IE_M       GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_FIER_RXFPTEF_IE_X(x)    (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_FIER_TXFPTEF_IE(x)      (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_FIER_TXFPTEF_IE_M       GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_FIER_TXFPTEF_IE_X(x)    (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_FIER_RXFTHF_IE(x)       (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_FIER_RXFTHF_IE_M        GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_FIER_RXFTHF_IE_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_FIER_RXFFF_IE(x)        (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_FIER_RXFFF_IE_M         GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_FIER_RXFFF_IE_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_FIER_RXFEF_IE(x)        (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_TWI_FIER_RXFEF_IE_M         GENMASK(3, 3)
#define FLEXCOM_FLEX_TWI_FIER_RXFEF_IE_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_TWI_FIER_TXFTHF_IE(x)       (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_FIER_TXFTHF_IE_M        GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_FIER_TXFTHF_IE_X(x)     (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_FIER_TXFFF_IE(x)        (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_FIER_TXFFF_IE_M         GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_FIER_TXFFF_IE_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_FIER_TXFEF_IE(x)        ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_FIER_TXFEF_IE_M         GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_FIER_TXFEF_IE_X(x)      ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FIDR */
#define FLEXCOM_FLEX_TWI_FIDR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 104, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FIDR_RXFPTEF_ID(x)      (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_FIDR_RXFPTEF_ID_M       GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_FIDR_RXFPTEF_ID_X(x)    (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_FIDR_TXFPTEF_ID(x)      (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_FIDR_TXFPTEF_ID_M       GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_FIDR_TXFPTEF_ID_X(x)    (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_FIDR_RXFTHF_ID(x)       (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_FIDR_RXFTHF_ID_M        GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_FIDR_RXFTHF_ID_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_FIDR_RXFFF_ID(x)        (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_FIDR_RXFFF_ID_M         GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_FIDR_RXFFF_ID_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_FIDR_RXFEF_ID(x)        (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_TWI_FIDR_RXFEF_ID_M         GENMASK(3, 3)
#define FLEXCOM_FLEX_TWI_FIDR_RXFEF_ID_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_TWI_FIDR_TXFTHF_ID(x)       (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_FIDR_TXFTHF_ID_M        GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_FIDR_TXFTHF_ID_X(x)     (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_FIDR_TXFFF_ID(x)        (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_FIDR_TXFFF_ID_M         GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_FIDR_TXFFF_ID_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_FIDR_TXFEF_ID(x)        ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_FIDR_TXFEF_ID_M         GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_FIDR_TXFEF_ID_X(x)      ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_FIMR */
#define FLEXCOM_FLEX_TWI_FIMR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 108, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_FIMR_RXFPTEF_IM(x)      (((x) << 7) & GENMASK(7, 7))
#define FLEXCOM_FLEX_TWI_FIMR_RXFPTEF_IM_M       GENMASK(7, 7)
#define FLEXCOM_FLEX_TWI_FIMR_RXFPTEF_IM_X(x)    (((x) & GENMASK(7, 7)) >> 7)

#define FLEXCOM_FLEX_TWI_FIMR_TXFPTEF_IM(x)      (((x) << 6) & GENMASK(6, 6))
#define FLEXCOM_FLEX_TWI_FIMR_TXFPTEF_IM_M       GENMASK(6, 6)
#define FLEXCOM_FLEX_TWI_FIMR_TXFPTEF_IM_X(x)    (((x) & GENMASK(6, 6)) >> 6)

#define FLEXCOM_FLEX_TWI_FIMR_RXFTHF_IM(x)       (((x) << 5) & GENMASK(5, 5))
#define FLEXCOM_FLEX_TWI_FIMR_RXFTHF_IM_M        GENMASK(5, 5)
#define FLEXCOM_FLEX_TWI_FIMR_RXFTHF_IM_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define FLEXCOM_FLEX_TWI_FIMR_RXFFF_IM(x)        (((x) << 4) & GENMASK(4, 4))
#define FLEXCOM_FLEX_TWI_FIMR_RXFFF_IM_M         GENMASK(4, 4)
#define FLEXCOM_FLEX_TWI_FIMR_RXFFF_IM_X(x)      (((x) & GENMASK(4, 4)) >> 4)

#define FLEXCOM_FLEX_TWI_FIMR_RXFEF_IM(x)        (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_TWI_FIMR_RXFEF_IM_M         GENMASK(3, 3)
#define FLEXCOM_FLEX_TWI_FIMR_RXFEF_IM_X(x)      (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_TWI_FIMR_TXFTHF_IM(x)       (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_FIMR_TXFTHF_IM_M        GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_FIMR_TXFTHF_IM_X(x)     (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_FIMR_TXFFF_IM(x)        (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_FIMR_TXFFF_IM_M         GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_FIMR_TXFFF_IM_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_FIMR_TXFEF_IM(x)        ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_FIMR_TXFEF_IM_M         GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_FIMR_TXFEF_IM_X(x)      ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_DR */
#define FLEXCOM_FLEX_TWI_DR(t)    __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 208, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_DR_TRP(x)               (((x) << 3) & GENMASK(3, 3))
#define FLEXCOM_FLEX_TWI_DR_TRP_M                GENMASK(3, 3)
#define FLEXCOM_FLEX_TWI_DR_TRP_X(x)             (((x) & GENMASK(3, 3)) >> 3)

#define FLEXCOM_FLEX_TWI_DR_SWMATCH(x)           (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_DR_SWMATCH_M            GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_DR_SWMATCH_X(x)         (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_DR_CLKRQ(x)             (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_DR_CLKRQ_M              GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_DR_CLKRQ_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_DR_SWEN(x)              ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_DR_SWEN_M               GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_DR_SWEN_X(x)            ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_WPMR */
#define FLEXCOM_FLEX_TWI_WPMR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 228, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_WPMR_WPKEY(x)           (((x) << 8) & GENMASK(31, 8))
#define FLEXCOM_FLEX_TWI_WPMR_WPKEY_M            GENMASK(31, 8)
#define FLEXCOM_FLEX_TWI_WPMR_WPKEY_X(x)         (((x) & GENMASK(31, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_WPMR_WPCREN(x)          (((x) << 2) & GENMASK(2, 2))
#define FLEXCOM_FLEX_TWI_WPMR_WPCREN_M           GENMASK(2, 2)
#define FLEXCOM_FLEX_TWI_WPMR_WPCREN_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define FLEXCOM_FLEX_TWI_WPMR_WPITEN(x)          (((x) << 1) & GENMASK(1, 1))
#define FLEXCOM_FLEX_TWI_WPMR_WPITEN_M           GENMASK(1, 1)
#define FLEXCOM_FLEX_TWI_WPMR_WPITEN_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define FLEXCOM_FLEX_TWI_WPMR_WPEN(x)            ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_WPMR_WPEN_M             GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_WPMR_WPEN_X(x)          ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_WPSR */
#define FLEXCOM_FLEX_TWI_WPSR(t)  __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 232, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_WPSR_WPVSRC(x)          (((x) << 8) & GENMASK(31, 8))
#define FLEXCOM_FLEX_TWI_WPSR_WPVSRC_M           GENMASK(31, 8)
#define FLEXCOM_FLEX_TWI_WPSR_WPVSRC_X(x)        (((x) & GENMASK(31, 8)) >> 8)

#define FLEXCOM_FLEX_TWI_WPSR_WPVS(x)            ((x) & GENMASK(0, 0))
#define FLEXCOM_FLEX_TWI_WPSR_WPVS_M             GENMASK(0, 0)
#define FLEXCOM_FLEX_TWI_WPSR_WPVS_X(x)          ((x) & GENMASK(0, 0))

/*      FLEXCOM:FLEXCOM_TWI_REG:FLEX_TWI_VER */
#define FLEXCOM_FLEX_TWI_VER(t)   __REG(TARGET_FLEXCOM,\
					t, 5, 1536, 0, 1, 264, 252, 0, 1, 4)

#define FLEXCOM_FLEX_TWI_VER_MFN(x)              (((x) << 16) & GENMASK(18, 16))
#define FLEXCOM_FLEX_TWI_VER_MFN_M               GENMASK(18, 16)
#define FLEXCOM_FLEX_TWI_VER_MFN_X(x)            (((x) & GENMASK(18, 16)) >> 16)

#define FLEXCOM_FLEX_TWI_VER_VERSION(x)          ((x) & GENMASK(11, 0))
#define FLEXCOM_FLEX_TWI_VER_VERSION_M           GENMASK(11, 0)
#define FLEXCOM_FLEX_TWI_VER_VERSION_X(x)        ((x) & GENMASK(11, 0))

/*      GCB:CHIP_REGS:CHIP_ID */
#define GCB_CHIP_ID               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 0, 0, 1, 4)

#define GCB_CHIP_ID_REV_ID(x)                    (((x) << 28) & GENMASK(31, 28))
#define GCB_CHIP_ID_REV_ID_M                     GENMASK(31, 28)
#define GCB_CHIP_ID_REV_ID_X(x)                  (((x) & GENMASK(31, 28)) >> 28)

#define GCB_CHIP_ID_PART_ID(x)                   (((x) << 12) & GENMASK(27, 12))
#define GCB_CHIP_ID_PART_ID_M                    GENMASK(27, 12)
#define GCB_CHIP_ID_PART_ID_X(x)                 (((x) & GENMASK(27, 12)) >> 12)

#define GCB_CHIP_ID_MFG_ID(x)                    (((x) << 1) & GENMASK(11, 1))
#define GCB_CHIP_ID_MFG_ID_M                     GENMASK(11, 1)
#define GCB_CHIP_ID_MFG_ID_X(x)                  (((x) & GENMASK(11, 1)) >> 1)

#define GCB_CHIP_ID_ONE(x)                       ((x) & GENMASK(0, 0))
#define GCB_CHIP_ID_ONE_M                        GENMASK(0, 0)
#define GCB_CHIP_ID_ONE_X(x)                     ((x) & GENMASK(0, 0))

/*      GCB:CHIP_REGS:REVID_RAW */
#define GCB_REVID_RAW             __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 4, 0, 1, 4)

#define GCB_REVID_RAW_REV_ID_RAW(x)              ((x) & GENMASK(14, 0))
#define GCB_REVID_RAW_REV_ID_RAW_M               GENMASK(14, 0)
#define GCB_REVID_RAW_REV_ID_RAW_X(x)            ((x) & GENMASK(14, 0))

/*      GCB:CHIP_REGS:GPR */
#define GCB_GPR                   __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 8, 0, 1, 4)

/*      GCB:CHIP_REGS:SOFT_RST */
#define GCB_SOFT_RST              __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 12, 0, 1, 4)

#define GCB_SOFT_RST_SOFT_SWC_RST(x)             (((x) << 1) & GENMASK(1, 1))
#define GCB_SOFT_RST_SOFT_SWC_RST_M              GENMASK(1, 1)
#define GCB_SOFT_RST_SOFT_SWC_RST_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define GCB_SOFT_RST_SOFT_CHIP_RST(x)            ((x) & GENMASK(0, 0))
#define GCB_SOFT_RST_SOFT_CHIP_RST_M             GENMASK(0, 0)
#define GCB_SOFT_RST_SOFT_CHIP_RST_X(x)          ((x) & GENMASK(0, 0))

/*      GCB:CHIP_REGS:HW_STAT */
#define GCB_HW_STAT               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 16, 0, 1, 4)

#define GCB_HW_STAT_PLL_CONF(x)                  (((x) << 3) & GENMASK(4, 3))
#define GCB_HW_STAT_PLL_CONF_M                   GENMASK(4, 3)
#define GCB_HW_STAT_PLL_CONF_X(x)                (((x) & GENMASK(4, 3)) >> 3)

#define GCB_HW_STAT_SJTAG_MUX(x)                 ((x) & GENMASK(2, 0))
#define GCB_HW_STAT_SJTAG_MUX_M                  GENMASK(2, 0)
#define GCB_HW_STAT_SJTAG_MUX_X(x)               ((x) & GENMASK(2, 0))

/*      GCB:CHIP_REGS:HW_SGPIO_TO_SD_MAP_CFG */
#define GCB_HW_SGPIO_TO_SD_MAP_CFG(r) __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 20, r, 8, 4)

#define GCB_HW_SGPIO_TO_SD_MAP_CFG_SGPIO_TO_SD_SEL(x) ((x) & GENMASK(6, 0))
#define GCB_HW_SGPIO_TO_SD_MAP_CFG_SGPIO_TO_SD_SEL_M GENMASK(6, 0)
#define GCB_HW_SGPIO_TO_SD_MAP_CFG_SGPIO_TO_SD_SEL_X(x) ((x) & GENMASK(6, 0))

/*      GCB:CHIP_REGS:HW_SGPIO_TO_SERDES_SD_MAP_CFG */
#define GCB_HW_SGPIO_TO_SERDES_SD_MAP_CFG(r) __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 52, r, 3, 4)

#define GCB_HW_SGPIO_TO_SERDES_SD_MAP_CFG_SGPIO_TO_SERDES_SD_SEL(x)\
	((x) & GENMASK(6, 0))
#define GCB_HW_SGPIO_TO_SERDES_SD_MAP_CFG_SGPIO_TO_SERDES_SD_SEL_M GENMASK(6, 0)
#define GCB_HW_SGPIO_TO_SERDES_SD_MAP_CFG_SGPIO_TO_SERDES_SD_SEL_X(x)\
	((x) & GENMASK(6, 0))

/*      GCB:CHIP_REGS:BUILDID */
#define GCB_BUILDID               __REG(TARGET_GCB,\
					0, 1, 0, 0, 1, 68, 64, 0, 1, 4)

/*      GCB:SI_REGS:IF_CTRL */
#define GCB_IF_CTRL               __REG(TARGET_GCB,\
					0, 1, 68, 0, 1, 8, 0, 0, 1, 4)

#define GCB_IF_CTRL_IF_CTRL(x)                   ((x) & GENMASK(3, 0))
#define GCB_IF_CTRL_IF_CTRL_M                    GENMASK(3, 0)
#define GCB_IF_CTRL_IF_CTRL_X(x)                 ((x) & GENMASK(3, 0))

/*      GCB:SI_REGS:IF_CFGSTAT */
#define GCB_IF_CFGSTAT            __REG(TARGET_GCB,\
					0, 1, 68, 0, 1, 8, 4, 0, 1, 4)

#define GCB_IF_CFGSTAT_IF_STAT(x)                (((x) << 16) & GENMASK(16, 16))
#define GCB_IF_CFGSTAT_IF_STAT_M                 GENMASK(16, 16)
#define GCB_IF_CFGSTAT_IF_STAT_X(x)              (((x) & GENMASK(16, 16)) >> 16)

#define GCB_IF_CFGSTAT_IF_CFG(x)                 ((x) & GENMASK(3, 0))
#define GCB_IF_CFGSTAT_IF_CFG_M                  GENMASK(3, 0)
#define GCB_IF_CFGSTAT_IF_CFG_X(x)               ((x) & GENMASK(3, 0))

/*      GCB:SW_REGS:SW_INTR */
#define GCB_SW_INTR               __REG(TARGET_GCB,\
					0, 1, 76, 0, 1, 4, 0, 0, 1, 4)

#define GCB_SW_INTR_SW1_INTR(x)                  (((x) << 1) & GENMASK(1, 1))
#define GCB_SW_INTR_SW1_INTR_M                   GENMASK(1, 1)
#define GCB_SW_INTR_SW1_INTR_X(x)                (((x) & GENMASK(1, 1)) >> 1)

#define GCB_SW_INTR_SW0_INTR(x)                  ((x) & GENMASK(0, 0))
#define GCB_SW_INTR_SW0_INTR_M                   GENMASK(0, 0)
#define GCB_SW_INTR_SW0_INTR_X(x)                ((x) & GENMASK(0, 0))

/*      GCB:VCORE_ACCESS:VA_CTRL */
#define GCB_VA_CTRL               __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 0, 0, 1, 4)

#define GCB_VA_CTRL_VA_SIZE(x)                   (((x) << 4) & GENMASK(5, 4))
#define GCB_VA_CTRL_VA_SIZE_M                    GENMASK(5, 4)
#define GCB_VA_CTRL_VA_SIZE_X(x)                 (((x) & GENMASK(5, 4)) >> 4)

#define GCB_VA_CTRL_VA_ERR(x)                    (((x) << 2) & GENMASK(3, 2))
#define GCB_VA_CTRL_VA_ERR_M                     GENMASK(3, 2)
#define GCB_VA_CTRL_VA_ERR_X(x)                  (((x) & GENMASK(3, 2)) >> 2)

#define GCB_VA_CTRL_VA_BUSY_RD(x)                (((x) << 1) & GENMASK(1, 1))
#define GCB_VA_CTRL_VA_BUSY_RD_M                 GENMASK(1, 1)
#define GCB_VA_CTRL_VA_BUSY_RD_X(x)              (((x) & GENMASK(1, 1)) >> 1)

#define GCB_VA_CTRL_VA_BUSY(x)                   ((x) & GENMASK(0, 0))
#define GCB_VA_CTRL_VA_BUSY_M                    GENMASK(0, 0)
#define GCB_VA_CTRL_VA_BUSY_X(x)                 ((x) & GENMASK(0, 0))

/*      GCB:VCORE_ACCESS:VA_ADDR */
#define GCB_VA_ADDR               __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 4, 0, 1, 4)

/*      GCB:VCORE_ACCESS:VA_DATA */
#define GCB_VA_DATA               __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 8, 0, 1, 4)

/*      GCB:VCORE_ACCESS:VA_DATA_INCR */
#define GCB_VA_DATA_INCR          __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 12, 0, 1, 4)

/*      GCB:VCORE_ACCESS:VA_DATA_INERT */
#define GCB_VA_DATA_INERT         __REG(TARGET_GCB,\
					0, 1, 80, 0, 1, 20, 16, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET */
#define GCB_GPIO_OUT_SET          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 0, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET1 */
#define GCB_GPIO_OUT_SET1         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 4, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_SET2 */
#define GCB_GPIO_OUT_SET2         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 8, 0, 1, 4)

#define GCB_GPIO_OUT_SET2_G_OUT_SET2(x)          ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT_SET2_G_OUT_SET2_M           GENMASK(13, 0)
#define GCB_GPIO_OUT_SET2_G_OUT_SET2_X(x)        ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_OUT_CLR */
#define GCB_GPIO_OUT_CLR          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 12, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_CLR1 */
#define GCB_GPIO_OUT_CLR1         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 16, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT_CLR2 */
#define GCB_GPIO_OUT_CLR2         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 20, 0, 1, 4)

#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2(x)          ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2_M           GENMASK(13, 0)
#define GCB_GPIO_OUT_CLR2_G_OUT_CLR2_X(x)        ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_OUT */
#define GCB_GPIO_OUT              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 24, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT1 */
#define GCB_GPIO_OUT1             __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 28, 0, 1, 4)

/*      GCB:GPIO:GPIO_OUT2 */
#define GCB_GPIO_OUT2             __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 32, 0, 1, 4)

#define GCB_GPIO_OUT2_G_OUT2(x)                  ((x) & GENMASK(13, 0))
#define GCB_GPIO_OUT2_G_OUT2_M                   GENMASK(13, 0)
#define GCB_GPIO_OUT2_G_OUT2_X(x)                ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_IN */
#define GCB_GPIO_IN               __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 36, 0, 1, 4)

/*      GCB:GPIO:GPIO_IN1 */
#define GCB_GPIO_IN1              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 40, 0, 1, 4)

/*      GCB:GPIO:GPIO_IN2 */
#define GCB_GPIO_IN2              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 44, 0, 1, 4)

#define GCB_GPIO_IN2_G_IN2(x)                    ((x) & GENMASK(13, 0))
#define GCB_GPIO_IN2_G_IN2_M                     GENMASK(13, 0)
#define GCB_GPIO_IN2_G_IN2_X(x)                  ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_OE */
#define GCB_GPIO_OE               __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 48, 0, 1, 4)

/*      GCB:GPIO:GPIO_OE1 */
#define GCB_GPIO_OE1              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 52, 0, 1, 4)

/*      GCB:GPIO:GPIO_OE2 */
#define GCB_GPIO_OE2              __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 56, 0, 1, 4)

#define GCB_GPIO_OE2_G_OE2(x)                    ((x) & GENMASK(13, 0))
#define GCB_GPIO_OE2_G_OE2_M                     GENMASK(13, 0)
#define GCB_GPIO_OE2_G_OE2_X(x)                  ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_INTR */
#define GCB_GPIO_INTR             __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 60, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR1 */
#define GCB_GPIO_INTR1            __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 64, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR2 */
#define GCB_GPIO_INTR2            __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 68, 0, 1, 4)

#define GCB_GPIO_INTR2_G_INTR2(x)                ((x) & GENMASK(13, 0))
#define GCB_GPIO_INTR2_G_INTR2_M                 GENMASK(13, 0)
#define GCB_GPIO_INTR2_G_INTR2_X(x)              ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_INTR_ENA */
#define GCB_GPIO_INTR_ENA         __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 72, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR_ENA1 */
#define GCB_GPIO_INTR_ENA1        __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 76, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR_ENA2 */
#define GCB_GPIO_INTR_ENA2        __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 80, 0, 1, 4)

#define GCB_GPIO_INTR_ENA2_G_INTR_ENA2(x)        ((x) & GENMASK(13, 0))
#define GCB_GPIO_INTR_ENA2_G_INTR_ENA2_M         GENMASK(13, 0)
#define GCB_GPIO_INTR_ENA2_G_INTR_ENA2_X(x)      ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_INTR_IDENT */
#define GCB_GPIO_INTR_IDENT       __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 84, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR_IDENT1 */
#define GCB_GPIO_INTR_IDENT1      __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 88, 0, 1, 4)

/*      GCB:GPIO:GPIO_INTR_IDENT2 */
#define GCB_GPIO_INTR_IDENT2      __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 92, 0, 1, 4)

#define GCB_GPIO_INTR_IDENT2_G_INTR_IDENT2(x)    ((x) & GENMASK(13, 0))
#define GCB_GPIO_INTR_IDENT2_G_INTR_IDENT2_M     GENMASK(13, 0)
#define GCB_GPIO_INTR_IDENT2_G_INTR_IDENT2_X(x)  ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_ALT */
#define GCB_GPIO_ALT(r)           __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 96, r, 3, 4)

/*      GCB:GPIO:GPIO_ALT1 */
#define GCB_GPIO_ALT1(r)          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 108, r, 3, 4)

/*      GCB:GPIO:GPIO_ALT2 */
#define GCB_GPIO_ALT2(r)          __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 120, r, 3, 4)

#define GCB_GPIO_ALT2_G_ALT2(x)                  ((x) & GENMASK(13, 0))
#define GCB_GPIO_ALT2_G_ALT2_M                   GENMASK(13, 0)
#define GCB_GPIO_ALT2_G_ALT2_X(x)                ((x) & GENMASK(13, 0))

/*      GCB:GPIO:GPIO_SD_DEV_MAP */
#define GCB_GPIO_SD_DEV_MAP(r)    __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 132, r, 6, 4)

#define GCB_GPIO_SD_DEV_MAP_G_SD_DEV_MAP(x)      ((x) & GENMASK(2, 0))
#define GCB_GPIO_SD_DEV_MAP_G_SD_DEV_MAP_M       GENMASK(2, 0)
#define GCB_GPIO_SD_DEV_MAP_G_SD_DEV_MAP_X(x)    ((x) & GENMASK(2, 0))

/*      GCB:GPIO:GPIO_SD_SERDES_MAP */
#define GCB_GPIO_SD_SERDES_MAP(r) __REG(TARGET_GCB,\
					0, 1, 100, 0, 1, 180, 156, r, 6, 4)

#define GCB_GPIO_SD_SERDES_MAP_G_SD_SERDES_MAP(x) ((x) & GENMASK(1, 0))
#define GCB_GPIO_SD_SERDES_MAP_G_SD_SERDES_MAP_M GENMASK(1, 0)
#define GCB_GPIO_SD_SERDES_MAP_G_SD_SERDES_MAP_X(x) ((x) & GENMASK(1, 0))

/*      GCB:MIIM:MII_STATUS */
#define GCB_MII_STATUS(g)         __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 0, 0, 1, 4)

#define GCB_MII_STATUS_STAT_BUSY(x)              (((x) << 3) & GENMASK(3, 3))
#define GCB_MII_STATUS_STAT_BUSY_M               GENMASK(3, 3)
#define GCB_MII_STATUS_STAT_BUSY_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define GCB_MII_STATUS_STAT_OPR_PEND(x)          (((x) << 2) & GENMASK(2, 2))
#define GCB_MII_STATUS_STAT_OPR_PEND_M           GENMASK(2, 2)
#define GCB_MII_STATUS_STAT_OPR_PEND_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define GCB_MII_STATUS_STAT_PENDING_RD(x)        (((x) << 1) & GENMASK(1, 1))
#define GCB_MII_STATUS_STAT_PENDING_RD_M         GENMASK(1, 1)
#define GCB_MII_STATUS_STAT_PENDING_RD_X(x)      (((x) & GENMASK(1, 1)) >> 1)

#define GCB_MII_STATUS_STAT_PENDING_WR(x)        ((x) & GENMASK(0, 0))
#define GCB_MII_STATUS_STAT_PENDING_WR_M         GENMASK(0, 0)
#define GCB_MII_STATUS_STAT_PENDING_WR_X(x)      ((x) & GENMASK(0, 0))

#define GCB_MII_STATUS_SCAN_COMPLETE(x)          (((x) << 4) & GENMASK(4, 4))
#define GCB_MII_STATUS_SCAN_COMPLETE_M           GENMASK(4, 4)
#define GCB_MII_STATUS_SCAN_COMPLETE_X(x)        (((x) & GENMASK(4, 4)) >> 4)

/*      GCB:MIIM:MII_CFG_7226 */
#define GCB_MII_CFG_7226(g)       __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 4, 0, 1, 4)

#define GCB_MII_CFG_7226_7226_CFG_FIELD(x)       (((x) << 9) & GENMASK(9, 9))
#define GCB_MII_CFG_7226_7226_CFG_FIELD_M        GENMASK(9, 9)
#define GCB_MII_CFG_7226_7226_CFG_FIELD_X(x)     (((x) & GENMASK(9, 9)) >> 9)

/*      GCB:MIIM:MII_CMD */
#define GCB_MII_CMD(g)            __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 8, 0, 1, 4)

#define GCB_MII_CMD_CMD_VLD(x)                   (((x) << 31) & GENMASK(31, 31))
#define GCB_MII_CMD_CMD_VLD_M                    GENMASK(31, 31)
#define GCB_MII_CMD_CMD_VLD_X(x)                 (((x) & GENMASK(31, 31)) >> 31)

#define GCB_MII_CMD_CMD_PHYAD(x)                 (((x) << 25) & GENMASK(29, 25))
#define GCB_MII_CMD_CMD_PHYAD_M                  GENMASK(29, 25)
#define GCB_MII_CMD_CMD_PHYAD_X(x)               (((x) & GENMASK(29, 25)) >> 25)

#define GCB_MII_CMD_CMD_REGAD(x)                 (((x) << 20) & GENMASK(24, 20))
#define GCB_MII_CMD_CMD_REGAD_M                  GENMASK(24, 20)
#define GCB_MII_CMD_CMD_REGAD_X(x)               (((x) & GENMASK(24, 20)) >> 20)

#define GCB_MII_CMD_CMD_WRDATA(x)                (((x) << 4) & GENMASK(19, 4))
#define GCB_MII_CMD_CMD_WRDATA_M                 GENMASK(19, 4)
#define GCB_MII_CMD_CMD_WRDATA_X(x)              (((x) & GENMASK(19, 4)) >> 4)

#define GCB_MII_CMD_CMD_SINGLE_SCAN(x)           (((x) << 3) & GENMASK(3, 3))
#define GCB_MII_CMD_CMD_SINGLE_SCAN_M            GENMASK(3, 3)
#define GCB_MII_CMD_CMD_SINGLE_SCAN_X(x)         (((x) & GENMASK(3, 3)) >> 3)

#define GCB_MII_CMD_CMD_OPR_FIELD(x)             (((x) << 1) & GENMASK(2, 1))
#define GCB_MII_CMD_CMD_OPR_FIELD_M              GENMASK(2, 1)
#define GCB_MII_CMD_CMD_OPR_FIELD_X(x)           (((x) & GENMASK(2, 1)) >> 1)

#define GCB_MII_CMD_CMD_SCAN(x)                  ((x) & GENMASK(0, 0))
#define GCB_MII_CMD_CMD_SCAN_M                   GENMASK(0, 0)
#define GCB_MII_CMD_CMD_SCAN_X(x)                ((x) & GENMASK(0, 0))

/*      GCB:MIIM:MII_DATA */
#define GCB_MII_DATA(g)           __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 12, 0, 1, 4)

#define GCB_MII_DATA_DATA_SUCCESS(x)             (((x) << 16) & GENMASK(17, 16))
#define GCB_MII_DATA_DATA_SUCCESS_M              GENMASK(17, 16)
#define GCB_MII_DATA_DATA_SUCCESS_X(x)           (((x) & GENMASK(17, 16)) >> 16)

#define GCB_MII_DATA_DATA_RDDATA(x)              ((x) & GENMASK(15, 0))
#define GCB_MII_DATA_DATA_RDDATA_M               GENMASK(15, 0)
#define GCB_MII_DATA_DATA_RDDATA_X(x)            ((x) & GENMASK(15, 0))

/*      GCB:MIIM:MII_CFG */
#define GCB_MII_CFG(g)            __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 16, 0, 1, 4)

#define GCB_MII_CFG_DEADLOCK_FIX_DIS(x)          (((x) << 11) & GENMASK(11, 11))
#define GCB_MII_CFG_DEADLOCK_FIX_DIS_M           GENMASK(11, 11)
#define GCB_MII_CFG_DEADLOCK_FIX_DIS_X(x)        (((x) & GENMASK(11, 11)) >> 11)

#define GCB_MII_CFG_CFG_PRESCALE(x)              ((x) & GENMASK(7, 0))
#define GCB_MII_CFG_CFG_PRESCALE_M               GENMASK(7, 0)
#define GCB_MII_CFG_CFG_PRESCALE_X(x)            ((x) & GENMASK(7, 0))

#define GCB_MII_CFG_ST_CFG_FIELD(x)              (((x) << 9) & GENMASK(10, 9))
#define GCB_MII_CFG_ST_CFG_FIELD_M               GENMASK(10, 9)
#define GCB_MII_CFG_ST_CFG_FIELD_X(x)            (((x) & GENMASK(10, 9)) >> 9)

#define GCB_MII_CFG_CFG_DBG(x)                   (((x) << 8) & GENMASK(8, 8))
#define GCB_MII_CFG_CFG_DBG_M                    GENMASK(8, 8)
#define GCB_MII_CFG_CFG_DBG_X(x)                 (((x) & GENMASK(8, 8)) >> 8)

/*      GCB:MIIM:MII_SCAN_0 */
#define GCB_MII_SCAN_0(g)         __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 20, 0, 1, 4)

#define GCB_MII_SCAN_0_SCAN_PHYADHI(x)           (((x) << 5) & GENMASK(9, 5))
#define GCB_MII_SCAN_0_SCAN_PHYADHI_M            GENMASK(9, 5)
#define GCB_MII_SCAN_0_SCAN_PHYADHI_X(x)         (((x) & GENMASK(9, 5)) >> 5)

#define GCB_MII_SCAN_0_SCAN_PHYADLO(x)           ((x) & GENMASK(4, 0))
#define GCB_MII_SCAN_0_SCAN_PHYADLO_M            GENMASK(4, 0)
#define GCB_MII_SCAN_0_SCAN_PHYADLO_X(x)         ((x) & GENMASK(4, 0))

/*      GCB:MIIM:MII_SCAN_1 */
#define GCB_MII_SCAN_1(g)         __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 24, 0, 1, 4)

#define GCB_MII_SCAN_1_SCAN_MASK(x)              (((x) << 16) & GENMASK(31, 16))
#define GCB_MII_SCAN_1_SCAN_MASK_M               GENMASK(31, 16)
#define GCB_MII_SCAN_1_SCAN_MASK_X(x)            (((x) & GENMASK(31, 16)) >> 16)

#define GCB_MII_SCAN_1_SCAN_EXPECT(x)            ((x) & GENMASK(15, 0))
#define GCB_MII_SCAN_1_SCAN_EXPECT_M             GENMASK(15, 0)
#define GCB_MII_SCAN_1_SCAN_EXPECT_X(x)          ((x) & GENMASK(15, 0))

/*      GCB:MIIM:MII_RSLTS */
#define GCB_MII_RSLTS(g)          __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 28, 0, 1, 4)

/*      GCB:MIIM:MII_RSLTS_VLD */
#define GCB_MII_RSLTS_VLD(g)      __REG(TARGET_GCB,\
					0, 1, 280, g, 2, 36, 32, 0, 1, 4)

/*      GCB:MIIM_READ_SCAN:MII_STICKY */
#define GCB_MII_STICKY(r)         __REG(TARGET_GCB,\
					0, 1, 352, 0, 1, 8, 0, r, 2, 4)

/*      GCB:FLEXCOM_SHARED:SS_MASK */
#define GCB_SS_MASK(g, r)         __REG(TARGET_GCB,\
					0, 1, 360, g, 5, 8, 0, r, 2, 4)

#define GCB_SS_MASK_MASK(x)                      ((x) & GENMASK(20, 0))
#define GCB_SS_MASK_MASK_M                       GENMASK(20, 0)
#define GCB_SS_MASK_MASK_X(x)                    ((x) & GENMASK(20, 0))

/*      GCB:SIO_CTRL:SIO_INPUT_DATA */
#define GCB_SIO_INPUT_DATA(r)     __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 0, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_CFG */
#define GCB_SIO_CFG               __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 16, 0, 1, 4)

#define GCB_SIO_CFG_SIO_PWM_WINDOW(x)            (((x) << 20) & GENMASK(27, 20))
#define GCB_SIO_CFG_SIO_PWM_WINDOW_M             GENMASK(27, 20)
#define GCB_SIO_CFG_SIO_PWM_WINDOW_X(x)          (((x) & GENMASK(27, 20)) >> 20)

#define GCB_SIO_CFG_SIO_REDUCED_GAP(x)           (((x) << 19) & GENMASK(19, 19))
#define GCB_SIO_CFG_SIO_REDUCED_GAP_M            GENMASK(19, 19)
#define GCB_SIO_CFG_SIO_REDUCED_GAP_X(x)         (((x) & GENMASK(19, 19)) >> 19)

#define GCB_SIO_CFG_SIO_BMODE_1(x)               (((x) << 17) & GENMASK(18, 17))
#define GCB_SIO_CFG_SIO_BMODE_1_M                GENMASK(18, 17)
#define GCB_SIO_CFG_SIO_BMODE_1_X(x)             (((x) & GENMASK(18, 17)) >> 17)

#define GCB_SIO_CFG_SIO_BMODE_0(x)               (((x) << 15) & GENMASK(16, 15))
#define GCB_SIO_CFG_SIO_BMODE_0_M                GENMASK(16, 15)
#define GCB_SIO_CFG_SIO_BMODE_0_X(x)             (((x) & GENMASK(16, 15)) >> 15)

#define GCB_SIO_CFG_SIO_BLINK_RESET(x)           (((x) << 14) & GENMASK(14, 14))
#define GCB_SIO_CFG_SIO_BLINK_RESET_M            GENMASK(14, 14)
#define GCB_SIO_CFG_SIO_BLINK_RESET_X(x)         (((x) & GENMASK(14, 14)) >> 14)

#define GCB_SIO_CFG_SIO_BURST_GAP_DIS(x)         (((x) << 13) & GENMASK(13, 13))
#define GCB_SIO_CFG_SIO_BURST_GAP_DIS_M          GENMASK(13, 13)
#define GCB_SIO_CFG_SIO_BURST_GAP_DIS_X(x)       (((x) & GENMASK(13, 13)) >> 13)

#define GCB_SIO_CFG_SIO_BURST_GAP(x)             (((x) << 8) & GENMASK(12, 8))
#define GCB_SIO_CFG_SIO_BURST_GAP_M              GENMASK(12, 8)
#define GCB_SIO_CFG_SIO_BURST_GAP_X(x)           (((x) & GENMASK(12, 8)) >> 8)

#define GCB_SIO_CFG_SIO_SINGLE_SHOT(x)           (((x) << 7) & GENMASK(7, 7))
#define GCB_SIO_CFG_SIO_SINGLE_SHOT_M            GENMASK(7, 7)
#define GCB_SIO_CFG_SIO_SINGLE_SHOT_X(x)         (((x) & GENMASK(7, 7)) >> 7)

#define GCB_SIO_CFG_SIO_AUTO_REPEAT(x)           (((x) << 6) & GENMASK(6, 6))
#define GCB_SIO_CFG_SIO_AUTO_REPEAT_M            GENMASK(6, 6)
#define GCB_SIO_CFG_SIO_AUTO_REPEAT_X(x)         (((x) & GENMASK(6, 6)) >> 6)

#define GCB_SIO_CFG_SIO_LD_POLARITY(x)           (((x) << 5) & GENMASK(5, 5))
#define GCB_SIO_CFG_SIO_LD_POLARITY_M            GENMASK(5, 5)
#define GCB_SIO_CFG_SIO_LD_POLARITY_X(x)         (((x) & GENMASK(5, 5)) >> 5)

#define GCB_SIO_CFG_SIO_PORT_WIDTH(x)            (((x) << 3) & GENMASK(4, 3))
#define GCB_SIO_CFG_SIO_PORT_WIDTH_M             GENMASK(4, 3)
#define GCB_SIO_CFG_SIO_PORT_WIDTH_X(x)          (((x) & GENMASK(4, 3)) >> 3)

#define GCB_SIO_CFG_SIO_REVERSE_OUTPUT(x)        (((x) << 2) & GENMASK(2, 2))
#define GCB_SIO_CFG_SIO_REVERSE_OUTPUT_M         GENMASK(2, 2)
#define GCB_SIO_CFG_SIO_REVERSE_OUTPUT_X(x)      (((x) & GENMASK(2, 2)) >> 2)

#define GCB_SIO_CFG_SIO_REVERSE_INPUT(x)         (((x) << 1) & GENMASK(1, 1))
#define GCB_SIO_CFG_SIO_REVERSE_INPUT_M          GENMASK(1, 1)
#define GCB_SIO_CFG_SIO_REVERSE_INPUT_X(x)       (((x) & GENMASK(1, 1)) >> 1)

#define GCB_SIO_CFG_SIO_GLOB_INTR_ENA(x)         ((x) & GENMASK(0, 0))
#define GCB_SIO_CFG_SIO_GLOB_INTR_ENA_M          GENMASK(0, 0)
#define GCB_SIO_CFG_SIO_GLOB_INTR_ENA_X(x)       ((x) & GENMASK(0, 0))

/*      GCB:SIO_CTRL:SIO_CLOCK */
#define GCB_SIO_CLOCK             __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 20, 0, 1, 4)

#define GCB_SIO_CLOCK_SIO_CLK_FREQ(x)            (((x) << 8) & GENMASK(19, 8))
#define GCB_SIO_CLOCK_SIO_CLK_FREQ_M             GENMASK(19, 8)
#define GCB_SIO_CLOCK_SIO_CLK_FREQ_X(x)          (((x) & GENMASK(19, 8)) >> 8)

#define GCB_SIO_CLOCK_SYS_CLK_PERIOD(x)          ((x) & GENMASK(7, 0))
#define GCB_SIO_CLOCK_SYS_CLK_PERIOD_M           GENMASK(7, 0)
#define GCB_SIO_CLOCK_SYS_CLK_PERIOD_X(x)        ((x) & GENMASK(7, 0))

/*      GCB:SIO_CTRL:SIO_PORT_CFG */
#define GCB_SIO_PORT_CFG(r)       __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 24, r, 32, 4)

#define GCB_SIO_PORT_CFG_BIT_SOURCE(x)           (((x) << 12) & GENMASK(23, 12))
#define GCB_SIO_PORT_CFG_BIT_SOURCE_M            GENMASK(23, 12)
#define GCB_SIO_PORT_CFG_BIT_SOURCE_X(x)         (((x) & GENMASK(23, 12)) >> 12)

#define GCB_SIO_PORT_CFG_PWM_SOURCE(x)           (((x) << 4) & GENMASK(11, 4))
#define GCB_SIO_PORT_CFG_PWM_SOURCE_M            GENMASK(11, 4)
#define GCB_SIO_PORT_CFG_PWM_SOURCE_X(x)         (((x) & GENMASK(11, 4)) >> 4)

#define GCB_SIO_PORT_CFG_BIT_POLARITY(x)         ((x) & GENMASK(3, 0))
#define GCB_SIO_PORT_CFG_BIT_POLARITY_M          GENMASK(3, 0)
#define GCB_SIO_PORT_CFG_BIT_POLARITY_X(x)       ((x) & GENMASK(3, 0))

/*      GCB:SIO_CTRL:SIO_PORT_ENA */
#define GCB_SIO_PORT_ENA          __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 152, 0, 1, 4)

/*      GCB:SIO_CTRL:SIO_PWM_CFG */
#define GCB_SIO_PWM_CFG(r)        __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 156, r, 3, 4)

#define GCB_SIO_PWM_CFG_PWM_DUTY_CYCLE(x)        ((x) & GENMASK(7, 0))
#define GCB_SIO_PWM_CFG_PWM_DUTY_CYCLE_M         GENMASK(7, 0)
#define GCB_SIO_PWM_CFG_PWM_DUTY_CYCLE_X(x)      ((x) & GENMASK(7, 0))

/*      GCB:SIO_CTRL:SIO_INTR_POL */
#define GCB_SIO_INTR_POL(r)       __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 168, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_RAW */
#define GCB_SIO_INTR_RAW(r)       __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 184, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_TRIGGER0 */
#define GCB_SIO_INTR_TRIGGER0(r)  __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 200, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_TRIGGER1 */
#define GCB_SIO_INTR_TRIGGER1(r)  __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 216, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR */
#define GCB_SIO_INTR(r)           __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 232, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_ENA */
#define GCB_SIO_INTR_ENA(r)       __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 248, r, 4, 4)

/*      GCB:SIO_CTRL:SIO_INTR_IDENT */
#define GCB_SIO_INTR_IDENT(r)     __REG(TARGET_GCB,\
					0, 1, 400, 0, 1, 280, 264, r, 4, 4)

/*      GCB:FAN_CTRL:FAN_CFG */
#define GCB_FAN_CFG               __REG(TARGET_GCB,\
					0, 1, 680, 0, 1, 12, 0, 0, 1, 4)

#define GCB_FAN_CFG_DUTY_CYCLE(x)                (((x) << 16) & GENMASK(23, 16))
#define GCB_FAN_CFG_DUTY_CYCLE_M                 GENMASK(23, 16)
#define GCB_FAN_CFG_DUTY_CYCLE_X(x)              (((x) & GENMASK(23, 16)) >> 16)

#define GCB_FAN_CFG_INV_POL(x)                   (((x) << 3) & GENMASK(3, 3))
#define GCB_FAN_CFG_INV_POL_M                    GENMASK(3, 3)
#define GCB_FAN_CFG_INV_POL_X(x)                 (((x) & GENMASK(3, 3)) >> 3)

#define GCB_FAN_CFG_GATE_ENA(x)                  (((x) << 2) & GENMASK(2, 2))
#define GCB_FAN_CFG_GATE_ENA_M                   GENMASK(2, 2)
#define GCB_FAN_CFG_GATE_ENA_X(x)                (((x) & GENMASK(2, 2)) >> 2)

#define GCB_FAN_CFG_PWM_OPEN_COL_ENA(x)          (((x) << 1) & GENMASK(1, 1))
#define GCB_FAN_CFG_PWM_OPEN_COL_ENA_M           GENMASK(1, 1)
#define GCB_FAN_CFG_PWM_OPEN_COL_ENA_X(x)        (((x) & GENMASK(1, 1)) >> 1)

#define GCB_FAN_CFG_FAN_STAT_CFG(x)              ((x) & GENMASK(0, 0))
#define GCB_FAN_CFG_FAN_STAT_CFG_M               GENMASK(0, 0)
#define GCB_FAN_CFG_FAN_STAT_CFG_X(x)            ((x) & GENMASK(0, 0))

/*      GCB:FAN_CTRL:PWM_FREQ */
#define GCB_PWM_FREQ              __REG(TARGET_GCB,\
					0, 1, 680, 0, 1, 12, 4, 0, 1, 4)

#define GCB_PWM_FREQ_CLK_CYCLES_10US(x)          (((x) << 14) & GENMASK(23, 14))
#define GCB_PWM_FREQ_CLK_CYCLES_10US_M           GENMASK(23, 14)
#define GCB_PWM_FREQ_CLK_CYCLES_10US_X(x)        (((x) & GENMASK(23, 14)) >> 14)

#define GCB_PWM_FREQ_PWM_FREQ(x)                 ((x) & GENMASK(13, 0))
#define GCB_PWM_FREQ_PWM_FREQ_M                  GENMASK(13, 0)
#define GCB_PWM_FREQ_PWM_FREQ_X(x)               ((x) & GENMASK(13, 0))

/*      GCB:FAN_CTRL:FAN_CNT */
#define GCB_FAN_CNT               __REG(TARGET_GCB,\
					0, 1, 680, 0, 1, 12, 8, 0, 1, 4)

#define GCB_FAN_CNT_FAN_CNT(x)                   ((x) & GENMASK(15, 0))
#define GCB_FAN_CNT_FAN_CNT_M                    GENMASK(15, 0)
#define GCB_FAN_CNT_FAN_CNT_X(x)                 ((x) & GENMASK(15, 0))

/*      GCB:MEMITGR:MEMITGR_CTRL */
#define GCB_MEMITGR_CTRL          __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 0, 0, 1, 4)

#define GCB_MEMITGR_CTRL_ACTIVATE(x)             ((x) & GENMASK(0, 0))
#define GCB_MEMITGR_CTRL_ACTIVATE_M              GENMASK(0, 0)
#define GCB_MEMITGR_CTRL_ACTIVATE_X(x)           ((x) & GENMASK(0, 0))

/*      GCB:MEMITGR:MEMITGR_STAT */
#define GCB_MEMITGR_STAT          __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 4, 0, 1, 4)

#define GCB_MEMITGR_STAT_INDICATION_OVF(x)       (((x) << 5) & GENMASK(5, 5))
#define GCB_MEMITGR_STAT_INDICATION_OVF_M        GENMASK(5, 5)
#define GCB_MEMITGR_STAT_INDICATION_OVF_X(x)     (((x) & GENMASK(5, 5)) >> 5)

#define GCB_MEMITGR_STAT_INDICATION(x)           (((x) << 4) & GENMASK(4, 4))
#define GCB_MEMITGR_STAT_INDICATION_M            GENMASK(4, 4)
#define GCB_MEMITGR_STAT_INDICATION_X(x)         (((x) & GENMASK(4, 4)) >> 4)

#define GCB_MEMITGR_STAT_MODE_LISTEN(x)          (((x) << 3) & GENMASK(3, 3))
#define GCB_MEMITGR_STAT_MODE_LISTEN_M           GENMASK(3, 3)
#define GCB_MEMITGR_STAT_MODE_LISTEN_X(x)        (((x) & GENMASK(3, 3)) >> 3)

#define GCB_MEMITGR_STAT_MODE_DETECT(x)          (((x) << 2) & GENMASK(2, 2))
#define GCB_MEMITGR_STAT_MODE_DETECT_M           GENMASK(2, 2)
#define GCB_MEMITGR_STAT_MODE_DETECT_X(x)        (((x) & GENMASK(2, 2)) >> 2)

#define GCB_MEMITGR_STAT_MODE_IDLE(x)            (((x) << 1) & GENMASK(1, 1))
#define GCB_MEMITGR_STAT_MODE_IDLE_M             GENMASK(1, 1)
#define GCB_MEMITGR_STAT_MODE_IDLE_X(x)          (((x) & GENMASK(1, 1)) >> 1)

#define GCB_MEMITGR_STAT_MODE_BUSY(x)            ((x) & GENMASK(0, 0))
#define GCB_MEMITGR_STAT_MODE_BUSY_M             GENMASK(0, 0)
#define GCB_MEMITGR_STAT_MODE_BUSY_X(x)          ((x) & GENMASK(0, 0))

/*      GCB:MEMITGR:MEMITGR_INFO */
#define GCB_MEMITGR_INFO          __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 8, 0, 1, 4)

#define GCB_MEMITGR_INFO_MEM_ERR(x)              (((x) << 31) & GENMASK(31, 31))
#define GCB_MEMITGR_INFO_MEM_ERR_M               GENMASK(31, 31)
#define GCB_MEMITGR_INFO_MEM_ERR_X(x)            (((x) & GENMASK(31, 31)) >> 31)

#define GCB_MEMITGR_INFO_MEM_COR(x)              (((x) << 30) & GENMASK(30, 30))
#define GCB_MEMITGR_INFO_MEM_COR_M               GENMASK(30, 30)
#define GCB_MEMITGR_INFO_MEM_COR_X(x)            (((x) & GENMASK(30, 30)) >> 30)

#define GCB_MEMITGR_INFO_MEM_ERR_OVF(x)          (((x) << 29) & GENMASK(29, 29))
#define GCB_MEMITGR_INFO_MEM_ERR_OVF_M           GENMASK(29, 29)
#define GCB_MEMITGR_INFO_MEM_ERR_OVF_X(x)        (((x) & GENMASK(29, 29)) >> 29)

#define GCB_MEMITGR_INFO_MEM_COR_OVF(x)          (((x) << 28) & GENMASK(28, 28))
#define GCB_MEMITGR_INFO_MEM_COR_OVF_M           GENMASK(28, 28)
#define GCB_MEMITGR_INFO_MEM_COR_OVF_X(x)        (((x) & GENMASK(28, 28)) >> 28)

#define GCB_MEMITGR_INFO_MEM_ADDR(x)             ((x) & GENMASK(27, 0))
#define GCB_MEMITGR_INFO_MEM_ADDR_M              GENMASK(27, 0)
#define GCB_MEMITGR_INFO_MEM_ADDR_X(x)           ((x) & GENMASK(27, 0))

/*      GCB:MEMITGR:MEMITGR_IDX */
#define GCB_MEMITGR_IDX           __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 12, 0, 1, 4)

#define GCB_MEMITGR_IDX_MEM_IDX(x)               ((x) & GENMASK(15, 0))
#define GCB_MEMITGR_IDX_MEM_IDX_M                GENMASK(15, 0)
#define GCB_MEMITGR_IDX_MEM_IDX_X(x)             ((x) & GENMASK(15, 0))

/*      GCB:MEMITGR:MEMITGR_DIV */
#define GCB_MEMITGR_DIV           __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 16, 0, 1, 4)

#define GCB_MEMITGR_DIV_MEM_DIV(x)               ((x) & GENMASK(15, 0))
#define GCB_MEMITGR_DIV_MEM_DIV_M                GENMASK(15, 0)
#define GCB_MEMITGR_DIV_MEM_DIV_X(x)             ((x) & GENMASK(15, 0))

/*      GCB:MEMITGR:MEMITGR_DBG */
#define GCB_MEMITGR_DBG           __REG(TARGET_GCB,\
					0, 1, 692, 0, 1, 24, 20, 0, 1, 4)

#define GCB_MEMITGR_DBG_MEM_DIV_SENSE(x)         (((x) << 9) & GENMASK(9, 9))
#define GCB_MEMITGR_DBG_MEM_DIV_SENSE_M          GENMASK(9, 9)
#define GCB_MEMITGR_DBG_MEM_DIV_SENSE_X(x)       (((x) & GENMASK(9, 9)) >> 9)

#define GCB_MEMITGR_DBG_FORCE_INTR(x)            (((x) << 8) & GENMASK(8, 8))
#define GCB_MEMITGR_DBG_FORCE_INTR_M             GENMASK(8, 8)
#define GCB_MEMITGR_DBG_FORCE_INTR_X(x)          (((x) & GENMASK(8, 8)) >> 8)

#define GCB_MEMITGR_DBG_SYNC_IN(x)               (((x) << 7) & GENMASK(7, 7))
#define GCB_MEMITGR_DBG_SYNC_IN_M                GENMASK(7, 7)
#define GCB_MEMITGR_DBG_SYNC_IN_X(x)             (((x) & GENMASK(7, 7)) >> 7)

#define GCB_MEMITGR_DBG_ENA_IN(x)                (((x) << 6) & GENMASK(6, 6))
#define GCB_MEMITGR_DBG_ENA_IN_M                 GENMASK(6, 6)
#define GCB_MEMITGR_DBG_ENA_IN_X(x)              (((x) & GENMASK(6, 6)) >> 6)

#define GCB_MEMITGR_DBG_DATA_IN(x)               (((x) << 5) & GENMASK(5, 5))
#define GCB_MEMITGR_DBG_DATA_IN_M                GENMASK(5, 5)
#define GCB_MEMITGR_DBG_DATA_IN_X(x)             (((x) & GENMASK(5, 5)) >> 5)

#define GCB_MEMITGR_DBG_INTR_IN(x)               (((x) << 4) & GENMASK(4, 4))
#define GCB_MEMITGR_DBG_INTR_IN_M                GENMASK(4, 4)
#define GCB_MEMITGR_DBG_INTR_IN_X(x)             (((x) & GENMASK(4, 4)) >> 4)

#define GCB_MEMITGR_DBG_SYNC_OUT(x)              (((x) << 3) & GENMASK(3, 3))
#define GCB_MEMITGR_DBG_SYNC_OUT_M               GENMASK(3, 3)
#define GCB_MEMITGR_DBG_SYNC_OUT_X(x)            (((x) & GENMASK(3, 3)) >> 3)

#define GCB_MEMITGR_DBG_ENA_OUT(x)               (((x) << 2) & GENMASK(2, 2))
#define GCB_MEMITGR_DBG_ENA_OUT_M                GENMASK(2, 2)
#define GCB_MEMITGR_DBG_ENA_OUT_X(x)             (((x) & GENMASK(2, 2)) >> 2)

#define GCB_MEMITGR_DBG_FORCE_ENA(x)             (((x) << 1) & GENMASK(1, 1))
#define GCB_MEMITGR_DBG_FORCE_ENA_M              GENMASK(1, 1)
#define GCB_MEMITGR_DBG_FORCE_ENA_X(x)           (((x) & GENMASK(1, 1)) >> 1)

#define GCB_MEMITGR_DBG_DETECT_ENA(x)            ((x) & GENMASK(0, 0))
#define GCB_MEMITGR_DBG_DETECT_ENA_M             GENMASK(0, 0)
#define GCB_MEMITGR_DBG_DETECT_ENA_X(x)          ((x) & GENMASK(0, 0))

/*      GCB:ETHERACCESS:VRAP_ACCESS_STAT */
#define GCB_VRAP_ACCESS_STAT      __REG(TARGET_GCB,\
					0, 1, 716, 0, 1, 4, 0, 0, 1, 4)

#define GCB_VRAP_ACCESS_STAT_FRM_RECV_STICKY(x)  (((x) << 3) & GENMASK(3, 3))
#define GCB_VRAP_ACCESS_STAT_FRM_RECV_STICKY_M   GENMASK(3, 3)
#define GCB_VRAP_ACCESS_STAT_FRM_RECV_STICKY_X(x) (((x) & GENMASK(3, 3)) >> 3)

#define GCB_VRAP_ACCESS_STAT_CMD_INVALID_STICKY(x) (((x) << 2) & GENMASK(2, 2))
#define GCB_VRAP_ACCESS_STAT_CMD_INVALID_STICKY_M GENMASK(2, 2)
#define GCB_VRAP_ACCESS_STAT_CMD_INVALID_STICKY_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

#define GCB_VRAP_ACCESS_STAT_FRM_INVALID_STICKY(x) (((x) << 1) & GENMASK(1, 1))
#define GCB_VRAP_ACCESS_STAT_FRM_INVALID_STICKY_M GENMASK(1, 1)
#define GCB_VRAP_ACCESS_STAT_FRM_INVALID_STICKY_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define GCB_VRAP_ACCESS_STAT_REPLY_ABORT_STICKY(x) ((x) & GENMASK(0, 0))
#define GCB_VRAP_ACCESS_STAT_REPLY_ABORT_STICKY_M GENMASK(0, 0)
#define GCB_VRAP_ACCESS_STAT_REPLY_ABORT_STICKY_X(x) ((x) & GENMASK(0, 0))

/*      GIC400:DISTRIBUTOR:GICD_CTLR */
#define GIC400_GICD_CTLR          __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 0, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_TYPER */
#define GIC400_GICD_TYPER         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IIDR */
#define GIC400_GICD_IIDR          __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 8, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR0 */
#define GIC400_GICD_IGROUPR0      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 128, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR1 */
#define GIC400_GICD_IGROUPR1      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 132, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR2 */
#define GIC400_GICD_IGROUPR2      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 136, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR3 */
#define GIC400_GICD_IGROUPR3      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 140, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR4 */
#define GIC400_GICD_IGROUPR4      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 144, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR5 */
#define GIC400_GICD_IGROUPR5      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 148, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR6 */
#define GIC400_GICD_IGROUPR6      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 152, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR7 */
#define GIC400_GICD_IGROUPR7      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 156, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR8 */
#define GIC400_GICD_IGROUPR8      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 160, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR9 */
#define GIC400_GICD_IGROUPR9      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 164, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR10 */
#define GIC400_GICD_IGROUPR10     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 168, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR11 */
#define GIC400_GICD_IGROUPR11     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 172, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR12 */
#define GIC400_GICD_IGROUPR12     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 176, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR13 */
#define GIC400_GICD_IGROUPR13     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 180, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR14 */
#define GIC400_GICD_IGROUPR14     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 184, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IGROUPR15 */
#define GIC400_GICD_IGROUPR15     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 188, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER0 */
#define GIC400_GICD_ISENABLER0    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 256, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER1 */
#define GIC400_GICD_ISENABLER1    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 260, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER2 */
#define GIC400_GICD_ISENABLER2    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 264, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER3 */
#define GIC400_GICD_ISENABLER3    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 268, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER4 */
#define GIC400_GICD_ISENABLER4    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 272, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER5 */
#define GIC400_GICD_ISENABLER5    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 276, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER6 */
#define GIC400_GICD_ISENABLER6    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 280, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER7 */
#define GIC400_GICD_ISENABLER7    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 284, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER8 */
#define GIC400_GICD_ISENABLER8    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 288, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER9 */
#define GIC400_GICD_ISENABLER9    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 292, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER10 */
#define GIC400_GICD_ISENABLER10   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 296, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER11 */
#define GIC400_GICD_ISENABLER11   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 300, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER12 */
#define GIC400_GICD_ISENABLER12   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 304, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER13 */
#define GIC400_GICD_ISENABLER13   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 308, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER14 */
#define GIC400_GICD_ISENABLER14   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 312, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISENABLER15 */
#define GIC400_GICD_ISENABLER15   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 316, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER0 */
#define GIC400_GICD_ICENABLER0    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 384, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER1 */
#define GIC400_GICD_ICENABLER1    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 388, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER2 */
#define GIC400_GICD_ICENABLER2    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 392, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER3 */
#define GIC400_GICD_ICENABLER3    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 396, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER4 */
#define GIC400_GICD_ICENABLER4    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 400, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER5 */
#define GIC400_GICD_ICENABLER5    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 404, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER6 */
#define GIC400_GICD_ICENABLER6    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 408, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER7 */
#define GIC400_GICD_ICENABLER7    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 412, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER8 */
#define GIC400_GICD_ICENABLER8    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 416, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER9 */
#define GIC400_GICD_ICENABLER9    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 420, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER10 */
#define GIC400_GICD_ICENABLER10   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 424, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER11 */
#define GIC400_GICD_ICENABLER11   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 428, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER12 */
#define GIC400_GICD_ICENABLER12   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 432, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER13 */
#define GIC400_GICD_ICENABLER13   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 436, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER14 */
#define GIC400_GICD_ICENABLER14   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 440, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICENABLER15 */
#define GIC400_GICD_ICENABLER15   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 444, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR0 */
#define GIC400_GICD_ISPENDR0      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 512, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR1 */
#define GIC400_GICD_ISPENDR1      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 516, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR2 */
#define GIC400_GICD_ISPENDR2      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 520, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR3 */
#define GIC400_GICD_ISPENDR3      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 524, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR4 */
#define GIC400_GICD_ISPENDR4      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 528, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR5 */
#define GIC400_GICD_ISPENDR5      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 532, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR6 */
#define GIC400_GICD_ISPENDR6      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 536, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR7 */
#define GIC400_GICD_ISPENDR7      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 540, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR8 */
#define GIC400_GICD_ISPENDR8      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 544, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR9 */
#define GIC400_GICD_ISPENDR9      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 548, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR10 */
#define GIC400_GICD_ISPENDR10     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 552, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR11 */
#define GIC400_GICD_ISPENDR11     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 556, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR12 */
#define GIC400_GICD_ISPENDR12     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 560, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR13 */
#define GIC400_GICD_ISPENDR13     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 564, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR14 */
#define GIC400_GICD_ISPENDR14     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 568, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISPENDR15 */
#define GIC400_GICD_ISPENDR15     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 572, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR0 */
#define GIC400_GICD_ICPENDR0      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 640, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR1 */
#define GIC400_GICD_ICPENDR1      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 644, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR2 */
#define GIC400_GICD_ICPENDR2      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 648, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR3 */
#define GIC400_GICD_ICPENDR3      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 652, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR4 */
#define GIC400_GICD_ICPENDR4      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 656, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR5 */
#define GIC400_GICD_ICPENDR5      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 660, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR6 */
#define GIC400_GICD_ICPENDR6      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 664, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR7 */
#define GIC400_GICD_ICPENDR7      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 668, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR8 */
#define GIC400_GICD_ICPENDR8      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 672, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR9 */
#define GIC400_GICD_ICPENDR9      __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 676, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR10 */
#define GIC400_GICD_ICPENDR10     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 680, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR11 */
#define GIC400_GICD_ICPENDR11     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 684, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR12 */
#define GIC400_GICD_ICPENDR12     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 688, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR13 */
#define GIC400_GICD_ICPENDR13     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 692, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR14 */
#define GIC400_GICD_ICPENDR14     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 696, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICPENDR15 */
#define GIC400_GICD_ICPENDR15     __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 700, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER0 */
#define GIC400_GICD_ISACTIVER0    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 768, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER1 */
#define GIC400_GICD_ISACTIVER1    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 772, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER2 */
#define GIC400_GICD_ISACTIVER2    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 776, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER3 */
#define GIC400_GICD_ISACTIVER3    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 780, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER4 */
#define GIC400_GICD_ISACTIVER4    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 784, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER5 */
#define GIC400_GICD_ISACTIVER5    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 788, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER6 */
#define GIC400_GICD_ISACTIVER6    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 792, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER7 */
#define GIC400_GICD_ISACTIVER7    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 796, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER8 */
#define GIC400_GICD_ISACTIVER8    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 800, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER9 */
#define GIC400_GICD_ISACTIVER9    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 804, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER10 */
#define GIC400_GICD_ISACTIVER10   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 808, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER11 */
#define GIC400_GICD_ISACTIVER11   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 812, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER12 */
#define GIC400_GICD_ISACTIVER12   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 816, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER13 */
#define GIC400_GICD_ISACTIVER13   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 820, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER14 */
#define GIC400_GICD_ISACTIVER14   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 824, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ISACTIVER15 */
#define GIC400_GICD_ISACTIVER15   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 828, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER0 */
#define GIC400_GICD_ICACTIVER0    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 896, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER1 */
#define GIC400_GICD_ICACTIVER1    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 900, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER2 */
#define GIC400_GICD_ICACTIVER2    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 904, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER3 */
#define GIC400_GICD_ICACTIVER3    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 908, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER4 */
#define GIC400_GICD_ICACTIVER4    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 912, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER5 */
#define GIC400_GICD_ICACTIVER5    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 916, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER6 */
#define GIC400_GICD_ICACTIVER6    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 920, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER7 */
#define GIC400_GICD_ICACTIVER7    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 924, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER8 */
#define GIC400_GICD_ICACTIVER8    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 928, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER9 */
#define GIC400_GICD_ICACTIVER9    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 932, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER10 */
#define GIC400_GICD_ICACTIVER10   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 936, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER11 */
#define GIC400_GICD_ICACTIVER11   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 940, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER12 */
#define GIC400_GICD_ICACTIVER12   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 944, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER13 */
#define GIC400_GICD_ICACTIVER13   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 948, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER14 */
#define GIC400_GICD_ICACTIVER14   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 952, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICACTIVER15 */
#define GIC400_GICD_ICACTIVER15   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 956, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR0 */
#define GIC400_GICD_IPRIORITYR0   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1024, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR1 */
#define GIC400_GICD_IPRIORITYR1   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1028, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR2 */
#define GIC400_GICD_IPRIORITYR2   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1032, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR3 */
#define GIC400_GICD_IPRIORITYR3   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1036, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR4 */
#define GIC400_GICD_IPRIORITYR4   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1040, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR5 */
#define GIC400_GICD_IPRIORITYR5   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1044, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR6 */
#define GIC400_GICD_IPRIORITYR6   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1048, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR7 */
#define GIC400_GICD_IPRIORITYR7   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1052, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR8 */
#define GIC400_GICD_IPRIORITYR8   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1056, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR9 */
#define GIC400_GICD_IPRIORITYR9   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1060, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR10 */
#define GIC400_GICD_IPRIORITYR10  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1064, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR11 */
#define GIC400_GICD_IPRIORITYR11  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1068, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR12 */
#define GIC400_GICD_IPRIORITYR12  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1072, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR13 */
#define GIC400_GICD_IPRIORITYR13  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1076, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR14 */
#define GIC400_GICD_IPRIORITYR14  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1080, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR15 */
#define GIC400_GICD_IPRIORITYR15  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1084, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR16 */
#define GIC400_GICD_IPRIORITYR16  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1088, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR17 */
#define GIC400_GICD_IPRIORITYR17  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1092, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR18 */
#define GIC400_GICD_IPRIORITYR18  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1096, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR19 */
#define GIC400_GICD_IPRIORITYR19  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1100, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR20 */
#define GIC400_GICD_IPRIORITYR20  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1104, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR21 */
#define GIC400_GICD_IPRIORITYR21  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1108, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR22 */
#define GIC400_GICD_IPRIORITYR22  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1112, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR23 */
#define GIC400_GICD_IPRIORITYR23  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1116, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR24 */
#define GIC400_GICD_IPRIORITYR24  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1120, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR25 */
#define GIC400_GICD_IPRIORITYR25  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1124, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR26 */
#define GIC400_GICD_IPRIORITYR26  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1128, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR27 */
#define GIC400_GICD_IPRIORITYR27  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1132, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR28 */
#define GIC400_GICD_IPRIORITYR28  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1136, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR29 */
#define GIC400_GICD_IPRIORITYR29  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1140, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR30 */
#define GIC400_GICD_IPRIORITYR30  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1144, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR31 */
#define GIC400_GICD_IPRIORITYR31  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1148, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR32 */
#define GIC400_GICD_IPRIORITYR32  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1152, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR33 */
#define GIC400_GICD_IPRIORITYR33  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1156, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR34 */
#define GIC400_GICD_IPRIORITYR34  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1160, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR35 */
#define GIC400_GICD_IPRIORITYR35  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1164, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR36 */
#define GIC400_GICD_IPRIORITYR36  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1168, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR37 */
#define GIC400_GICD_IPRIORITYR37  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1172, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR38 */
#define GIC400_GICD_IPRIORITYR38  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1176, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR39 */
#define GIC400_GICD_IPRIORITYR39  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1180, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR40 */
#define GIC400_GICD_IPRIORITYR40  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1184, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR41 */
#define GIC400_GICD_IPRIORITYR41  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1188, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR42 */
#define GIC400_GICD_IPRIORITYR42  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1192, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR43 */
#define GIC400_GICD_IPRIORITYR43  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1196, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR44 */
#define GIC400_GICD_IPRIORITYR44  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1200, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR45 */
#define GIC400_GICD_IPRIORITYR45  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1204, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR46 */
#define GIC400_GICD_IPRIORITYR46  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1208, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR47 */
#define GIC400_GICD_IPRIORITYR47  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1212, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR48 */
#define GIC400_GICD_IPRIORITYR48  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1216, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR49 */
#define GIC400_GICD_IPRIORITYR49  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1220, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR50 */
#define GIC400_GICD_IPRIORITYR50  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1224, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR51 */
#define GIC400_GICD_IPRIORITYR51  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1228, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR52 */
#define GIC400_GICD_IPRIORITYR52  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1232, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR53 */
#define GIC400_GICD_IPRIORITYR53  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1236, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR54 */
#define GIC400_GICD_IPRIORITYR54  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1240, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR55 */
#define GIC400_GICD_IPRIORITYR55  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1244, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR56 */
#define GIC400_GICD_IPRIORITYR56  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1248, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR57 */
#define GIC400_GICD_IPRIORITYR57  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1252, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR58 */
#define GIC400_GICD_IPRIORITYR58  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1256, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR59 */
#define GIC400_GICD_IPRIORITYR59  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1260, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR60 */
#define GIC400_GICD_IPRIORITYR60  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1264, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR61 */
#define GIC400_GICD_IPRIORITYR61  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1268, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR62 */
#define GIC400_GICD_IPRIORITYR62  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1272, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR63 */
#define GIC400_GICD_IPRIORITYR63  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1276, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR64 */
#define GIC400_GICD_IPRIORITYR64  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1280, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR65 */
#define GIC400_GICD_IPRIORITYR65  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1284, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR66 */
#define GIC400_GICD_IPRIORITYR66  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1288, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR67 */
#define GIC400_GICD_IPRIORITYR67  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1292, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR68 */
#define GIC400_GICD_IPRIORITYR68  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1296, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR69 */
#define GIC400_GICD_IPRIORITYR69  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1300, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR70 */
#define GIC400_GICD_IPRIORITYR70  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1304, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR71 */
#define GIC400_GICD_IPRIORITYR71  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1308, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR72 */
#define GIC400_GICD_IPRIORITYR72  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1312, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR73 */
#define GIC400_GICD_IPRIORITYR73  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1316, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR74 */
#define GIC400_GICD_IPRIORITYR74  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1320, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR75 */
#define GIC400_GICD_IPRIORITYR75  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1324, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR76 */
#define GIC400_GICD_IPRIORITYR76  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1328, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR77 */
#define GIC400_GICD_IPRIORITYR77  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1332, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR78 */
#define GIC400_GICD_IPRIORITYR78  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1336, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR79 */
#define GIC400_GICD_IPRIORITYR79  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1340, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR80 */
#define GIC400_GICD_IPRIORITYR80  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1344, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR81 */
#define GIC400_GICD_IPRIORITYR81  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1348, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR82 */
#define GIC400_GICD_IPRIORITYR82  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1352, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR83 */
#define GIC400_GICD_IPRIORITYR83  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1356, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR84 */
#define GIC400_GICD_IPRIORITYR84  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1360, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR85 */
#define GIC400_GICD_IPRIORITYR85  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1364, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR86 */
#define GIC400_GICD_IPRIORITYR86  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1368, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR87 */
#define GIC400_GICD_IPRIORITYR87  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1372, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR88 */
#define GIC400_GICD_IPRIORITYR88  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1376, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR89 */
#define GIC400_GICD_IPRIORITYR89  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1380, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR90 */
#define GIC400_GICD_IPRIORITYR90  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1384, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR91 */
#define GIC400_GICD_IPRIORITYR91  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1388, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR92 */
#define GIC400_GICD_IPRIORITYR92  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1392, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR93 */
#define GIC400_GICD_IPRIORITYR93  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1396, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR94 */
#define GIC400_GICD_IPRIORITYR94  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1400, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR95 */
#define GIC400_GICD_IPRIORITYR95  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1404, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR96 */
#define GIC400_GICD_IPRIORITYR96  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1408, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR97 */
#define GIC400_GICD_IPRIORITYR97  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1412, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR98 */
#define GIC400_GICD_IPRIORITYR98  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1416, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR99 */
#define GIC400_GICD_IPRIORITYR99  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1420, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR100 */
#define GIC400_GICD_IPRIORITYR100 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1424, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR101 */
#define GIC400_GICD_IPRIORITYR101 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1428, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR102 */
#define GIC400_GICD_IPRIORITYR102 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1432, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR103 */
#define GIC400_GICD_IPRIORITYR103 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1436, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR104 */
#define GIC400_GICD_IPRIORITYR104 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1440, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR105 */
#define GIC400_GICD_IPRIORITYR105 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1444, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR106 */
#define GIC400_GICD_IPRIORITYR106 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1448, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR107 */
#define GIC400_GICD_IPRIORITYR107 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1452, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR108 */
#define GIC400_GICD_IPRIORITYR108 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1456, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR109 */
#define GIC400_GICD_IPRIORITYR109 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1460, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR110 */
#define GIC400_GICD_IPRIORITYR110 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1464, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR111 */
#define GIC400_GICD_IPRIORITYR111 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1468, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR112 */
#define GIC400_GICD_IPRIORITYR112 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1472, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR113 */
#define GIC400_GICD_IPRIORITYR113 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1476, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR114 */
#define GIC400_GICD_IPRIORITYR114 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1480, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR115 */
#define GIC400_GICD_IPRIORITYR115 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1484, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR116 */
#define GIC400_GICD_IPRIORITYR116 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1488, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR117 */
#define GIC400_GICD_IPRIORITYR117 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1492, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR118 */
#define GIC400_GICD_IPRIORITYR118 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1496, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR119 */
#define GIC400_GICD_IPRIORITYR119 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1500, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR120 */
#define GIC400_GICD_IPRIORITYR120 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1504, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR121 */
#define GIC400_GICD_IPRIORITYR121 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1508, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR122 */
#define GIC400_GICD_IPRIORITYR122 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1512, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR123 */
#define GIC400_GICD_IPRIORITYR123 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1516, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR124 */
#define GIC400_GICD_IPRIORITYR124 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1520, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR125 */
#define GIC400_GICD_IPRIORITYR125 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1524, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR126 */
#define GIC400_GICD_IPRIORITYR126 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1528, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_IPRIORITYR127 */
#define GIC400_GICD_IPRIORITYR127 __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 1532, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR0 */
#define GIC400_GICD_ITARGETSR0    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2048, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR1 */
#define GIC400_GICD_ITARGETSR1    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2052, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR2 */
#define GIC400_GICD_ITARGETSR2    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2056, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR3 */
#define GIC400_GICD_ITARGETSR3    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2060, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR4 */
#define GIC400_GICD_ITARGETSR4    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2064, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR5 */
#define GIC400_GICD_ITARGETSR5    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2068, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR6 */
#define GIC400_GICD_ITARGETSR6    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2072, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR7 */
#define GIC400_GICD_ITARGETSR7    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2076, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR8 */
#define GIC400_GICD_ITARGETSR8    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2080, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR9 */
#define GIC400_GICD_ITARGETSR9    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2084, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR10 */
#define GIC400_GICD_ITARGETSR10   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2088, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR11 */
#define GIC400_GICD_ITARGETSR11   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2092, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR12 */
#define GIC400_GICD_ITARGETSR12   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2096, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR13 */
#define GIC400_GICD_ITARGETSR13   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2100, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR14 */
#define GIC400_GICD_ITARGETSR14   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2104, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR15 */
#define GIC400_GICD_ITARGETSR15   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2108, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR16 */
#define GIC400_GICD_ITARGETSR16   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2112, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR17 */
#define GIC400_GICD_ITARGETSR17   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2116, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR18 */
#define GIC400_GICD_ITARGETSR18   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2120, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR19 */
#define GIC400_GICD_ITARGETSR19   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2124, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR20 */
#define GIC400_GICD_ITARGETSR20   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2128, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR21 */
#define GIC400_GICD_ITARGETSR21   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2132, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR22 */
#define GIC400_GICD_ITARGETSR22   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2136, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR23 */
#define GIC400_GICD_ITARGETSR23   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2140, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR24 */
#define GIC400_GICD_ITARGETSR24   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2144, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR25 */
#define GIC400_GICD_ITARGETSR25   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2148, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR26 */
#define GIC400_GICD_ITARGETSR26   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2152, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR27 */
#define GIC400_GICD_ITARGETSR27   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2156, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR28 */
#define GIC400_GICD_ITARGETSR28   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2160, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR29 */
#define GIC400_GICD_ITARGETSR29   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2164, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR30 */
#define GIC400_GICD_ITARGETSR30   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2168, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR31 */
#define GIC400_GICD_ITARGETSR31   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2172, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR32 */
#define GIC400_GICD_ITARGETSR32   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2176, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR33 */
#define GIC400_GICD_ITARGETSR33   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2180, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR34 */
#define GIC400_GICD_ITARGETSR34   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2184, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR35 */
#define GIC400_GICD_ITARGETSR35   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2188, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR36 */
#define GIC400_GICD_ITARGETSR36   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2192, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR37 */
#define GIC400_GICD_ITARGETSR37   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2196, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR38 */
#define GIC400_GICD_ITARGETSR38   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2200, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR39 */
#define GIC400_GICD_ITARGETSR39   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2204, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR40 */
#define GIC400_GICD_ITARGETSR40   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2208, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR41 */
#define GIC400_GICD_ITARGETSR41   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2212, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR42 */
#define GIC400_GICD_ITARGETSR42   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2216, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR43 */
#define GIC400_GICD_ITARGETSR43   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2220, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR44 */
#define GIC400_GICD_ITARGETSR44   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2224, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR45 */
#define GIC400_GICD_ITARGETSR45   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2228, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR46 */
#define GIC400_GICD_ITARGETSR46   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2232, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR47 */
#define GIC400_GICD_ITARGETSR47   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2236, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR48 */
#define GIC400_GICD_ITARGETSR48   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2240, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR49 */
#define GIC400_GICD_ITARGETSR49   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2244, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR50 */
#define GIC400_GICD_ITARGETSR50   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2248, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR51 */
#define GIC400_GICD_ITARGETSR51   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2252, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR52 */
#define GIC400_GICD_ITARGETSR52   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2256, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR53 */
#define GIC400_GICD_ITARGETSR53   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2260, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR54 */
#define GIC400_GICD_ITARGETSR54   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2264, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR55 */
#define GIC400_GICD_ITARGETSR55   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2268, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR56 */
#define GIC400_GICD_ITARGETSR56   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2272, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR57 */
#define GIC400_GICD_ITARGETSR57   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2276, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR58 */
#define GIC400_GICD_ITARGETSR58   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2280, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR59 */
#define GIC400_GICD_ITARGETSR59   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2284, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR60 */
#define GIC400_GICD_ITARGETSR60   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2288, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR61 */
#define GIC400_GICD_ITARGETSR61   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2292, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR62 */
#define GIC400_GICD_ITARGETSR62   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2296, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR63 */
#define GIC400_GICD_ITARGETSR63   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2300, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR64 */
#define GIC400_GICD_ITARGETSR64   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2304, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR65 */
#define GIC400_GICD_ITARGETSR65   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2308, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR66 */
#define GIC400_GICD_ITARGETSR66   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2312, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR67 */
#define GIC400_GICD_ITARGETSR67   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2316, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR68 */
#define GIC400_GICD_ITARGETSR68   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2320, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR69 */
#define GIC400_GICD_ITARGETSR69   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2324, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR70 */
#define GIC400_GICD_ITARGETSR70   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2328, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR71 */
#define GIC400_GICD_ITARGETSR71   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2332, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR72 */
#define GIC400_GICD_ITARGETSR72   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2336, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR73 */
#define GIC400_GICD_ITARGETSR73   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2340, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR74 */
#define GIC400_GICD_ITARGETSR74   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2344, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR75 */
#define GIC400_GICD_ITARGETSR75   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2348, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR76 */
#define GIC400_GICD_ITARGETSR76   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2352, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR77 */
#define GIC400_GICD_ITARGETSR77   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2356, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR78 */
#define GIC400_GICD_ITARGETSR78   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2360, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR79 */
#define GIC400_GICD_ITARGETSR79   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2364, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR80 */
#define GIC400_GICD_ITARGETSR80   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2368, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR81 */
#define GIC400_GICD_ITARGETSR81   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2372, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR82 */
#define GIC400_GICD_ITARGETSR82   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2376, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR83 */
#define GIC400_GICD_ITARGETSR83   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2380, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR84 */
#define GIC400_GICD_ITARGETSR84   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2384, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR85 */
#define GIC400_GICD_ITARGETSR85   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2388, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR86 */
#define GIC400_GICD_ITARGETSR86   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2392, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR87 */
#define GIC400_GICD_ITARGETSR87   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2396, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR88 */
#define GIC400_GICD_ITARGETSR88   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2400, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR89 */
#define GIC400_GICD_ITARGETSR89   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2404, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR90 */
#define GIC400_GICD_ITARGETSR90   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2408, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR91 */
#define GIC400_GICD_ITARGETSR91   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2412, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR92 */
#define GIC400_GICD_ITARGETSR92   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2416, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR93 */
#define GIC400_GICD_ITARGETSR93   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2420, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR94 */
#define GIC400_GICD_ITARGETSR94   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2424, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR95 */
#define GIC400_GICD_ITARGETSR95   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2428, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR96 */
#define GIC400_GICD_ITARGETSR96   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2432, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR97 */
#define GIC400_GICD_ITARGETSR97   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2436, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR98 */
#define GIC400_GICD_ITARGETSR98   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2440, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR99 */
#define GIC400_GICD_ITARGETSR99   __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2444, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR100 */
#define GIC400_GICD_ITARGETSR100  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2448, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR101 */
#define GIC400_GICD_ITARGETSR101  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2452, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR102 */
#define GIC400_GICD_ITARGETSR102  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2456, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR103 */
#define GIC400_GICD_ITARGETSR103  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2460, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR104 */
#define GIC400_GICD_ITARGETSR104  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2464, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR105 */
#define GIC400_GICD_ITARGETSR105  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2468, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR106 */
#define GIC400_GICD_ITARGETSR106  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2472, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR107 */
#define GIC400_GICD_ITARGETSR107  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2476, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR108 */
#define GIC400_GICD_ITARGETSR108  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2480, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR109 */
#define GIC400_GICD_ITARGETSR109  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2484, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR110 */
#define GIC400_GICD_ITARGETSR110  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2488, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR111 */
#define GIC400_GICD_ITARGETSR111  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2492, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR112 */
#define GIC400_GICD_ITARGETSR112  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2496, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR113 */
#define GIC400_GICD_ITARGETSR113  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2500, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR114 */
#define GIC400_GICD_ITARGETSR114  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2504, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR115 */
#define GIC400_GICD_ITARGETSR115  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2508, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR116 */
#define GIC400_GICD_ITARGETSR116  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2512, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR117 */
#define GIC400_GICD_ITARGETSR117  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2516, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR118 */
#define GIC400_GICD_ITARGETSR118  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2520, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR119 */
#define GIC400_GICD_ITARGETSR119  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2524, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR120 */
#define GIC400_GICD_ITARGETSR120  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2528, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR121 */
#define GIC400_GICD_ITARGETSR121  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2532, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR122 */
#define GIC400_GICD_ITARGETSR122  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2536, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR123 */
#define GIC400_GICD_ITARGETSR123  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2540, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR124 */
#define GIC400_GICD_ITARGETSR124  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2544, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR125 */
#define GIC400_GICD_ITARGETSR125  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2548, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR126 */
#define GIC400_GICD_ITARGETSR126  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2552, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ITARGETSR127 */
#define GIC400_GICD_ITARGETSR127  __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 2556, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR0 */
#define GIC400_GICD_ICFGR0        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3072, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR1 */
#define GIC400_GICD_ICFGR1        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3076, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR2 */
#define GIC400_GICD_ICFGR2        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3080, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR3 */
#define GIC400_GICD_ICFGR3        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3084, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR4 */
#define GIC400_GICD_ICFGR4        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3088, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR5 */
#define GIC400_GICD_ICFGR5        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3092, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR6 */
#define GIC400_GICD_ICFGR6        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3096, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR7 */
#define GIC400_GICD_ICFGR7        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3100, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR8 */
#define GIC400_GICD_ICFGR8        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3104, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR9 */
#define GIC400_GICD_ICFGR9        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3108, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR10 */
#define GIC400_GICD_ICFGR10       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3112, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR11 */
#define GIC400_GICD_ICFGR11       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3116, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR12 */
#define GIC400_GICD_ICFGR12       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3120, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR13 */
#define GIC400_GICD_ICFGR13       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3124, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR14 */
#define GIC400_GICD_ICFGR14       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3128, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR15 */
#define GIC400_GICD_ICFGR15       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3132, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR16 */
#define GIC400_GICD_ICFGR16       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3136, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR17 */
#define GIC400_GICD_ICFGR17       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3140, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR18 */
#define GIC400_GICD_ICFGR18       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3144, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR19 */
#define GIC400_GICD_ICFGR19       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3148, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR20 */
#define GIC400_GICD_ICFGR20       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3152, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR21 */
#define GIC400_GICD_ICFGR21       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3156, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR22 */
#define GIC400_GICD_ICFGR22       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3160, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR23 */
#define GIC400_GICD_ICFGR23       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3164, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR24 */
#define GIC400_GICD_ICFGR24       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3168, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR25 */
#define GIC400_GICD_ICFGR25       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3172, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR26 */
#define GIC400_GICD_ICFGR26       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3176, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR27 */
#define GIC400_GICD_ICFGR27       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3180, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR28 */
#define GIC400_GICD_ICFGR28       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3184, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR29 */
#define GIC400_GICD_ICFGR29       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3188, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR30 */
#define GIC400_GICD_ICFGR30       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3192, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_ICFGR31 */
#define GIC400_GICD_ICFGR31       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3196, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PPISR */
#define GIC400_GICD_PPISR         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3328, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR0 */
#define GIC400_GICD_SPISR0        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3332, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR1 */
#define GIC400_GICD_SPISR1        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3336, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR2 */
#define GIC400_GICD_SPISR2        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3340, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR3 */
#define GIC400_GICD_SPISR3        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3344, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR4 */
#define GIC400_GICD_SPISR4        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3348, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR5 */
#define GIC400_GICD_SPISR5        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3352, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR6 */
#define GIC400_GICD_SPISR6        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3356, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR7 */
#define GIC400_GICD_SPISR7        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3360, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR8 */
#define GIC400_GICD_SPISR8        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3364, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR9 */
#define GIC400_GICD_SPISR9        __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3368, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR10 */
#define GIC400_GICD_SPISR10       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3372, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR11 */
#define GIC400_GICD_SPISR11       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3376, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR12 */
#define GIC400_GICD_SPISR12       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3380, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR13 */
#define GIC400_GICD_SPISR13       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3384, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPISR14 */
#define GIC400_GICD_SPISR14       __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3388, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SGIR */
#define GIC400_GICD_SGIR          __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3840, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_CPENDSGIR0 */
#define GIC400_GICD_CPENDSGIR0    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3856, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_CPENDSGIR1 */
#define GIC400_GICD_CPENDSGIR1    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3860, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_CPENDSGIR2 */
#define GIC400_GICD_CPENDSGIR2    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3864, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_CPENDSGIR3 */
#define GIC400_GICD_CPENDSGIR3    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3868, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPENDSGIR0 */
#define GIC400_GICD_SPENDSGIR0    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3872, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPENDSGIR1 */
#define GIC400_GICD_SPENDSGIR1    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3876, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPENDSGIR2 */
#define GIC400_GICD_SPENDSGIR2    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3880, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_SPENDSGIR3 */
#define GIC400_GICD_SPENDSGIR3    __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 3884, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PIDR4 */
#define GIC400_GICD_PIDR4         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4048, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PIDR5 */
#define GIC400_GICD_PIDR5         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4052, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PIDR6 */
#define GIC400_GICD_PIDR6         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4056, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PIDR7 */
#define GIC400_GICD_PIDR7         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4060, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PIDR0 */
#define GIC400_GICD_PIDR0         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4064, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PIDR1 */
#define GIC400_GICD_PIDR1         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4068, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PIDR2 */
#define GIC400_GICD_PIDR2         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4072, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_PIDR3 */
#define GIC400_GICD_PIDR3         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4076, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_CIDR0 */
#define GIC400_GICD_CIDR0         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4080, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_CIDR1 */
#define GIC400_GICD_CIDR1         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4084, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_CIDR2 */
#define GIC400_GICD_CIDR2         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4088, 0, 1, 4)

/*      GIC400:DISTRIBUTOR:GICD_CIDR3 */
#define GIC400_GICD_CIDR3         __REG(TARGET_GIC400,\
					0, 1, 4096, 0, 1, 4, 4092, 0, 1, 4)

/*      GIC400:CPUIF:GICC_CTLR */
#define GIC400_GICC_CTLR          __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 0, 0, 1, 4)

/*      GIC400:CPUIF:GICC_PMR */
#define GIC400_GICC_PMR           __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 4, 0, 1, 4)

/*      GIC400:CPUIF:GICC_BPR */
#define GIC400_GICC_BPR           __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 8, 0, 1, 4)

/*      GIC400:CPUIF:GICC_IAR */
#define GIC400_GICC_IAR           __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 12, 0, 1, 4)

/*      GIC400:CPUIF:GICC_EOIR */
#define GIC400_GICC_EOIR          __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 16, 0, 1, 4)

/*      GIC400:CPUIF:GICC_RPR */
#define GIC400_GICC_RPR           __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 20, 0, 1, 4)

/*      GIC400:CPUIF:GICC_HPPIR */
#define GIC400_GICC_HPPIR         __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 24, 0, 1, 4)

/*      GIC400:CPUIF:GICC_ABPR */
#define GIC400_GICC_ABPR          __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 28, 0, 1, 4)

/*      GIC400:CPUIF:GICC_AIAR */
#define GIC400_GICC_AIAR          __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 32, 0, 1, 4)

/*      GIC400:CPUIF:GICC_AEOIR */
#define GIC400_GICC_AEOIR         __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 36, 0, 1, 4)

/*      GIC400:CPUIF:GICC_AHPPIR */
#define GIC400_GICC_AHPPIR        __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 40, 0, 1, 4)

/*      GIC400:CPUIF:GICC_APR0 */
#define GIC400_GICC_APR0          __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 208, 0, 1, 4)

/*      GIC400:CPUIF:GICC_NSAPR0 */
#define GIC400_GICC_NSAPR0        __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 224, 0, 1, 4)

/*      GIC400:CPUIF:GICC_IIDR */
#define GIC400_GICC_IIDR          __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 252, 0, 1, 4)

/*      GIC400:CPUIF:GICC_DIR */
#define GIC400_GICC_DIR           __REG(TARGET_GIC400,\
					0, 1, 8192, 0, 1, 8, 4096, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_HCR */
#define GIC400_VCPUIFHYP_GICH_HCR __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 0, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_VTR */
#define GIC400_VCPUIFHYP_GICH_VTR __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 4, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_VMCR */
#define GIC400_VCPUIFHYP_GICH_VMCR __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 8, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_MISR */
#define GIC400_VCPUIFHYP_GICH_MISR __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 16, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_EISR0 */
#define GIC400_VCPUIFHYP_GICH_EISR0 __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 32, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_ELSR0 */
#define GIC400_VCPUIFHYP_GICH_ELSR0 __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 48, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_APR0 */
#define GIC400_VCPUIFHYP_GICH_APR0 __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 240, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_LR0 */
#define GIC400_VCPUIFHYP_GICH_LR0 __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 256, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_LR1 */
#define GIC400_VCPUIFHYP_GICH_LR1 __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 260, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_LR2 */
#define GIC400_VCPUIFHYP_GICH_LR2 __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 264, 0, 1, 4)

/*      GIC400:VCPUIFHYP:VCPUIFHYP_GICH_LR3 */
#define GIC400_VCPUIFHYP_GICH_LR3 __REG(TARGET_GIC400,\
					0, 1, 16384, 0, 1, 512, 268, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_HCR */
#define GIC400_VCPUIFHYPALIAS0_GICH_HCR __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 0, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_VTR */
#define GIC400_VCPUIFHYPALIAS0_GICH_VTR __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 4, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_VMCR */
#define GIC400_VCPUIFHYPALIAS0_GICH_VMCR __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 8, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_MISR */
#define GIC400_VCPUIFHYPALIAS0_GICH_MISR __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 16, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_EISR0 */
#define GIC400_VCPUIFHYPALIAS0_GICH_EISR0 __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 32, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_ELSR0 */
#define GIC400_VCPUIFHYPALIAS0_GICH_ELSR0 __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 48, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_APR0 */
#define GIC400_VCPUIFHYPALIAS0_GICH_APR0 __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 240, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_LR0 */
#define GIC400_VCPUIFHYPALIAS0_GICH_LR0 __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 256, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_LR1 */
#define GIC400_VCPUIFHYPALIAS0_GICH_LR1 __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 260, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_LR2 */
#define GIC400_VCPUIFHYPALIAS0_GICH_LR2 __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 264, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS0:VCPUIFHYPALIAS0_GICH_LR3 */
#define GIC400_VCPUIFHYPALIAS0_GICH_LR3 __REG(TARGET_GIC400,\
					0, 1, 20480, 0, 1, 512, 268, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_HCR */
#define GIC400_VCPUIFHYPALIAS1_GICH_HCR __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 0, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_VTR */
#define GIC400_VCPUIFHYPALIAS1_GICH_VTR __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 4, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_VMCR */
#define GIC400_VCPUIFHYPALIAS1_GICH_VMCR __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 8, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_MISR */
#define GIC400_VCPUIFHYPALIAS1_GICH_MISR __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 16, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_EISR0 */
#define GIC400_VCPUIFHYPALIAS1_GICH_EISR0 __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 32, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_ELSR0 */
#define GIC400_VCPUIFHYPALIAS1_GICH_ELSR0 __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 48, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_APR0 */
#define GIC400_VCPUIFHYPALIAS1_GICH_APR0 __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 240, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_LR0 */
#define GIC400_VCPUIFHYPALIAS1_GICH_LR0 __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 256, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_LR1 */
#define GIC400_VCPUIFHYPALIAS1_GICH_LR1 __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 260, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_LR2 */
#define GIC400_VCPUIFHYPALIAS1_GICH_LR2 __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 264, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS1:VCPUIFHYPALIAS1_GICH_LR3 */
#define GIC400_VCPUIFHYPALIAS1_GICH_LR3 __REG(TARGET_GIC400,\
					0, 1, 20992, 0, 1, 512, 268, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_HCR */
#define GIC400_VCPUIFHYPALIAS2_GICH_HCR __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 0, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_VTR */
#define GIC400_VCPUIFHYPALIAS2_GICH_VTR __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 4, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_VMCR */
#define GIC400_VCPUIFHYPALIAS2_GICH_VMCR __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 8, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_MISR */
#define GIC400_VCPUIFHYPALIAS2_GICH_MISR __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 16, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_EISR0 */
#define GIC400_VCPUIFHYPALIAS2_GICH_EISR0 __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 32, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_ELSR0 */
#define GIC400_VCPUIFHYPALIAS2_GICH_ELSR0 __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 48, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_APR0 */
#define GIC400_VCPUIFHYPALIAS2_GICH_APR0 __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 240, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_LR0 */
#define GIC400_VCPUIFHYPALIAS2_GICH_LR0 __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 256, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_LR1 */
#define GIC400_VCPUIFHYPALIAS2_GICH_LR1 __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 260, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_LR2 */
#define GIC400_VCPUIFHYPALIAS2_GICH_LR2 __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 264, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS2:VCPUIFHYPALIAS2_GICH_LR3 */
#define GIC400_VCPUIFHYPALIAS2_GICH_LR3 __REG(TARGET_GIC400,\
					0, 1, 21504, 0, 1, 512, 268, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_HCR */
#define GIC400_VCPUIFHYPALIAS3_GICH_HCR __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 0, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_VTR */
#define GIC400_VCPUIFHYPALIAS3_GICH_VTR __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 4, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_VMCR */
#define GIC400_VCPUIFHYPALIAS3_GICH_VMCR __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 8, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_MISR */
#define GIC400_VCPUIFHYPALIAS3_GICH_MISR __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 16, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_EISR0 */
#define GIC400_VCPUIFHYPALIAS3_GICH_EISR0 __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 32, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_ELSR0 */
#define GIC400_VCPUIFHYPALIAS3_GICH_ELSR0 __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 48, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_APR0 */
#define GIC400_VCPUIFHYPALIAS3_GICH_APR0 __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 240, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_LR0 */
#define GIC400_VCPUIFHYPALIAS3_GICH_LR0 __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 256, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_LR1 */
#define GIC400_VCPUIFHYPALIAS3_GICH_LR1 __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 260, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_LR2 */
#define GIC400_VCPUIFHYPALIAS3_GICH_LR2 __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 264, 0, 1, 4)

/*      GIC400:VCPUIFHYPALIAS3:VCPUIFHYPALIAS3_GICH_LR3 */
#define GIC400_VCPUIFHYPALIAS3_GICH_LR3 __REG(TARGET_GIC400,\
					0, 1, 22016, 0, 1, 512, 268, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_CTLR */
#define GIC400_GICV_CTLR          __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 0, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_PMR */
#define GIC400_GICV_PMR           __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 4, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_BPR */
#define GIC400_GICV_BPR           __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 8, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_IAR */
#define GIC400_GICV_IAR           __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 12, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_EOIR */
#define GIC400_GICV_EOIR          __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 16, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_RPR */
#define GIC400_GICV_RPR           __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 20, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_HPPIR */
#define GIC400_GICV_HPPIR         __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 24, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_ABPR */
#define GIC400_GICV_ABPR          __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 28, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_AIAR */
#define GIC400_GICV_AIAR          __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 32, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_AEOIR */
#define GIC400_GICV_AEOIR         __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 36, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_AHPPIR */
#define GIC400_GICV_AHPPIR        __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 40, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_APR0 */
#define GIC400_GICV_APR0          __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 208, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_IIDR */
#define GIC400_GICV_IIDR          __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 252, 0, 1, 4)

/*      GIC400:VCPUIFVM:GICV_DIR */
#define GIC400_GICV_DIR           __REG(TARGET_GIC400,\
					0, 1, 24576, 0, 1, 8, 4096, 0, 1, 4)

/*      HMATRIX2:HMATRIX2_REGS:MATRIX_SRTSR0 */
#define HMATRIX2_MATRIX_SRTSR0    __REG(TARGET_HMATRIX2,\
					0, 1, 0, 0, 1, 716, 640, 0, 1, 4)

#define HMATRIX2_MATRIX_SRTSR0_SRTOP7_SRTSR0(x)  (((x) << 28) & GENMASK(31, 28))
#define HMATRIX2_MATRIX_SRTSR0_SRTOP7_SRTSR0_M   GENMASK(31, 28)
#define HMATRIX2_MATRIX_SRTSR0_SRTOP7_SRTSR0_X(x)\
	(((x) & GENMASK(31, 28)) >> 28)

#define HMATRIX2_MATRIX_SRTSR0_SRTOP6_SRTSR0(x)  (((x) << 24) & GENMASK(27, 24))
#define HMATRIX2_MATRIX_SRTSR0_SRTOP6_SRTSR0_M   GENMASK(27, 24)
#define HMATRIX2_MATRIX_SRTSR0_SRTOP6_SRTSR0_X(x)\
	(((x) & GENMASK(27, 24)) >> 24)

#define HMATRIX2_MATRIX_SRTSR0_SRTOP5_SRTSR0(x)  (((x) << 20) & GENMASK(23, 20))
#define HMATRIX2_MATRIX_SRTSR0_SRTOP5_SRTSR0_M   GENMASK(23, 20)
#define HMATRIX2_MATRIX_SRTSR0_SRTOP5_SRTSR0_X(x)\
	(((x) & GENMASK(23, 20)) >> 20)

#define HMATRIX2_MATRIX_SRTSR0_SRTOP4_SRTSR0(x)  (((x) << 16) & GENMASK(19, 16))
#define HMATRIX2_MATRIX_SRTSR0_SRTOP4_SRTSR0_M   GENMASK(19, 16)
#define HMATRIX2_MATRIX_SRTSR0_SRTOP4_SRTSR0_X(x)\
	(((x) & GENMASK(19, 16)) >> 16)

#define HMATRIX2_MATRIX_SRTSR0_SRTOP3_SRTSR0(x)  (((x) << 12) & GENMASK(15, 12))
#define HMATRIX2_MATRIX_SRTSR0_SRTOP3_SRTSR0_M   GENMASK(15, 12)
#define HMATRIX2_MATRIX_SRTSR0_SRTOP3_SRTSR0_X(x)\
	(((x) & GENMASK(15, 12)) >> 12)

#define HMATRIX2_MATRIX_SRTSR0_SRTOP2_SRTSR0(x)  (((x) << 8) & GENMASK(11, 8))
#define HMATRIX2_MATRIX_SRTSR0_SRTOP2_SRTSR0_M   GENMASK(11, 8)
#define HMATRIX2_MATRIX_SRTSR0_SRTOP2_SRTSR0_X(x) (((x) & GENMASK(11, 8)) >> 8)

#define HMATRIX2_MATRIX_SRTSR0_SRTOP1_SRTSR0(x)  (((x) << 4) & GENMASK(7, 4))
#define HMATRIX2_MATRIX_SRTSR0_SRTOP1_SRTSR0_M   GENMASK(7, 4)
#define HMATRIX2_MATRIX_SRTSR0_SRTOP1_SRTSR0_X(x) (((x) & GENMASK(7, 4)) >> 4)

#define HMATRIX2_MATRIX_SRTSR0_SRTOP0_SRTSR0(x)  ((x) & GENMASK(3, 0))
#define HMATRIX2_MATRIX_SRTSR0_SRTOP0_SRTSR0_M   GENMASK(3, 0)
#define HMATRIX2_MATRIX_SRTSR0_SRTOP0_SRTSR0_X(x) ((x) & GENMASK(3, 0))

/*      TIMERS:TIMERS:TIMER1LOADCOUNT */
#define TIMERS_TIMER1LOADCOUNT    __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 0, 0, 1, 4)

/*      TIMERS:TIMERS:TIMER1CURRENTVAL */
#define TIMERS_TIMER1CURRENTVAL   __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 4, 0, 1, 4)

/*      TIMERS:TIMERS:TIMER1CONTROLREG */
#define TIMERS_TIMER1CONTROLREG   __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 8, 0, 1, 4)

#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_ENABLE(x)\
	((x) & GENMASK(0, 0))
#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_ENABLE_M GENMASK(0, 0)
#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_ENABLE_X(x)\
	((x) & GENMASK(0, 0))

#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_MODE(x)\
	(((x) << 1) & GENMASK(1, 1))
#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_MODE_M GENMASK(1, 1)
#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_MODE_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_INTERRUPT_MASK(x)\
	(((x) << 2) & GENMASK(2, 2))
#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_INTERRUPT_MASK_M\
	GENMASK(2, 2)
#define TIMERS_TIMER1CONTROLREG_TIMER1CONTROLREG_TIMER_INTERRUPT_MASK_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

/*      TIMERS:TIMERS:TIMER1EOI */
#define TIMERS_TIMER1EOI          __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 12, 0, 1, 4)

#define TIMERS_TIMER1EOI_TIMERNEOI(x)            ((x) & GENMASK(0, 0))
#define TIMERS_TIMER1EOI_TIMERNEOI_M             GENMASK(0, 0)
#define TIMERS_TIMER1EOI_TIMERNEOI_X(x)          ((x) & GENMASK(0, 0))

/*      TIMERS:TIMERS:TIMER1INTSTAT */
#define TIMERS_TIMER1INTSTAT      __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 16, 0, 1, 4)

#define TIMERS_TIMER1INTSTAT_TIMERNINTSTATUS(x)  ((x) & GENMASK(0, 0))
#define TIMERS_TIMER1INTSTAT_TIMERNINTSTATUS_M   GENMASK(0, 0)
#define TIMERS_TIMER1INTSTAT_TIMERNINTSTATUS_X(x) ((x) & GENMASK(0, 0))

/*      TIMERS:TIMERS:TIMER2LOADCOUNT */
#define TIMERS_TIMER2LOADCOUNT    __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 20, 0, 1, 4)

/*      TIMERS:TIMERS:TIMER2CURRENTVAL */
#define TIMERS_TIMER2CURRENTVAL   __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 24, 0, 1, 4)

/*      TIMERS:TIMERS:TIMER2CONTROLREG */
#define TIMERS_TIMER2CONTROLREG   __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 28, 0, 1, 4)

#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_ENABLE(x)\
	((x) & GENMASK(0, 0))
#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_ENABLE_M GENMASK(0, 0)
#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_ENABLE_X(x)\
	((x) & GENMASK(0, 0))

#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_MODE(x)\
	(((x) << 1) & GENMASK(1, 1))
#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_MODE_M GENMASK(1, 1)
#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_MODE_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_INTERRUPT_MASK(x)\
	(((x) << 2) & GENMASK(2, 2))
#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_INTERRUPT_MASK_M\
	GENMASK(2, 2)
#define TIMERS_TIMER2CONTROLREG_TIMER2CONTROLREG_TIMER_INTERRUPT_MASK_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

/*      TIMERS:TIMERS:TIMER2EOI */
#define TIMERS_TIMER2EOI          __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 32, 0, 1, 4)

#define TIMERS_TIMER2EOI_TIMER2EOI(x)            ((x) & GENMASK(0, 0))
#define TIMERS_TIMER2EOI_TIMER2EOI_M             GENMASK(0, 0)
#define TIMERS_TIMER2EOI_TIMER2EOI_X(x)          ((x) & GENMASK(0, 0))

/*      TIMERS:TIMERS:TIMER2INTSTAT */
#define TIMERS_TIMER2INTSTAT      __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 36, 0, 1, 4)

#define TIMERS_TIMER2INTSTAT_TIMER2INTSTAT(x)    ((x) & GENMASK(0, 0))
#define TIMERS_TIMER2INTSTAT_TIMER2INTSTAT_M     GENMASK(0, 0)
#define TIMERS_TIMER2INTSTAT_TIMER2INTSTAT_X(x)  ((x) & GENMASK(0, 0))

/*      TIMERS:TIMERS:TIMER3LOADCOUNT */
#define TIMERS_TIMER3LOADCOUNT    __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 40, 0, 1, 4)

/*      TIMERS:TIMERS:TIMER3CURRENTVAL */
#define TIMERS_TIMER3CURRENTVAL   __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 44, 0, 1, 4)

/*      TIMERS:TIMERS:TIMER3CONTROLREG */
#define TIMERS_TIMER3CONTROLREG   __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 48, 0, 1, 4)

#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_ENABLE(x)\
	((x) & GENMASK(0, 0))
#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_ENABLE_M GENMASK(0, 0)
#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_ENABLE_X(x)\
	((x) & GENMASK(0, 0))

#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_MODE(x)\
	(((x) << 1) & GENMASK(1, 1))
#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_MODE_M GENMASK(1, 1)
#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_MODE_X(x)\
	(((x) & GENMASK(1, 1)) >> 1)

#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_INTERRUPT_MASK(x)\
	(((x) << 2) & GENMASK(2, 2))
#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_INTERRUPT_MASK_M\
	GENMASK(2, 2)
#define TIMERS_TIMER3CONTROLREG_TIMER3CONTROLREG_TIMER_INTERRUPT_MASK_X(x)\
	(((x) & GENMASK(2, 2)) >> 2)

/*      TIMERS:TIMERS:TIMER3EOI */
#define TIMERS_TIMER3EOI          __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 52, 0, 1, 4)

#define TIMERS_TIMER3EOI_TIMER3EOI(x)            ((x) & GENMASK(0, 0))
#define TIMERS_TIMER3EOI_TIMER3EOI_M             GENMASK(0, 0)
#define TIMERS_TIMER3EOI_TIMER3EOI_X(x)          ((x) & GENMASK(0, 0))

/*      TIMERS:TIMERS:TIMER3INTSTAT */
#define TIMERS_TIMER3INTSTAT      __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 56, 0, 1, 4)

#define TIMERS_TIMER3INTSTAT_TIMER3INTSTAT(x)    ((x) & GENMASK(0, 0))
#define TIMERS_TIMER3INTSTAT_TIMER3INTSTAT_M     GENMASK(0, 0)
#define TIMERS_TIMER3INTSTAT_TIMER3INTSTAT_X(x)  ((x) & GENMASK(0, 0))

/*      TIMERS:TIMERS:TIMERSINTSTATUS */
#define TIMERS_TIMERSINTSTATUS    __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 160, 0, 1, 4)

#define TIMERS_TIMERSINTSTATUS_TIMERSINTSTATUS(x) ((x) & GENMASK(2, 0))
#define TIMERS_TIMERSINTSTATUS_TIMERSINTSTATUS_M GENMASK(2, 0)
#define TIMERS_TIMERSINTSTATUS_TIMERSINTSTATUS_X(x) ((x) & GENMASK(2, 0))

/*      TIMERS:TIMERS:TIMERSEOI */
#define TIMERS_TIMERSEOI          __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 164, 0, 1, 4)

#define TIMERS_TIMERSEOI_TIMERSEOI(x)            ((x) & GENMASK(2, 0))
#define TIMERS_TIMERSEOI_TIMERSEOI_M             GENMASK(2, 0)
#define TIMERS_TIMERSEOI_TIMERSEOI_X(x)          ((x) & GENMASK(2, 0))

/*      TIMERS:TIMERS:TIMERSRAWINTSTATUS */
#define TIMERS_TIMERSRAWINTSTATUS __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 168, 0, 1, 4)

#define TIMERS_TIMERSRAWINTSTATUS_TIMERSRAWINTSTAT(x) ((x) & GENMASK(2, 0))
#define TIMERS_TIMERSRAWINTSTATUS_TIMERSRAWINTSTAT_M GENMASK(2, 0)
#define TIMERS_TIMERSRAWINTSTATUS_TIMERSRAWINTSTAT_X(x) ((x) & GENMASK(2, 0))

/*      TIMERS:TIMERS:TIMERS_COMP_VERSION */
#define TIMERS_TIMERS_COMP_VERSION __REG(TARGET_TIMERS,\
					0, 1, 0, 0, 1, 1024, 172, 0, 1, 4)

#endif /* _LAN966X_BAREMETAL_CPU_REGS_SR_H_ */
