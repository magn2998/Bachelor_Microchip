---
- accessor: true
  name: OTP_PRG
  width: 32
  address: 0
  desc: Indicates which parts of HW OTP memory have been programmed and are now write
    protected.
  fields:
  - name: OTP_PRG_FEAT_DIS
    width: 1
    desc: 'Set to ‘1’ to indicate that the FEAT_DIS has been programmed. Note: Setting
      this bit write protects the FEAT_DIS memory; OTP HW shall prevent writing to
      this memory once this bit is set.'
    offset: 3
  - name: OTP_PRG_PARTID
    width: 1
    desc: 'Set to ‘1’ to indicate that the PARTID has been programmed. Note: Setting
      this bit write protects the PARTID memory; OTP HW shall prevent writing to this
      memory once this bit is set.'
    offset: 2
  - name: OTP_PRG_JTAG_UUID
    width: 1
    desc: |-
      Set to ‘1’ to indicate that JTAG_UUID has been programmed.
      Note: Setting this bit write protects the JTAG_UUID memory; OTP HW shall prevent writing to this memory once this bit is set.
    offset: 1
  - name: OTP_PRG_SECURE_JTAG
    width: 1
    desc: |-
      Set to ‘1’ to indicate that SECURE_JTAG has been programmed.
      Note: Setting this bit write protects the SECURE_JTAG memory; OTP
      HW shall prevent writing to this memory once this bit is set.
    offset: 0
  prod_ate: true
  prod_cust: true
- accessor: true
  name: FEAT_DIS
  width: 8
  address: 4
  desc: Indicates which features are disabled. status will is reflected in CPU:CPU_REGS:OTP_STAT
  fields:
  - name: RTE_DISABLE
    width: 1
    desc: RTE is disabled for LAN9668
    offset: 5
  - name: SERDES2_DISABLE
    width: 1
    desc: SERDES2 is disabled for LAN9662
    offset: 4
  - name: CAN_DISABLE
    width: 1
    desc: Set to ‘1’ to disable CAN.
    offset: 3
  - name: CPU_SEC_DBG_DISABLE
    width: 1
    desc: Set to ‘1’ to disable secure debug for the CPU.
    offset: 2
  - name: CPU_DBG_DISABLE
    width: 1
    desc: Set to ‘1’ to disable debug for the CPU.
    offset: 1
  - name: CPU_DISABLE
    width: 1
    desc: Set to ‘1’ to disable the internal CPU.
    offset: 0
  prod_ate: true
  init_hw: X
- accessor: true
  name: PARTID
  width: 16
  address: 5
  desc: 'Indicates the Part ID. Is reflected in DEVCPU_GCB:CHIP_REGS:CHIP_ID.PART_ID '
  fields: []
  prod_ate: true
  init_hw: X
- accessor: true
  name: SERIAL_NUMBER
  width: 64
  address: 7
  desc: Production serial number
  fields: []
  init_boot: BL2
- name: TST_TRK
  width: 8
  address: 15
  desc: Test tracking
  fields: []
  prod_probe: true
- name: SECURE_JTAG
  width: 32
  address: 16
  desc: Indicates the Secure JTAG mode of operation.
  fields:
  - accessor: true
    name: JTAG_DISABLE
    width: 1
    desc: When set JTAG mode is set to “Closed”. This has priority over JTAG_MODE[1:0]
      setting.
    offset: 27
  - accessor: true
    name: JTAG_MODE
    width: 2
    desc: |-
      JTAG Mode of operation:
      §   00b - Open: Full JTAG access to CPU and boundary scan/test controller. Default state of the device.
      §   01b - Secure Mode 1: CPU JTAG access only available via secret key based challenge/response authentication. IEEE 1149.1 boundary scan supported when locked. Access to all other test modes are available after device is unlocked.
      §   10b - Secure Mode 2: JTAG access only available via secret key based challenge/response authentication. IEEE 1149.1 boundary scan not supported when locked.
      §   11b - Closed: Access is permanently disabled to both JTAG controllers.
      The value of this 2 bit field is forwarded to SJTAG:SJTAG_REGS:CTL.SJTAG_MODE
    offset: 0
  prod_cust: true
  init_hw: X
- name: WAFER_TRK
  width: 56
  address: 20
  desc: 'Wafer tracking info '
  fields: []
  prod_probe: true
- name: JTAG_UUID
  width: 80
  address: 32
  desc: 'Contains the 10-byte JTAG UUID. '
  fields: []
  prod_ate: true
  init_hw: X
- name: PROTECT_OTP_WRITE
  width: 32
  address: 64
  desc: Indicates which regions of OTP memory are write protected.
  fields:
  - name: OTP_WRITE_PROTECT
    width: 8
    desc: |-
      Each bit in the OTP_WRITE_PROTECT[7:0] field corresponds to a region of OTP memory with bit 0 = region 0, bit 1 = region 1 etc.
      Writing a ‘1’ to a bit in the OTP_WRITE_PROTECT[7:0] field locks the corresponding region permanently from being written to.
    offset: 0
- name: PROTECT_REGION_ADDR
  width: 256
  address: 68
  desc:
  fields:
  - name: PROTECT_REGION0_START_ADDR
    width: 16
    desc: Start address of protected region 0.
    offset: 240
  - name: PROTECT_REGION0_END_ADDR
    width: 16
    desc: End address of protected region 0.
    offset: 224
  - name: PROTECT_REGION1_START_ADDR
    width: 16
    desc: Start address of protected region 1.
    offset: 208
  - name: PROTECT_REGION1_END_ADDR
    width: 16
    desc: End address of protected region 1.
    offset: 192
  - name: PROTECT_REGION2_START_ADDR
    width: 16
    desc: Start address of protected region 2.
    offset: 176
  - name: PROTECT_REGION2_END_ADDR
    width: 16
    desc: End address of protected region 2.
    offset: 160
  - name: PROTECT_REGION3_START_ADDR
    width: 16
    desc: Start address of protected region 3.
    offset: 144
  - name: PROTECT_REGION3_END_ADDR
    width: 16
    desc: End address of protected region 3.
    offset: 128
  - name: PROTECT_REGION4_START_ADDR
    width: 16
    desc: Start address of protected region 4.
    offset: 112
  - name: PROTECT_REGION4_END_ADDR
    width: 16
    desc: End address of protected region 4.
    offset: 96
  - name: PROTECT_REGION5_START_ADDR
    width: 16
    desc: Start address of protected region 5.
    offset: 80
  - name: PROTECT_REGION5_END_ADDR
    width: 16
    desc: End address of protected region 5.
    offset: 64
  - name: PROTECT_REGION6_START_ADDR
    width: 16
    desc: Start address of protected region 6.
    offset: 48
  - name: PROTECT_REGION6_END_ADDR
    width: 16
    desc: End address of protected region 6.
    offset: 32
  - name: PROTECT_REGION7_START_ADDR
    width: 16
    desc: Start address of protected region 7.
    offset: 16
  - name: PROTECT_REGION7_END_ADDR
    width: 16
    desc: End address of protected region 7.
    offset: 0
  prod_cust: true
- name: DEF_MAC_ADDR_AND_LEN
  width: 64
  address: 100
  desc: Defines base MAC address of block of MAC addresses allocated by MCHP and the
    length of the block
  fields: []
  prod_ate: true
  init_boot: BL2?
- name: TRIM
  width: 64
  address: 108
  desc:
  fields:
  - name: UVOV_TRIM0
    width: 6
    desc: UVOV 0 trim value
    offset: 37
  - name: UVOV_TRIM1
    width: 6
    desc: UVOV 1 trim value
    offset: 31
  - name: UVOV_TRIM2
    width: 6
    desc: UVOV 2 trim value
    offset: 25
  - name: UVOV_TRIM3
    width: 6
    desc: UVOV 3 trim value
    offset: 19
  - name: COM_BIAS_BG_TC_TRIM
    width: 5
    desc: Common for all units (bench characterization)
    offset: 14
  - name: COM_BIAS_BG_MAG_TRIM
    width: 6
    desc: Trim bits are determined in ATE trim sequence and vary from part to part
    offset: 8
  - name: COM_RBIAS_TC_TRIM
    width: 2
    desc: Common for all units (bench characterization)
    offset: 6
  - name: COM_RBIAS_MAG_TRIM
    width: 6
    desc: Trim bits are determined in ATE trim sequence and vary from part to part
    offset: 0
- name: OTP_PCIE
  width: 104
  address: 116
  desc:
  fields:
  - name: OTP_PCIE_DISABLE_REV_3
    width: 1
    desc: TODO
    offset: 97
  - name: OTP_PCIE_DISABLE_REV_2
    width: 1
    desc: TODO
    offset: 96
  - name: OTP_PCIE_VENDOR_ID
    width: 16
    desc: TODO
    offset: 80
  - name: OTP_PCIE_VENDOR_SUB_ID
    width: 16
    desc: TODO
    offset: 64
  - name: OTP_PCIE_CLASS_CODE
    width: 24
    desc: TODO
    offset: 40
  - name: OTP_PCIE_REVISION_ID
    width: 8
    desc: TODO
    offset: 32
  - name: OTP_PCIE_SUBSYSTEM_ID
    width: 16
    desc: TODO
    offset: 16
  - name: OTP_PCIE_SUBSYSTEM_VENDOR_ID
    width: 16
    desc: TODO
    offset: 0
  prod_ate: true
- accessor: true
  name: OTP_FLAGS1
  width: 63
  address: 129
  desc:
  fields:
  - accessor: true
    name: OTP_FLAGS1_DISABLE_OTP_EMU
    width: 1
    desc: By default, OTP emulation is enabled. Setting this bit will permanently
      disable OTP emulation, and only values from the real OTP can be used.
    offset: 30
  - accessor: true
    name: OTP_FLAGS1_ENABLE_TBBR
    width: 1
    desc: If set to one, all the OTP_TBBR_* fields will be configured and the system
      will be setup for firmware authentication. This is a pre-request for firmware
      encryption
    offset: 29
  - accessor: true
    name: OTP_FLAGS1_ENABLE_FIRMWARE_ENCRYPT
    width: 1
    desc: If set to 1, firmware is assumed to be encrypted in flash, and will be decrypted
      on load.
    offset: 28
  - accessor: true
    name: OTP_FLAGS1_FIRMWARE_ENCRYPT_BSSK
    width: 1
    desc: If OTP_FLAGS1_ENABLE_FIRMWARE_ENCRYPT is set, firmware is assumed to be
      encrypted in flash, and will be decrypted on load. If   TP_FLAGS1_FIRMWARE_ENCRYPT_BSSK
      is set the HW Unique binding key will be used, otherwise the shared secret (SSK)
      will be used.
    offset: 27
  - accessor: true
    name: OTP_FLAGS1_ENABLE_DDR_ENCRYPT
    width: 1
    desc: If set to one, encryption of DDR memory will be enabled. This is required
      to achieve a fully secured system, but it as a performance penalty as it introduce
      a longer latency to the DDR memory. Attacks based on snooping/altering the DDR
      bus are complicated, and not all designs may require this level of protection.
    offset: 26
  - accessor: true
    name: OTP_FLAGS1_SJTAG_FREEZE
    width: 1
    desc: If this bit is set, the SJTAG:SJTAG_REGS:CTL.SJTAG_FREEZE register will
      be set   after the secure JTAG is configured. This means that the Secure JTAG
      cannot be unlocked by using the UART monitor or by using a PSCI call.
    offset: 25
  - accessor: true
    name: OTP_FLAGS1_QSPI_HEADER_DISABLE
    width: 1
    desc: TODO
    offset: 24
  - accessor: true
    name: OTP_FLAGS1_EMMC_HEADER_DISABLE
    width: 1
    desc: TODO
    offset: 23
  - accessor: true
    name: OTP_FLAGS1_COPY_USER_AREA_0
    width: 1
    desc: 'If set, copy the content of OTP_USER_AREA_0 to DDR memory. NOTE: This is
      shall be done in BL2 (not BL1) - designs without DDR memory cannot utilize this
      feature.'
    offset: 22
  - accessor: true
    name: OTP_FLAGS1_COPY_USER_AREA_1
    width: 1
    desc: 'If set, copy the content of OTP_USER_AREA_1 to DDR memory. NOTE: This is
      shall be done in BL2 (not BL1) - designs without DDR memory cannot utilize this
      feature.'
    offset: 21
  - accessor: true
    name: OTP_FLAGS1_COPY_USER_AREA_2
    width: 1
    desc: 'If set, copy the content of OTP_USER_AREA_2 to DDR memory. NOTE: This is
      shall be done in BL2 (not BL1) - designs without DDR memory cannot utilize this
      feature.'
    offset: 20
  - accessor: true
    name: OTP_FLAGS1_COPY_USER_AREA_3
    width: 1
    desc: 'If set, copy the content of OTP_USER_AREA_3 to DDR memory. NOTE: This is
      shall be done in BL2 (not BL1) - designs without DDR memory cannot utilize this
      feature.'
    offset: 19
  - accessor: true
    name: OTP_FLAGS1_STRAP_DISABLE_MASK
    width: 16
    desc: TODO
    offset: 3
  - accessor: true
    name: OTP_FLAGS1_ALLOW_CLEAR_TEXT
    width: 1
    desc: TODO
    offset: 2
  - accessor: true
    name: OTP_FLAGS1_ALLOW_SSK_ENCRYPTED
    width: 1
    desc: TODO
    offset: 1
  - accessor: true
    name: OTP_FLAGS1_ALLOW_BSSK_ENCRYPTED
    width: 1
    desc: TODO
    offset: 0
  prod_cust: true
- name: OTP_TBBR
  width: 1344
  address: 136
  desc:
  fields:
  - accessor: true
    name: OTP_TBBR_ROTPK
    width: 256
    desc: SHA-256 has of the Root of trust Public Key. See <<TBBR>> for detailed description.
    offset: 1088
  - accessor: true
    name: OTP_TBBR_HUK
    width: 256
    desc: TODO...
    offset: 832
  - accessor: true
    name: OTP_TBBR_EK
    width: 256
    desc: Endorsement key. TODO, See <<TBBR>> for details.
    offset: 576
  - accessor: true
    name: OTP_TBBR_SSK
    width: 256
    desc: Endorsement key. TODO, See <<TBBR>> for details.
    offset: 320
  - accessor: true
    name: OTP_TBBR_TNVCT
    width: 64
    desc: TODO
    offset: 256
  - accessor: true
    name: OTP_TBBR_NTNVCT
    width: 256
    desc: TODO
    offset: 0
  prod_cust: true
- name: OTP_USER
  width: 2816
  address: 304
  desc:
  fields:
  - accessor: true
    name: OTP_USER_AREA_0
    width: 256
    desc: If OTP_FLAGS1_COPY_USER_AREA_0 is set, then this area is raw copied to DDR
      memory by BL2. Content is not used by the boot ROM, but an insecure copy is
      made available for others to use. This can be used for stuff like MAC-addresses,
      board ID, board-eco, etc. OTP_FLAGS1_ENABLE_FIRMWARE_ENCRYPT
    offset: 2560
  - accessor: true
    name: OTP_USER_AREA_1
    width: 512
    desc: If OTP_FLAGS1_COPY_USER_AREA_1 is set, then this area is raw copied to DDR
      memory by BL2. Content is not used by the boot ROM, but an insecure copy is
      made available for others to use. This can be used for stuff like MAC-addresses,
      board ID, board-eco, etc.
    offset: 2048
  - accessor: true
    name: OTP_USER_AREA_2
    width: 1024
    desc: If OTP_FLAGS1_COPY_USER_AREA_2 is set, then this area is raw copied to DDR
      memory by BL2. Content is not used by the boot ROM, but an insecure copy is
      made available for others to use. This can be used for stuff like MAC-addresses,
      board ID, board-eco, etc.
    offset: 1024
  - accessor: true
    name: OTP_USER_AREA_3
    width: 1024
    desc: If OTP_FLAGS1_COPY_USER_AREA_3 is set, then this area is raw copied to DDR
      memory by BL2. Content is not used by the boot ROM, but an insecure copy is
      made available for others to use. This can be used for stuff like MAC-addresses,
      board ID, board-eco, etc.
    offset: 0
  prod_cust: true
